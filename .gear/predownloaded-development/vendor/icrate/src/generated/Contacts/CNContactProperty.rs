//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Contacts::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "Contacts_CNContactProperty")]
    pub struct CNContactProperty;

    #[cfg(feature = "Contacts_CNContactProperty")]
    unsafe impl ClassType for CNContactProperty {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "Contacts_CNContactProperty")]
unsafe impl NSCoding for CNContactProperty {}

#[cfg(feature = "Contacts_CNContactProperty")]
unsafe impl NSCopying for CNContactProperty {}

#[cfg(feature = "Contacts_CNContactProperty")]
unsafe impl NSObjectProtocol for CNContactProperty {}

#[cfg(feature = "Contacts_CNContactProperty")]
unsafe impl NSSecureCoding for CNContactProperty {}

extern_methods!(
    #[cfg(feature = "Contacts_CNContactProperty")]
    unsafe impl CNContactProperty {
        #[cfg(feature = "Contacts_CNContact")]
        #[method_id(@__retain_semantics Other contact)]
        pub unsafe fn contact(&self) -> Id<CNContact>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other key)]
        pub unsafe fn key(&self) -> Id<NSString>;

        #[method_id(@__retain_semantics Other value)]
        pub unsafe fn value(&self) -> Option<Id<AnyObject>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other identifier)]
        pub unsafe fn identifier(&self) -> Option<Id<NSString>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other label)]
        pub unsafe fn label(&self) -> Option<Id<NSString>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "Contacts_CNContactProperty")]
    unsafe impl CNContactProperty {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
