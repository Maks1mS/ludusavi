//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::MetricKit::*;

__inner_extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MetricKit_MXHistogramBucket")]
    pub struct MXHistogramBucket<UnitType: Message = AnyObject> {
        __superclass: NSObject,
        _inner0: PhantomData<*mut UnitType>,
        notunwindsafe: PhantomData<&'static mut ()>,
    }

    #[cfg(feature = "MetricKit_MXHistogramBucket")]
    unsafe impl<UnitType: Message> ClassType for MXHistogramBucket<UnitType> {
        type Super = NSObject;
        type Mutability = InteriorMutable;

        fn as_super(&self) -> &Self::Super {
            &self.__superclass
        }

        fn as_super_mut(&mut self) -> &mut Self::Super {
            &mut self.__superclass
        }
    }
);

#[cfg(feature = "MetricKit_MXHistogramBucket")]
unsafe impl<UnitType: Message + NSCoding> NSCoding for MXHistogramBucket<UnitType> {}

#[cfg(feature = "MetricKit_MXHistogramBucket")]
unsafe impl<UnitType: Message> NSObjectProtocol for MXHistogramBucket<UnitType> {}

#[cfg(feature = "MetricKit_MXHistogramBucket")]
unsafe impl<UnitType: Message + NSSecureCoding> NSSecureCoding for MXHistogramBucket<UnitType> {}

extern_methods!(
    #[cfg(feature = "MetricKit_MXHistogramBucket")]
    unsafe impl<UnitType: Message> MXHistogramBucket<UnitType> {
        #[cfg(feature = "Foundation_NSMeasurement")]
        #[method_id(@__retain_semantics Other bucketStart)]
        pub unsafe fn bucketStart(&self) -> Id<NSMeasurement<UnitType>>;

        #[cfg(feature = "Foundation_NSMeasurement")]
        #[method_id(@__retain_semantics Other bucketEnd)]
        pub unsafe fn bucketEnd(&self) -> Id<NSMeasurement<UnitType>>;

        #[method(bucketCount)]
        pub unsafe fn bucketCount(&self) -> NSUInteger;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MetricKit_MXHistogramBucket")]
    unsafe impl<UnitType: Message> MXHistogramBucket<UnitType> {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);

__inner_extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MetricKit_MXHistogram")]
    pub struct MXHistogram<UnitType: Message = AnyObject> {
        __superclass: NSObject,
        _inner0: PhantomData<*mut UnitType>,
        notunwindsafe: PhantomData<&'static mut ()>,
    }

    #[cfg(feature = "MetricKit_MXHistogram")]
    unsafe impl<UnitType: Message> ClassType for MXHistogram<UnitType> {
        type Super = NSObject;
        type Mutability = InteriorMutable;

        fn as_super(&self) -> &Self::Super {
            &self.__superclass
        }

        fn as_super_mut(&mut self) -> &mut Self::Super {
            &mut self.__superclass
        }
    }
);

#[cfg(feature = "MetricKit_MXHistogram")]
unsafe impl<UnitType: Message + NSCoding> NSCoding for MXHistogram<UnitType> {}

#[cfg(feature = "MetricKit_MXHistogram")]
unsafe impl<UnitType: Message> NSObjectProtocol for MXHistogram<UnitType> {}

#[cfg(feature = "MetricKit_MXHistogram")]
unsafe impl<UnitType: Message + NSSecureCoding> NSSecureCoding for MXHistogram<UnitType> {}

extern_methods!(
    #[cfg(feature = "MetricKit_MXHistogram")]
    unsafe impl<UnitType: Message> MXHistogram<UnitType> {
        #[method(totalBucketCount)]
        pub unsafe fn totalBucketCount(&self) -> NSUInteger;

        #[cfg(all(
            feature = "Foundation_NSEnumerator",
            feature = "MetricKit_MXHistogramBucket"
        ))]
        #[method_id(@__retain_semantics Other bucketEnumerator)]
        pub unsafe fn bucketEnumerator(&self) -> Id<NSEnumerator<MXHistogramBucket<UnitType>>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "MetricKit_MXHistogram")]
    unsafe impl<UnitType: Message> MXHistogram<UnitType> {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
