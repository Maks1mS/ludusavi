//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Speech::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "Speech_SFSpeechRecognitionMetadata")]
    pub struct SFSpeechRecognitionMetadata;

    #[cfg(feature = "Speech_SFSpeechRecognitionMetadata")]
    unsafe impl ClassType for SFSpeechRecognitionMetadata {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "Speech_SFSpeechRecognitionMetadata")]
unsafe impl NSCoding for SFSpeechRecognitionMetadata {}

#[cfg(feature = "Speech_SFSpeechRecognitionMetadata")]
unsafe impl NSCopying for SFSpeechRecognitionMetadata {}

#[cfg(feature = "Speech_SFSpeechRecognitionMetadata")]
unsafe impl NSObjectProtocol for SFSpeechRecognitionMetadata {}

#[cfg(feature = "Speech_SFSpeechRecognitionMetadata")]
unsafe impl NSSecureCoding for SFSpeechRecognitionMetadata {}

extern_methods!(
    #[cfg(feature = "Speech_SFSpeechRecognitionMetadata")]
    unsafe impl SFSpeechRecognitionMetadata {
        #[method(speakingRate)]
        pub unsafe fn speakingRate(&self) -> c_double;

        #[method(averagePauseDuration)]
        pub unsafe fn averagePauseDuration(&self) -> NSTimeInterval;

        #[method(speechStartTimestamp)]
        pub unsafe fn speechStartTimestamp(&self) -> NSTimeInterval;

        #[method(speechDuration)]
        pub unsafe fn speechDuration(&self) -> NSTimeInterval;

        #[cfg(feature = "Speech_SFVoiceAnalytics")]
        #[method_id(@__retain_semantics Other voiceAnalytics)]
        pub unsafe fn voiceAnalytics(&self) -> Option<Id<SFVoiceAnalytics>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "Speech_SFSpeechRecognitionMetadata")]
    unsafe impl SFSpeechRecognitionMetadata {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
