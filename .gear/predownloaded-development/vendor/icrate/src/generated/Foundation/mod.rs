//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#![allow(unused_imports)]
#![allow(deprecated)]
#[path = "FoundationErrors.rs"]
mod __FoundationErrors;
#[path = "FoundationLegacySwiftCompatibility.rs"]
mod __FoundationLegacySwiftCompatibility;
#[path = "NSAffineTransform.rs"]
mod __NSAffineTransform;
#[path = "NSAppleEventDescriptor.rs"]
mod __NSAppleEventDescriptor;
#[path = "NSAppleEventManager.rs"]
mod __NSAppleEventManager;
#[path = "NSAppleScript.rs"]
mod __NSAppleScript;
#[path = "NSArchiver.rs"]
mod __NSArchiver;
#[path = "NSArray.rs"]
mod __NSArray;
#[path = "NSAttributedString.rs"]
mod __NSAttributedString;
#[path = "NSAutoreleasePool.rs"]
mod __NSAutoreleasePool;
#[path = "NSBackgroundActivityScheduler.rs"]
mod __NSBackgroundActivityScheduler;
#[path = "NSBundle.rs"]
mod __NSBundle;
#[path = "NSByteCountFormatter.rs"]
mod __NSByteCountFormatter;
#[path = "NSByteOrder.rs"]
mod __NSByteOrder;
#[path = "NSCache.rs"]
mod __NSCache;
#[path = "NSCalendar.rs"]
mod __NSCalendar;
#[path = "NSCalendarDate.rs"]
mod __NSCalendarDate;
#[path = "NSCharacterSet.rs"]
mod __NSCharacterSet;
#[path = "NSClassDescription.rs"]
mod __NSClassDescription;
#[path = "NSCoder.rs"]
mod __NSCoder;
#[path = "NSComparisonPredicate.rs"]
mod __NSComparisonPredicate;
#[path = "NSCompoundPredicate.rs"]
mod __NSCompoundPredicate;
#[path = "NSConnection.rs"]
mod __NSConnection;
#[path = "NSData.rs"]
mod __NSData;
#[path = "NSDate.rs"]
mod __NSDate;
#[path = "NSDateComponentsFormatter.rs"]
mod __NSDateComponentsFormatter;
#[path = "NSDateFormatter.rs"]
mod __NSDateFormatter;
#[path = "NSDateInterval.rs"]
mod __NSDateInterval;
#[path = "NSDateIntervalFormatter.rs"]
mod __NSDateIntervalFormatter;
#[path = "NSDecimal.rs"]
mod __NSDecimal;
#[path = "NSDecimalNumber.rs"]
mod __NSDecimalNumber;
#[path = "NSDictionary.rs"]
mod __NSDictionary;
#[path = "NSDistantObject.rs"]
mod __NSDistantObject;
#[path = "NSDistributedLock.rs"]
mod __NSDistributedLock;
#[path = "NSDistributedNotificationCenter.rs"]
mod __NSDistributedNotificationCenter;
#[path = "NSEnergyFormatter.rs"]
mod __NSEnergyFormatter;
#[path = "NSEnumerator.rs"]
mod __NSEnumerator;
#[path = "NSError.rs"]
mod __NSError;
#[path = "NSException.rs"]
mod __NSException;
#[path = "NSExpression.rs"]
mod __NSExpression;
#[path = "NSExtensionContext.rs"]
mod __NSExtensionContext;
#[path = "NSExtensionItem.rs"]
mod __NSExtensionItem;
#[path = "NSExtensionRequestHandling.rs"]
mod __NSExtensionRequestHandling;
#[path = "NSFileCoordinator.rs"]
mod __NSFileCoordinator;
#[path = "NSFileHandle.rs"]
mod __NSFileHandle;
#[path = "NSFileManager.rs"]
mod __NSFileManager;
#[path = "NSFilePresenter.rs"]
mod __NSFilePresenter;
#[path = "NSFileVersion.rs"]
mod __NSFileVersion;
#[path = "NSFileWrapper.rs"]
mod __NSFileWrapper;
#[path = "NSFormatter.rs"]
mod __NSFormatter;
#[path = "NSGarbageCollector.rs"]
mod __NSGarbageCollector;
#[path = "NSGeometry.rs"]
mod __NSGeometry;
#[path = "NSHFSFileTypes.rs"]
mod __NSHFSFileTypes;
#[path = "NSHTTPCookie.rs"]
mod __NSHTTPCookie;
#[path = "NSHTTPCookieStorage.rs"]
mod __NSHTTPCookieStorage;
#[path = "NSHashTable.rs"]
mod __NSHashTable;
#[path = "NSHost.rs"]
mod __NSHost;
#[path = "NSISO8601DateFormatter.rs"]
mod __NSISO8601DateFormatter;
#[path = "NSIndexPath.rs"]
mod __NSIndexPath;
#[path = "NSIndexSet.rs"]
mod __NSIndexSet;
#[path = "NSInflectionRule.rs"]
mod __NSInflectionRule;
#[path = "NSInvocation.rs"]
mod __NSInvocation;
#[path = "NSItemProvider.rs"]
mod __NSItemProvider;
#[path = "NSJSONSerialization.rs"]
mod __NSJSONSerialization;
#[path = "NSKeyValueCoding.rs"]
mod __NSKeyValueCoding;
#[path = "NSKeyValueObserving.rs"]
mod __NSKeyValueObserving;
#[path = "NSKeyedArchiver.rs"]
mod __NSKeyedArchiver;
#[path = "NSLengthFormatter.rs"]
mod __NSLengthFormatter;
#[path = "NSLinguisticTagger.rs"]
mod __NSLinguisticTagger;
#[path = "NSListFormatter.rs"]
mod __NSListFormatter;
#[path = "NSLocale.rs"]
mod __NSLocale;
#[path = "NSLock.rs"]
mod __NSLock;
#[path = "NSMapTable.rs"]
mod __NSMapTable;
#[path = "NSMassFormatter.rs"]
mod __NSMassFormatter;
#[path = "NSMeasurement.rs"]
mod __NSMeasurement;
#[path = "NSMeasurementFormatter.rs"]
mod __NSMeasurementFormatter;
#[path = "NSMetadata.rs"]
mod __NSMetadata;
#[path = "NSMetadataAttributes.rs"]
mod __NSMetadataAttributes;
#[path = "NSMethodSignature.rs"]
mod __NSMethodSignature;
#[path = "NSMorphology.rs"]
mod __NSMorphology;
#[path = "NSNetServices.rs"]
mod __NSNetServices;
#[path = "NSNotification.rs"]
mod __NSNotification;
#[path = "NSNotificationQueue.rs"]
mod __NSNotificationQueue;
#[path = "NSNull.rs"]
mod __NSNull;
#[path = "NSNumberFormatter.rs"]
mod __NSNumberFormatter;
#[path = "NSObjCRuntime.rs"]
mod __NSObjCRuntime;
#[path = "NSObject.rs"]
mod __NSObject;
#[path = "NSObjectScripting.rs"]
mod __NSObjectScripting;
#[path = "NSOperation.rs"]
mod __NSOperation;
#[path = "NSOrderedCollectionChange.rs"]
mod __NSOrderedCollectionChange;
#[path = "NSOrderedCollectionDifference.rs"]
mod __NSOrderedCollectionDifference;
#[path = "NSOrderedSet.rs"]
mod __NSOrderedSet;
#[path = "NSOrthography.rs"]
mod __NSOrthography;
#[path = "NSPathUtilities.rs"]
mod __NSPathUtilities;
#[path = "NSPersonNameComponents.rs"]
mod __NSPersonNameComponents;
#[path = "NSPersonNameComponentsFormatter.rs"]
mod __NSPersonNameComponentsFormatter;
#[path = "NSPointerArray.rs"]
mod __NSPointerArray;
#[path = "NSPointerFunctions.rs"]
mod __NSPointerFunctions;
#[path = "NSPort.rs"]
mod __NSPort;
#[path = "NSPortCoder.rs"]
mod __NSPortCoder;
#[path = "NSPortMessage.rs"]
mod __NSPortMessage;
#[path = "NSPortNameServer.rs"]
mod __NSPortNameServer;
#[path = "NSPredicate.rs"]
mod __NSPredicate;
#[path = "NSProcessInfo.rs"]
mod __NSProcessInfo;
#[path = "NSProgress.rs"]
mod __NSProgress;
#[path = "NSPropertyList.rs"]
mod __NSPropertyList;
#[path = "NSProtocolChecker.rs"]
mod __NSProtocolChecker;
#[path = "NSProxy.rs"]
mod __NSProxy;
#[path = "NSRange.rs"]
mod __NSRange;
#[path = "NSRegularExpression.rs"]
mod __NSRegularExpression;
#[path = "NSRelativeDateTimeFormatter.rs"]
mod __NSRelativeDateTimeFormatter;
#[path = "NSRunLoop.rs"]
mod __NSRunLoop;
#[path = "NSScanner.rs"]
mod __NSScanner;
#[path = "NSScriptClassDescription.rs"]
mod __NSScriptClassDescription;
#[path = "NSScriptCoercionHandler.rs"]
mod __NSScriptCoercionHandler;
#[path = "NSScriptCommand.rs"]
mod __NSScriptCommand;
#[path = "NSScriptCommandDescription.rs"]
mod __NSScriptCommandDescription;
#[path = "NSScriptExecutionContext.rs"]
mod __NSScriptExecutionContext;
#[path = "NSScriptKeyValueCoding.rs"]
mod __NSScriptKeyValueCoding;
#[path = "NSScriptObjectSpecifiers.rs"]
mod __NSScriptObjectSpecifiers;
#[path = "NSScriptStandardSuiteCommands.rs"]
mod __NSScriptStandardSuiteCommands;
#[path = "NSScriptSuiteRegistry.rs"]
mod __NSScriptSuiteRegistry;
#[path = "NSScriptWhoseTests.rs"]
mod __NSScriptWhoseTests;
#[path = "NSSet.rs"]
mod __NSSet;
#[path = "NSSortDescriptor.rs"]
mod __NSSortDescriptor;
#[path = "NSSpellServer.rs"]
mod __NSSpellServer;
#[path = "NSStream.rs"]
mod __NSStream;
#[path = "NSString.rs"]
mod __NSString;
#[path = "NSTask.rs"]
mod __NSTask;
#[path = "NSTextCheckingResult.rs"]
mod __NSTextCheckingResult;
#[path = "NSThread.rs"]
mod __NSThread;
#[path = "NSTimeZone.rs"]
mod __NSTimeZone;
#[path = "NSTimer.rs"]
mod __NSTimer;
#[path = "NSURL.rs"]
mod __NSURL;
#[path = "NSURLAuthenticationChallenge.rs"]
mod __NSURLAuthenticationChallenge;
#[path = "NSURLCache.rs"]
mod __NSURLCache;
#[path = "NSURLConnection.rs"]
mod __NSURLConnection;
#[path = "NSURLCredential.rs"]
mod __NSURLCredential;
#[path = "NSURLCredentialStorage.rs"]
mod __NSURLCredentialStorage;
#[path = "NSURLDownload.rs"]
mod __NSURLDownload;
#[path = "NSURLError.rs"]
mod __NSURLError;
#[path = "NSURLHandle.rs"]
mod __NSURLHandle;
#[path = "NSURLProtectionSpace.rs"]
mod __NSURLProtectionSpace;
#[path = "NSURLProtocol.rs"]
mod __NSURLProtocol;
#[path = "NSURLRequest.rs"]
mod __NSURLRequest;
#[path = "NSURLResponse.rs"]
mod __NSURLResponse;
#[path = "NSURLSession.rs"]
mod __NSURLSession;
#[path = "NSUUID.rs"]
mod __NSUUID;
#[path = "NSUbiquitousKeyValueStore.rs"]
mod __NSUbiquitousKeyValueStore;
#[path = "NSUndoManager.rs"]
mod __NSUndoManager;
#[path = "NSUnit.rs"]
mod __NSUnit;
#[path = "NSUserActivity.rs"]
mod __NSUserActivity;
#[path = "NSUserDefaults.rs"]
mod __NSUserDefaults;
#[path = "NSUserNotification.rs"]
mod __NSUserNotification;
#[path = "NSUserScriptTask.rs"]
mod __NSUserScriptTask;
#[path = "NSValue.rs"]
mod __NSValue;
#[path = "NSValueTransformer.rs"]
mod __NSValueTransformer;
#[path = "NSXMLDTD.rs"]
mod __NSXMLDTD;
#[path = "NSXMLDTDNode.rs"]
mod __NSXMLDTDNode;
#[path = "NSXMLDocument.rs"]
mod __NSXMLDocument;
#[path = "NSXMLElement.rs"]
mod __NSXMLElement;
#[path = "NSXMLNode.rs"]
mod __NSXMLNode;
#[path = "NSXMLNodeOptions.rs"]
mod __NSXMLNodeOptions;
#[path = "NSXMLParser.rs"]
mod __NSXMLParser;
#[path = "NSXPCConnection.rs"]
mod __NSXPCConnection;
#[path = "NSZone.rs"]
mod __NSZone;

pub use self::__FoundationErrors::{
    NSBundleErrorMaximum, NSBundleErrorMinimum, NSBundleOnDemandResourceExceededMaximumSizeError,
    NSBundleOnDemandResourceInvalidTagError, NSBundleOnDemandResourceOutOfSpaceError,
    NSCloudSharingConflictError, NSCloudSharingErrorMaximum, NSCloudSharingErrorMinimum,
    NSCloudSharingNetworkFailureError, NSCloudSharingNoPermissionError, NSCloudSharingOtherError,
    NSCloudSharingQuotaExceededError, NSCloudSharingTooManyParticipantsError, NSCoderErrorMaximum,
    NSCoderErrorMinimum, NSCoderInvalidValueError, NSCoderReadCorruptError,
    NSCoderValueNotFoundError, NSCompressionErrorMaximum, NSCompressionErrorMinimum,
    NSCompressionFailedError, NSDecompressionFailedError, NSExecutableArchitectureMismatchError,
    NSExecutableErrorMaximum, NSExecutableErrorMinimum, NSExecutableLinkError,
    NSExecutableLoadError, NSExecutableNotLoadableError, NSExecutableRuntimeMismatchError,
    NSFeatureUnsupportedError, NSFileErrorMaximum, NSFileErrorMinimum, NSFileLockingError,
    NSFileManagerUnmountBusyError, NSFileManagerUnmountUnknownError, NSFileNoSuchFileError,
    NSFileReadCorruptFileError, NSFileReadInapplicableStringEncodingError,
    NSFileReadInvalidFileNameError, NSFileReadNoPermissionError, NSFileReadNoSuchFileError,
    NSFileReadTooLargeError, NSFileReadUnknownError, NSFileReadUnknownStringEncodingError,
    NSFileReadUnsupportedSchemeError, NSFileWriteFileExistsError,
    NSFileWriteInapplicableStringEncodingError, NSFileWriteInvalidFileNameError,
    NSFileWriteNoPermissionError, NSFileWriteOutOfSpaceError, NSFileWriteUnknownError,
    NSFileWriteUnsupportedSchemeError, NSFileWriteVolumeReadOnlyError, NSFormattingError,
    NSFormattingErrorMaximum, NSFormattingErrorMinimum, NSKeyValueValidationError,
    NSPropertyListErrorMaximum, NSPropertyListErrorMinimum, NSPropertyListReadCorruptError,
    NSPropertyListReadStreamError, NSPropertyListReadUnknownVersionError,
    NSPropertyListWriteInvalidError, NSPropertyListWriteStreamError, NSUbiquitousFileErrorMaximum,
    NSUbiquitousFileErrorMinimum, NSUbiquitousFileNotUploadedDueToQuotaError,
    NSUbiquitousFileUbiquityServerNotAvailable, NSUbiquitousFileUnavailableError,
    NSUserActivityConnectionUnavailableError, NSUserActivityErrorMaximum,
    NSUserActivityErrorMinimum, NSUserActivityHandoffFailedError,
    NSUserActivityHandoffUserInfoTooLargeError, NSUserActivityRemoteApplicationTimedOutError,
    NSUserCancelledError, NSValidationErrorMaximum, NSValidationErrorMinimum,
    NSXPCConnectionCodeSigningRequirementFailure, NSXPCConnectionErrorMaximum,
    NSXPCConnectionErrorMinimum, NSXPCConnectionInterrupted, NSXPCConnectionInvalid,
    NSXPCConnectionReplyInvalid,
};
#[cfg(feature = "Foundation_NSAffineTransform")]
pub use self::__NSAffineTransform::NSAffineTransform;
pub use self::__NSAffineTransform::NSAffineTransformStruct;
#[cfg(feature = "Foundation_NSAppleEventDescriptor")]
pub use self::__NSAppleEventDescriptor::NSAppleEventDescriptor;
pub use self::__NSAppleEventDescriptor::{
    NSAppleEventSendAlwaysInteract, NSAppleEventSendCanInteract, NSAppleEventSendCanSwitchLayer,
    NSAppleEventSendDefaultOptions, NSAppleEventSendDontAnnotate, NSAppleEventSendDontExecute,
    NSAppleEventSendDontRecord, NSAppleEventSendNeverInteract, NSAppleEventSendNoReply,
    NSAppleEventSendOptions, NSAppleEventSendQueueReply, NSAppleEventSendWaitForReply,
};
#[cfg(feature = "Foundation_NSAppleEventManager")]
pub use self::__NSAppleEventManager::NSAppleEventManager;
pub use self::__NSAppleEventManager::NSAppleEventManagerSuspensionID;
pub use self::__NSAppleEventManager::NSAppleEventManagerWillProcessFirstEventNotification;
pub use self::__NSAppleEventManager::NSAppleEventTimeOutDefault;
pub use self::__NSAppleEventManager::NSAppleEventTimeOutNone;
#[cfg(feature = "Foundation_NSAppleScript")]
pub use self::__NSAppleScript::NSAppleScript;
pub use self::__NSAppleScript::NSAppleScriptErrorAppName;
pub use self::__NSAppleScript::NSAppleScriptErrorBriefMessage;
pub use self::__NSAppleScript::NSAppleScriptErrorMessage;
pub use self::__NSAppleScript::NSAppleScriptErrorNumber;
pub use self::__NSAppleScript::NSAppleScriptErrorRange;
#[cfg(feature = "Foundation_NSArchiver")]
pub use self::__NSArchiver::NSArchiver;
#[cfg(feature = "Foundation_NSUnarchiver")]
pub use self::__NSArchiver::NSUnarchiver;
pub use self::__NSArray::{
    NSBinarySearchingFirstEqual, NSBinarySearchingInsertionIndex, NSBinarySearchingLastEqual,
    NSBinarySearchingOptions,
};
pub use self::__NSAttributedString::NSAlternateDescriptionAttributeName;
#[cfg(feature = "Foundation_NSAttributedString")]
pub use self::__NSAttributedString::NSAttributedString;
pub use self::__NSAttributedString::NSAttributedStringKey;
#[cfg(feature = "Foundation_NSAttributedStringMarkdownParsingOptions")]
pub use self::__NSAttributedString::NSAttributedStringMarkdownParsingOptions;
#[cfg(feature = "Foundation_NSAttributedStringMarkdownSourcePosition")]
pub use self::__NSAttributedString::NSAttributedStringMarkdownSourcePosition;
pub use self::__NSAttributedString::NSImageURLAttributeName;
pub use self::__NSAttributedString::NSInflectionAlternativeAttributeName;
pub use self::__NSAttributedString::NSInflectionRuleAttributeName;
pub use self::__NSAttributedString::NSInlinePresentationIntentAttributeName;
pub use self::__NSAttributedString::NSLanguageIdentifierAttributeName;
pub use self::__NSAttributedString::NSMarkdownSourcePositionAttributeName;
pub use self::__NSAttributedString::NSMorphologyAttributeName;
#[cfg(feature = "Foundation_NSMutableAttributedString")]
pub use self::__NSAttributedString::NSMutableAttributedString;
#[cfg(feature = "Foundation_NSPresentationIntent")]
pub use self::__NSAttributedString::NSPresentationIntent;
pub use self::__NSAttributedString::NSPresentationIntentAttributeName;
pub use self::__NSAttributedString::NSReplacementIndexAttributeName;
pub use self::__NSAttributedString::{
    NSAttributedStringEnumerationLongestEffectiveRangeNotRequired,
    NSAttributedStringEnumerationOptions, NSAttributedStringEnumerationReverse,
};
pub use self::__NSAttributedString::{
    NSAttributedStringFormattingApplyReplacementIndexAttribute,
    NSAttributedStringFormattingInsertArgumentAttributesWithoutMerging,
    NSAttributedStringFormattingOptions,
};
pub use self::__NSAttributedString::{
    NSAttributedStringMarkdownInterpretedSyntax, NSAttributedStringMarkdownInterpretedSyntaxFull,
    NSAttributedStringMarkdownInterpretedSyntaxInlineOnly,
    NSAttributedStringMarkdownInterpretedSyntaxInlineOnlyPreservingWhitespace,
};
pub use self::__NSAttributedString::{
    NSAttributedStringMarkdownParsingFailurePolicy,
    NSAttributedStringMarkdownParsingFailureReturnError,
    NSAttributedStringMarkdownParsingFailureReturnPartiallyParsedIfPossible,
};
pub use self::__NSAttributedString::{
    NSInlinePresentationIntent, NSInlinePresentationIntentBlockHTML,
    NSInlinePresentationIntentCode, NSInlinePresentationIntentEmphasized,
    NSInlinePresentationIntentInlineHTML, NSInlinePresentationIntentLineBreak,
    NSInlinePresentationIntentSoftBreak, NSInlinePresentationIntentStrikethrough,
    NSInlinePresentationIntentStronglyEmphasized,
};
pub use self::__NSAttributedString::{
    NSPresentationIntentKind, NSPresentationIntentKindBlockQuote,
    NSPresentationIntentKindCodeBlock, NSPresentationIntentKindHeader,
    NSPresentationIntentKindListItem, NSPresentationIntentKindOrderedList,
    NSPresentationIntentKindParagraph, NSPresentationIntentKindTable,
    NSPresentationIntentKindTableCell, NSPresentationIntentKindTableHeaderRow,
    NSPresentationIntentKindTableRow, NSPresentationIntentKindThematicBreak,
    NSPresentationIntentKindUnorderedList,
};
pub use self::__NSAttributedString::{
    NSPresentationIntentTableColumnAlignment, NSPresentationIntentTableColumnAlignmentCenter,
    NSPresentationIntentTableColumnAlignmentLeft, NSPresentationIntentTableColumnAlignmentRight,
};
#[cfg(feature = "Foundation_NSAutoreleasePool")]
pub use self::__NSAutoreleasePool::NSAutoreleasePool;
pub use self::__NSBackgroundActivityScheduler::NSBackgroundActivityCompletionHandler;
#[cfg(feature = "Foundation_NSBackgroundActivityScheduler")]
pub use self::__NSBackgroundActivityScheduler::NSBackgroundActivityScheduler;
pub use self::__NSBackgroundActivityScheduler::{
    NSBackgroundActivityResult, NSBackgroundActivityResultDeferred,
    NSBackgroundActivityResultFinished,
};
#[cfg(feature = "Foundation_NSBundle")]
pub use self::__NSBundle::NSBundle;
pub use self::__NSBundle::NSBundleDidLoadNotification;
#[cfg(feature = "Foundation_NSBundleResourceRequest")]
pub use self::__NSBundle::NSBundleResourceRequest;
pub use self::__NSBundle::NSBundleResourceRequestLoadingPriorityUrgent;
pub use self::__NSBundle::NSBundleResourceRequestLowDiskSpaceNotification;
pub use self::__NSBundle::NSLoadedClasses;
pub use self::__NSBundle::{
    NSBundleExecutableArchitectureARM64, NSBundleExecutableArchitectureI386,
    NSBundleExecutableArchitecturePPC, NSBundleExecutableArchitecturePPC64,
    NSBundleExecutableArchitectureX86_64,
};
#[cfg(feature = "Foundation_NSByteCountFormatter")]
pub use self::__NSByteCountFormatter::NSByteCountFormatter;
pub use self::__NSByteCountFormatter::{
    NSByteCountFormatterCountStyle, NSByteCountFormatterCountStyleBinary,
    NSByteCountFormatterCountStyleDecimal, NSByteCountFormatterCountStyleFile,
    NSByteCountFormatterCountStyleMemory,
};
pub use self::__NSByteCountFormatter::{
    NSByteCountFormatterUnits, NSByteCountFormatterUseAll, NSByteCountFormatterUseBytes,
    NSByteCountFormatterUseDefault, NSByteCountFormatterUseEB, NSByteCountFormatterUseGB,
    NSByteCountFormatterUseKB, NSByteCountFormatterUseMB, NSByteCountFormatterUsePB,
    NSByteCountFormatterUseTB, NSByteCountFormatterUseYBOrHigher, NSByteCountFormatterUseZB,
};
pub use self::__NSByteOrder::NSSwappedDouble;
pub use self::__NSByteOrder::NSSwappedFloat;
#[cfg(feature = "Foundation_NSCache")]
pub use self::__NSCache::NSCache;
pub use self::__NSCache::NSCacheDelegate;
#[cfg(feature = "Foundation_NSCalendar")]
pub use self::__NSCalendar::NSCalendar;
pub use self::__NSCalendar::NSCalendarDayChangedNotification;
pub use self::__NSCalendar::NSCalendarIdentifier;
pub use self::__NSCalendar::NSCalendarIdentifierBuddhist;
pub use self::__NSCalendar::NSCalendarIdentifierChinese;
pub use self::__NSCalendar::NSCalendarIdentifierCoptic;
pub use self::__NSCalendar::NSCalendarIdentifierEthiopicAmeteAlem;
pub use self::__NSCalendar::NSCalendarIdentifierEthiopicAmeteMihret;
pub use self::__NSCalendar::NSCalendarIdentifierGregorian;
pub use self::__NSCalendar::NSCalendarIdentifierHebrew;
pub use self::__NSCalendar::NSCalendarIdentifierISO8601;
pub use self::__NSCalendar::NSCalendarIdentifierIndian;
pub use self::__NSCalendar::NSCalendarIdentifierIslamic;
pub use self::__NSCalendar::NSCalendarIdentifierIslamicCivil;
pub use self::__NSCalendar::NSCalendarIdentifierIslamicTabular;
pub use self::__NSCalendar::NSCalendarIdentifierIslamicUmmAlQura;
pub use self::__NSCalendar::NSCalendarIdentifierJapanese;
pub use self::__NSCalendar::NSCalendarIdentifierPersian;
pub use self::__NSCalendar::NSCalendarIdentifierRepublicOfChina;
#[cfg(feature = "Foundation_NSDateComponents")]
pub use self::__NSCalendar::NSDateComponents;
pub use self::__NSCalendar::{
    NSCalendarCalendarUnit, NSCalendarUnit, NSCalendarUnitCalendar, NSCalendarUnitDay,
    NSCalendarUnitEra, NSCalendarUnitHour, NSCalendarUnitMinute, NSCalendarUnitMonth,
    NSCalendarUnitNanosecond, NSCalendarUnitQuarter, NSCalendarUnitSecond, NSCalendarUnitTimeZone,
    NSCalendarUnitWeekOfMonth, NSCalendarUnitWeekOfYear, NSCalendarUnitWeekday,
    NSCalendarUnitWeekdayOrdinal, NSCalendarUnitYear, NSCalendarUnitYearForWeekOfYear,
    NSDayCalendarUnit, NSEraCalendarUnit, NSHourCalendarUnit, NSMinuteCalendarUnit,
    NSMonthCalendarUnit, NSQuarterCalendarUnit, NSSecondCalendarUnit, NSTimeZoneCalendarUnit,
    NSWeekCalendarUnit, NSWeekOfMonthCalendarUnit, NSWeekOfYearCalendarUnit, NSWeekdayCalendarUnit,
    NSWeekdayOrdinalCalendarUnit, NSYearCalendarUnit, NSYearForWeekOfYearCalendarUnit,
};
pub use self::__NSCalendar::{
    NSCalendarMatchFirst, NSCalendarMatchLast, NSCalendarMatchNextTime,
    NSCalendarMatchNextTimePreservingSmallerUnits,
    NSCalendarMatchPreviousTimePreservingSmallerUnits, NSCalendarMatchStrictly, NSCalendarOptions,
    NSCalendarSearchBackwards, NSCalendarWrapComponents,
};
pub use self::__NSCalendar::{NSDateComponentUndefined, NSUndefinedDateComponent};
#[cfg(feature = "Foundation_NSCalendarDate")]
pub use self::__NSCalendarDate::NSCalendarDate;
#[cfg(feature = "Foundation_NSCharacterSet")]
pub use self::__NSCharacterSet::NSCharacterSet;
#[cfg(feature = "Foundation_NSMutableCharacterSet")]
pub use self::__NSCharacterSet::NSMutableCharacterSet;
pub use self::__NSCharacterSet::NSOpenStepUnicodeReservedBase;
#[cfg(feature = "Foundation_NSClassDescription")]
pub use self::__NSClassDescription::NSClassDescription;
pub use self::__NSClassDescription::NSClassDescriptionNeededForClassNotification;
#[cfg(feature = "Foundation_NSCoder")]
pub use self::__NSCoder::NSCoder;
#[cfg(feature = "Foundation_NSCoder")]
pub use self::__NSCoder::NXReadNSObjectFromCoder;
pub use self::__NSCoder::{
    NSDecodingFailurePolicy, NSDecodingFailurePolicyRaiseException,
    NSDecodingFailurePolicySetErrorAndReturn,
};
#[cfg(feature = "Foundation_NSComparisonPredicate")]
pub use self::__NSComparisonPredicate::NSComparisonPredicate;
pub use self::__NSComparisonPredicate::{
    NSAllPredicateModifier, NSAnyPredicateModifier, NSComparisonPredicateModifier,
    NSDirectPredicateModifier,
};
pub use self::__NSComparisonPredicate::{
    NSBeginsWithPredicateOperatorType, NSBetweenPredicateOperatorType,
    NSContainsPredicateOperatorType, NSCustomSelectorPredicateOperatorType,
    NSEndsWithPredicateOperatorType, NSEqualToPredicateOperatorType,
    NSGreaterThanOrEqualToPredicateOperatorType, NSGreaterThanPredicateOperatorType,
    NSInPredicateOperatorType, NSLessThanOrEqualToPredicateOperatorType,
    NSLessThanPredicateOperatorType, NSLikePredicateOperatorType, NSMatchesPredicateOperatorType,
    NSNotEqualToPredicateOperatorType, NSPredicateOperatorType,
};
pub use self::__NSComparisonPredicate::{
    NSCaseInsensitivePredicateOption, NSComparisonPredicateOptions,
    NSDiacriticInsensitivePredicateOption, NSNormalizedPredicateOption,
};
#[cfg(feature = "Foundation_NSCompoundPredicate")]
pub use self::__NSCompoundPredicate::NSCompoundPredicate;
pub use self::__NSCompoundPredicate::{
    NSAndPredicateType, NSCompoundPredicateType, NSNotPredicateType, NSOrPredicateType,
};
#[cfg(feature = "Foundation_NSConnection")]
pub use self::__NSConnection::NSConnection;
pub use self::__NSConnection::NSConnectionDelegate;
pub use self::__NSConnection::NSConnectionDidDieNotification;
pub use self::__NSConnection::NSConnectionDidInitializeNotification;
pub use self::__NSConnection::NSConnectionReplyMode;
#[cfg(feature = "Foundation_NSDistantObjectRequest")]
pub use self::__NSConnection::NSDistantObjectRequest;
pub use self::__NSConnection::NSFailedAuthenticationException;
#[cfg(feature = "Foundation_NSData")]
pub use self::__NSData::NSData;
#[cfg(feature = "Foundation_NSMutableData")]
pub use self::__NSData::NSMutableData;
#[cfg(feature = "Foundation_NSPurgeableData")]
pub use self::__NSData::NSPurgeableData;
pub use self::__NSData::{
    NSAtomicWrite, NSDataWritingAtomic, NSDataWritingFileProtectionComplete,
    NSDataWritingFileProtectionCompleteUnlessOpen,
    NSDataWritingFileProtectionCompleteUntilFirstUserAuthentication,
    NSDataWritingFileProtectionMask, NSDataWritingFileProtectionNone, NSDataWritingOptions,
    NSDataWritingWithoutOverwriting,
};
pub use self::__NSData::{
    NSDataBase64DecodingIgnoreUnknownCharacters, NSDataBase64DecodingOptions,
};
pub use self::__NSData::{
    NSDataBase64Encoding64CharacterLineLength, NSDataBase64Encoding76CharacterLineLength,
    NSDataBase64EncodingEndLineWithCarriageReturn, NSDataBase64EncodingEndLineWithLineFeed,
    NSDataBase64EncodingOptions,
};
pub use self::__NSData::{
    NSDataCompressionAlgorithm, NSDataCompressionAlgorithmLZ4, NSDataCompressionAlgorithmLZFSE,
    NSDataCompressionAlgorithmLZMA, NSDataCompressionAlgorithmZlib,
};
pub use self::__NSData::{
    NSDataReadingMapped, NSDataReadingMappedAlways, NSDataReadingMappedIfSafe,
    NSDataReadingOptions, NSDataReadingUncached, NSMappedRead, NSUncachedRead,
};
pub use self::__NSData::{NSDataSearchAnchored, NSDataSearchBackwards, NSDataSearchOptions};
#[cfg(feature = "Foundation_NSDate")]
pub use self::__NSDate::NSDate;
pub use self::__NSDate::NSSystemClockDidChangeNotification;
pub use self::__NSDate::NSTimeInterval;
#[cfg(feature = "Foundation_NSDateComponentsFormatter")]
pub use self::__NSDateComponentsFormatter::NSDateComponentsFormatter;
pub use self::__NSDateComponentsFormatter::{
    NSDateComponentsFormatterUnitsStyle, NSDateComponentsFormatterUnitsStyleAbbreviated,
    NSDateComponentsFormatterUnitsStyleBrief, NSDateComponentsFormatterUnitsStyleFull,
    NSDateComponentsFormatterUnitsStylePositional, NSDateComponentsFormatterUnitsStyleShort,
    NSDateComponentsFormatterUnitsStyleSpellOut,
};
pub use self::__NSDateComponentsFormatter::{
    NSDateComponentsFormatterZeroFormattingBehavior,
    NSDateComponentsFormatterZeroFormattingBehaviorDefault,
    NSDateComponentsFormatterZeroFormattingBehaviorDropAll,
    NSDateComponentsFormatterZeroFormattingBehaviorDropLeading,
    NSDateComponentsFormatterZeroFormattingBehaviorDropMiddle,
    NSDateComponentsFormatterZeroFormattingBehaviorDropTrailing,
    NSDateComponentsFormatterZeroFormattingBehaviorNone,
    NSDateComponentsFormatterZeroFormattingBehaviorPad,
};
#[cfg(feature = "Foundation_NSDateFormatter")]
pub use self::__NSDateFormatter::NSDateFormatter;
pub use self::__NSDateFormatter::{
    NSDateFormatterBehavior, NSDateFormatterBehavior10_0, NSDateFormatterBehavior10_4,
    NSDateFormatterBehaviorDefault,
};
pub use self::__NSDateFormatter::{
    NSDateFormatterFullStyle, NSDateFormatterLongStyle, NSDateFormatterMediumStyle,
    NSDateFormatterNoStyle, NSDateFormatterShortStyle, NSDateFormatterStyle,
};
#[cfg(feature = "Foundation_NSDateInterval")]
pub use self::__NSDateInterval::NSDateInterval;
#[cfg(feature = "Foundation_NSDateIntervalFormatter")]
pub use self::__NSDateIntervalFormatter::NSDateIntervalFormatter;
pub use self::__NSDateIntervalFormatter::{
    NSDateIntervalFormatterFullStyle, NSDateIntervalFormatterLongStyle,
    NSDateIntervalFormatterMediumStyle, NSDateIntervalFormatterNoStyle,
    NSDateIntervalFormatterShortStyle, NSDateIntervalFormatterStyle,
};
pub use self::__NSDecimal::NSDecimalAdd;
pub use self::__NSDecimal::NSDecimalCompact;
pub use self::__NSDecimal::NSDecimalCompare;
pub use self::__NSDecimal::NSDecimalCopy;
pub use self::__NSDecimal::NSDecimalDivide;
pub use self::__NSDecimal::NSDecimalMultiply;
pub use self::__NSDecimal::NSDecimalMultiplyByPowerOf10;
pub use self::__NSDecimal::NSDecimalNormalize;
pub use self::__NSDecimal::NSDecimalPower;
pub use self::__NSDecimal::NSDecimalRound;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSDecimal::NSDecimalString;
pub use self::__NSDecimal::NSDecimalSubtract;
pub use self::__NSDecimal::{
    NSCalculationDivideByZero, NSCalculationError, NSCalculationLossOfPrecision,
    NSCalculationNoError, NSCalculationOverflow, NSCalculationUnderflow,
};
pub use self::__NSDecimal::{NSRoundBankers, NSRoundDown, NSRoundPlain, NSRoundUp, NSRoundingMode};
#[cfg(feature = "Foundation_NSDecimalNumber")]
pub use self::__NSDecimalNumber::NSDecimalNumber;
pub use self::__NSDecimalNumber::NSDecimalNumberBehaviors;
pub use self::__NSDecimalNumber::NSDecimalNumberDivideByZeroException;
pub use self::__NSDecimalNumber::NSDecimalNumberExactnessException;
#[cfg(feature = "Foundation_NSDecimalNumberHandler")]
pub use self::__NSDecimalNumber::NSDecimalNumberHandler;
pub use self::__NSDecimalNumber::NSDecimalNumberOverflowException;
pub use self::__NSDecimalNumber::NSDecimalNumberUnderflowException;
#[cfg(feature = "Foundation_NSDistantObject")]
pub use self::__NSDistantObject::NSDistantObject;
#[cfg(feature = "Foundation_NSDistributedLock")]
pub use self::__NSDistributedLock::NSDistributedLock;
#[cfg(feature = "Foundation_NSDistributedNotificationCenter")]
pub use self::__NSDistributedNotificationCenter::NSDistributedNotificationCenter;
pub use self::__NSDistributedNotificationCenter::NSDistributedNotificationCenterType;
pub use self::__NSDistributedNotificationCenter::NSLocalNotificationCenterType;
pub use self::__NSDistributedNotificationCenter::NSNotificationDeliverImmediately;
pub use self::__NSDistributedNotificationCenter::NSNotificationPostToAllSessions;
pub use self::__NSDistributedNotificationCenter::{
    NSDistributedNotificationDeliverImmediately, NSDistributedNotificationOptions,
    NSDistributedNotificationPostToAllSessions,
};
pub use self::__NSDistributedNotificationCenter::{
    NSNotificationSuspensionBehavior, NSNotificationSuspensionBehaviorCoalesce,
    NSNotificationSuspensionBehaviorDeliverImmediately, NSNotificationSuspensionBehaviorDrop,
    NSNotificationSuspensionBehaviorHold,
};
#[cfg(feature = "Foundation_NSEnergyFormatter")]
pub use self::__NSEnergyFormatter::NSEnergyFormatter;
pub use self::__NSEnergyFormatter::{
    NSEnergyFormatterUnit, NSEnergyFormatterUnitCalorie, NSEnergyFormatterUnitJoule,
    NSEnergyFormatterUnitKilocalorie, NSEnergyFormatterUnitKilojoule,
};
pub use self::__NSEnumerator::NSFastEnumeration;
pub use self::__NSError::NSCocoaErrorDomain;
pub use self::__NSError::NSDebugDescriptionErrorKey;
#[cfg(feature = "Foundation_NSError")]
pub use self::__NSError::NSError;
pub use self::__NSError::NSErrorDomain;
pub use self::__NSError::NSErrorUserInfoKey;
pub use self::__NSError::NSFilePathErrorKey;
pub use self::__NSError::NSHelpAnchorErrorKey;
pub use self::__NSError::NSLocalizedDescriptionKey;
pub use self::__NSError::NSLocalizedFailureErrorKey;
pub use self::__NSError::NSLocalizedFailureReasonErrorKey;
pub use self::__NSError::NSLocalizedRecoveryOptionsErrorKey;
pub use self::__NSError::NSLocalizedRecoverySuggestionErrorKey;
pub use self::__NSError::NSMachErrorDomain;
pub use self::__NSError::NSMultipleUnderlyingErrorsKey;
pub use self::__NSError::NSOSStatusErrorDomain;
pub use self::__NSError::NSPOSIXErrorDomain;
pub use self::__NSError::NSRecoveryAttempterErrorKey;
pub use self::__NSError::NSStringEncodingErrorKey;
pub use self::__NSError::NSURLErrorKey;
pub use self::__NSError::NSUnderlyingErrorKey;
#[cfg(feature = "Foundation_NSAssertionHandler")]
pub use self::__NSException::NSAssertionHandler;
pub use self::__NSException::NSAssertionHandlerKey;
pub use self::__NSException::NSDestinationInvalidException;
#[cfg(feature = "Foundation_NSException")]
pub use self::__NSException::NSException;
pub use self::__NSException::NSGenericException;
pub use self::__NSException::NSGetUncaughtExceptionHandler;
pub use self::__NSException::NSInconsistentArchiveException;
pub use self::__NSException::NSInternalInconsistencyException;
pub use self::__NSException::NSInvalidArgumentException;
pub use self::__NSException::NSInvalidReceivePortException;
pub use self::__NSException::NSInvalidSendPortException;
pub use self::__NSException::NSMallocException;
pub use self::__NSException::NSObjectInaccessibleException;
pub use self::__NSException::NSObjectNotAvailableException;
pub use self::__NSException::NSOldStyleException;
pub use self::__NSException::NSPortReceiveException;
pub use self::__NSException::NSPortSendException;
pub use self::__NSException::NSPortTimeoutException;
pub use self::__NSException::NSRangeException;
pub use self::__NSException::NSSetUncaughtExceptionHandler;
pub use self::__NSException::NSUncaughtExceptionHandler;
#[cfg(feature = "Foundation_NSExpression")]
pub use self::__NSExpression::NSExpression;
pub use self::__NSExpression::{
    NSAggregateExpressionType, NSAnyKeyExpressionType, NSBlockExpressionType,
    NSConditionalExpressionType, NSConstantValueExpressionType, NSEvaluatedObjectExpressionType,
    NSExpressionType, NSFunctionExpressionType, NSIntersectSetExpressionType,
    NSKeyPathExpressionType, NSMinusSetExpressionType, NSSubqueryExpressionType,
    NSUnionSetExpressionType, NSVariableExpressionType,
};
#[cfg(feature = "Foundation_NSExtensionContext")]
pub use self::__NSExtensionContext::NSExtensionContext;
pub use self::__NSExtensionContext::NSExtensionHostDidBecomeActiveNotification;
pub use self::__NSExtensionContext::NSExtensionHostDidEnterBackgroundNotification;
pub use self::__NSExtensionContext::NSExtensionHostWillEnterForegroundNotification;
pub use self::__NSExtensionContext::NSExtensionHostWillResignActiveNotification;
pub use self::__NSExtensionContext::NSExtensionItemsAndErrorsKey;
#[cfg(feature = "Foundation_NSExtensionItem")]
pub use self::__NSExtensionItem::NSExtensionItem;
pub use self::__NSExtensionItem::NSExtensionItemAttachmentsKey;
pub use self::__NSExtensionItem::NSExtensionItemAttributedContentTextKey;
pub use self::__NSExtensionItem::NSExtensionItemAttributedTitleKey;
pub use self::__NSExtensionRequestHandling::NSExtensionRequestHandling;
#[cfg(feature = "Foundation_NSFileAccessIntent")]
pub use self::__NSFileCoordinator::NSFileAccessIntent;
#[cfg(feature = "Foundation_NSFileCoordinator")]
pub use self::__NSFileCoordinator::NSFileCoordinator;
pub use self::__NSFileCoordinator::{
    NSFileCoordinatorReadingForUploading, NSFileCoordinatorReadingImmediatelyAvailableMetadataOnly,
    NSFileCoordinatorReadingOptions, NSFileCoordinatorReadingResolvesSymbolicLink,
    NSFileCoordinatorReadingWithoutChanges,
};
pub use self::__NSFileCoordinator::{
    NSFileCoordinatorWritingContentIndependentMetadataOnly, NSFileCoordinatorWritingForDeleting,
    NSFileCoordinatorWritingForMerging, NSFileCoordinatorWritingForMoving,
    NSFileCoordinatorWritingForReplacing, NSFileCoordinatorWritingOptions,
};
#[cfg(feature = "Foundation_NSFileHandle")]
pub use self::__NSFileHandle::NSFileHandle;
pub use self::__NSFileHandle::NSFileHandleConnectionAcceptedNotification;
pub use self::__NSFileHandle::NSFileHandleDataAvailableNotification;
pub use self::__NSFileHandle::NSFileHandleNotificationDataItem;
pub use self::__NSFileHandle::NSFileHandleNotificationFileHandleItem;
pub use self::__NSFileHandle::NSFileHandleNotificationMonitorModes;
pub use self::__NSFileHandle::NSFileHandleOperationException;
pub use self::__NSFileHandle::NSFileHandleReadCompletionNotification;
pub use self::__NSFileHandle::NSFileHandleReadToEndOfFileCompletionNotification;
#[cfg(feature = "Foundation_NSPipe")]
pub use self::__NSFileHandle::NSPipe;
#[cfg(feature = "Foundation_NSDirectoryEnumerator")]
pub use self::__NSFileManager::NSDirectoryEnumerator;
pub use self::__NSFileManager::NSFileAppendOnly;
pub use self::__NSFileManager::NSFileAttributeKey;
pub use self::__NSFileManager::NSFileAttributeType;
pub use self::__NSFileManager::NSFileBusy;
pub use self::__NSFileManager::NSFileCreationDate;
pub use self::__NSFileManager::NSFileDeviceIdentifier;
pub use self::__NSFileManager::NSFileExtensionHidden;
pub use self::__NSFileManager::NSFileGroupOwnerAccountID;
pub use self::__NSFileManager::NSFileGroupOwnerAccountName;
pub use self::__NSFileManager::NSFileHFSCreatorCode;
pub use self::__NSFileManager::NSFileHFSTypeCode;
pub use self::__NSFileManager::NSFileImmutable;
#[cfg(feature = "Foundation_NSFileManager")]
pub use self::__NSFileManager::NSFileManager;
pub use self::__NSFileManager::NSFileManagerDelegate;
pub use self::__NSFileManager::NSFileManagerUnmountDissentingProcessIdentifierErrorKey;
pub use self::__NSFileManager::NSFileModificationDate;
pub use self::__NSFileManager::NSFileOwnerAccountID;
pub use self::__NSFileManager::NSFileOwnerAccountName;
pub use self::__NSFileManager::NSFilePosixPermissions;
pub use self::__NSFileManager::NSFileProtectionComplete;
pub use self::__NSFileManager::NSFileProtectionCompleteUnlessOpen;
pub use self::__NSFileManager::NSFileProtectionCompleteUntilFirstUserAuthentication;
pub use self::__NSFileManager::NSFileProtectionKey;
pub use self::__NSFileManager::NSFileProtectionNone;
pub use self::__NSFileManager::NSFileProtectionType;
#[cfg(feature = "Foundation_NSFileProviderService")]
pub use self::__NSFileManager::NSFileProviderService;
pub use self::__NSFileManager::NSFileProviderServiceName;
pub use self::__NSFileManager::NSFileReferenceCount;
pub use self::__NSFileManager::NSFileSize;
pub use self::__NSFileManager::NSFileSystemFileNumber;
pub use self::__NSFileManager::NSFileSystemFreeNodes;
pub use self::__NSFileManager::NSFileSystemFreeSize;
pub use self::__NSFileManager::NSFileSystemNodes;
pub use self::__NSFileManager::NSFileSystemNumber;
pub use self::__NSFileManager::NSFileSystemSize;
pub use self::__NSFileManager::NSFileType;
pub use self::__NSFileManager::NSFileTypeBlockSpecial;
pub use self::__NSFileManager::NSFileTypeCharacterSpecial;
pub use self::__NSFileManager::NSFileTypeDirectory;
pub use self::__NSFileManager::NSFileTypeRegular;
pub use self::__NSFileManager::NSFileTypeSocket;
pub use self::__NSFileManager::NSFileTypeSymbolicLink;
pub use self::__NSFileManager::NSFileTypeUnknown;
pub use self::__NSFileManager::NSUbiquityIdentityDidChangeNotification;
pub use self::__NSFileManager::{
    NSDirectoryEnumerationIncludesDirectoriesPostOrder, NSDirectoryEnumerationOptions,
    NSDirectoryEnumerationProducesRelativePathURLs, NSDirectoryEnumerationSkipsHiddenFiles,
    NSDirectoryEnumerationSkipsPackageDescendants,
    NSDirectoryEnumerationSkipsSubdirectoryDescendants,
};
pub use self::__NSFileManager::{
    NSFileManagerItemReplacementOptions, NSFileManagerItemReplacementUsingNewMetadataOnly,
    NSFileManagerItemReplacementWithoutDeletingBackupItem,
};
pub use self::__NSFileManager::{
    NSFileManagerUnmountAllPartitionsAndEjectDisk, NSFileManagerUnmountOptions,
    NSFileManagerUnmountWithoutUI,
};
pub use self::__NSFileManager::{
    NSURLRelationship, NSURLRelationshipContains, NSURLRelationshipOther, NSURLRelationshipSame,
};
pub use self::__NSFileManager::{
    NSVolumeEnumerationOptions, NSVolumeEnumerationProduceFileReferenceURLs,
    NSVolumeEnumerationSkipHiddenVolumes,
};
pub use self::__NSFilePresenter::NSFilePresenter;
#[cfg(feature = "Foundation_NSFileVersion")]
pub use self::__NSFileVersion::NSFileVersion;
pub use self::__NSFileVersion::{NSFileVersionAddingByMoving, NSFileVersionAddingOptions};
pub use self::__NSFileVersion::{NSFileVersionReplacingByMoving, NSFileVersionReplacingOptions};
#[cfg(feature = "Foundation_NSFileWrapper")]
pub use self::__NSFileWrapper::NSFileWrapper;
pub use self::__NSFileWrapper::{
    NSFileWrapperReadingImmediate, NSFileWrapperReadingOptions, NSFileWrapperReadingWithoutMapping,
};
pub use self::__NSFileWrapper::{
    NSFileWrapperWritingAtomic, NSFileWrapperWritingOptions, NSFileWrapperWritingWithNameUpdating,
};
#[cfg(feature = "Foundation_NSFormatter")]
pub use self::__NSFormatter::NSFormatter;
pub use self::__NSFormatter::{
    NSFormattingContext, NSFormattingContextBeginningOfSentence, NSFormattingContextDynamic,
    NSFormattingContextListItem, NSFormattingContextMiddleOfSentence,
    NSFormattingContextStandalone, NSFormattingContextUnknown,
};
pub use self::__NSFormatter::{
    NSFormattingUnitStyle, NSFormattingUnitStyleLong, NSFormattingUnitStyleMedium,
    NSFormattingUnitStyleShort,
};
#[cfg(feature = "Foundation_NSGarbageCollector")]
pub use self::__NSGarbageCollector::NSGarbageCollector;
pub use self::__NSGeometry::NSContainsRect;
pub use self::__NSGeometry::NSDivideRect;
pub use self::__NSGeometry::NSEdgeInsets;
pub use self::__NSGeometry::NSEdgeInsetsEqual;
pub use self::__NSGeometry::NSEdgeInsetsZero;
pub use self::__NSGeometry::NSEqualPoints;
pub use self::__NSGeometry::NSEqualRects;
pub use self::__NSGeometry::NSEqualSizes;
pub use self::__NSGeometry::NSInsetRect;
pub use self::__NSGeometry::NSIntegralRect;
pub use self::__NSGeometry::NSIntegralRectWithOptions;
pub use self::__NSGeometry::NSIntersectionRect;
pub use self::__NSGeometry::NSIntersectsRect;
pub use self::__NSGeometry::NSIsEmptyRect;
pub use self::__NSGeometry::NSMouseInRect;
pub use self::__NSGeometry::NSOffsetRect;
pub use self::__NSGeometry::NSPointArray;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSGeometry::NSPointFromString;
pub use self::__NSGeometry::NSPointInRect;
pub use self::__NSGeometry::NSPointPointer;
pub use self::__NSGeometry::NSRectArray;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSGeometry::NSRectFromString;
pub use self::__NSGeometry::NSRectPointer;
pub use self::__NSGeometry::NSSizeArray;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSGeometry::NSSizeFromString;
pub use self::__NSGeometry::NSSizePointer;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSGeometry::NSStringFromPoint;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSGeometry::NSStringFromRect;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSGeometry::NSStringFromSize;
pub use self::__NSGeometry::NSUnionRect;
pub use self::__NSGeometry::NSZeroPoint;
pub use self::__NSGeometry::NSZeroRect;
pub use self::__NSGeometry::NSZeroSize;
pub use self::__NSGeometry::{
    NSAlignAllEdgesInward, NSAlignAllEdgesNearest, NSAlignAllEdgesOutward, NSAlignHeightInward,
    NSAlignHeightNearest, NSAlignHeightOutward, NSAlignMaxXInward, NSAlignMaxXNearest,
    NSAlignMaxXOutward, NSAlignMaxYInward, NSAlignMaxYNearest, NSAlignMaxYOutward,
    NSAlignMinXInward, NSAlignMinXNearest, NSAlignMinXOutward, NSAlignMinYInward,
    NSAlignMinYNearest, NSAlignMinYOutward, NSAlignRectFlipped, NSAlignWidthInward,
    NSAlignWidthNearest, NSAlignWidthOutward, NSAlignmentOptions,
};
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSHFSFileTypes::NSFileTypeForHFSTypeCode;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSHFSFileTypes::NSHFSTypeCodeFromFileType;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSHFSFileTypes::NSHFSTypeOfFile;
#[cfg(feature = "Foundation_NSHTTPCookie")]
pub use self::__NSHTTPCookie::NSHTTPCookie;
pub use self::__NSHTTPCookie::NSHTTPCookieComment;
pub use self::__NSHTTPCookie::NSHTTPCookieCommentURL;
pub use self::__NSHTTPCookie::NSHTTPCookieDiscard;
pub use self::__NSHTTPCookie::NSHTTPCookieDomain;
pub use self::__NSHTTPCookie::NSHTTPCookieExpires;
pub use self::__NSHTTPCookie::NSHTTPCookieMaximumAge;
pub use self::__NSHTTPCookie::NSHTTPCookieName;
pub use self::__NSHTTPCookie::NSHTTPCookieOriginURL;
pub use self::__NSHTTPCookie::NSHTTPCookiePath;
pub use self::__NSHTTPCookie::NSHTTPCookiePort;
pub use self::__NSHTTPCookie::NSHTTPCookiePropertyKey;
pub use self::__NSHTTPCookie::NSHTTPCookieSameSiteLax;
pub use self::__NSHTTPCookie::NSHTTPCookieSameSitePolicy;
pub use self::__NSHTTPCookie::NSHTTPCookieSameSiteStrict;
pub use self::__NSHTTPCookie::NSHTTPCookieSecure;
pub use self::__NSHTTPCookie::NSHTTPCookieStringPolicy;
pub use self::__NSHTTPCookie::NSHTTPCookieValue;
pub use self::__NSHTTPCookie::NSHTTPCookieVersion;
pub use self::__NSHTTPCookieStorage::NSHTTPCookieManagerAcceptPolicyChangedNotification;
pub use self::__NSHTTPCookieStorage::NSHTTPCookieManagerCookiesChangedNotification;
#[cfg(feature = "Foundation_NSHTTPCookieStorage")]
pub use self::__NSHTTPCookieStorage::NSHTTPCookieStorage;
pub use self::__NSHTTPCookieStorage::{
    NSHTTPCookieAcceptPolicy, NSHTTPCookieAcceptPolicyAlways, NSHTTPCookieAcceptPolicyNever,
    NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain,
};
#[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSHashTable"))]
pub use self::__NSHashTable::NSAllHashTableObjects;
#[cfg(feature = "Foundation_NSHashTable")]
pub use self::__NSHashTable::NSCompareHashTables;
#[cfg(feature = "Foundation_NSHashTable")]
pub use self::__NSHashTable::NSCopyHashTableWithZone;
#[cfg(feature = "Foundation_NSHashTable")]
pub use self::__NSHashTable::NSCountHashTable;
#[cfg(feature = "Foundation_NSHashTable")]
pub use self::__NSHashTable::NSCreateHashTable;
#[cfg(feature = "Foundation_NSHashTable")]
pub use self::__NSHashTable::NSCreateHashTableWithZone;
pub use self::__NSHashTable::NSEndHashTableEnumeration;
#[cfg(feature = "Foundation_NSHashTable")]
pub use self::__NSHashTable::NSEnumerateHashTable;
#[cfg(feature = "Foundation_NSHashTable")]
pub use self::__NSHashTable::NSFreeHashTable;
pub use self::__NSHashTable::NSHashEnumerator;
#[cfg(feature = "Foundation_NSHashTable")]
pub use self::__NSHashTable::NSHashGet;
#[cfg(feature = "Foundation_NSHashTable")]
pub use self::__NSHashTable::NSHashInsert;
#[cfg(feature = "Foundation_NSHashTable")]
pub use self::__NSHashTable::NSHashInsertIfAbsent;
#[cfg(feature = "Foundation_NSHashTable")]
pub use self::__NSHashTable::NSHashInsertKnownAbsent;
#[cfg(feature = "Foundation_NSHashTable")]
pub use self::__NSHashTable::NSHashRemove;
#[cfg(feature = "Foundation_NSHashTable")]
pub use self::__NSHashTable::NSHashTable;
pub use self::__NSHashTable::NSHashTableCallBacks;
pub use self::__NSHashTable::NSHashTableCopyIn;
pub use self::__NSHashTable::NSHashTableObjectPointerPersonality;
pub use self::__NSHashTable::NSHashTableOptions;
pub use self::__NSHashTable::NSHashTableStrongMemory;
pub use self::__NSHashTable::NSHashTableWeakMemory;
pub use self::__NSHashTable::NSHashTableZeroingWeakMemory;
pub use self::__NSHashTable::NSIntHashCallBacks;
pub use self::__NSHashTable::NSIntegerHashCallBacks;
pub use self::__NSHashTable::NSNextHashEnumeratorItem;
pub use self::__NSHashTable::NSNonOwnedPointerHashCallBacks;
pub use self::__NSHashTable::NSNonRetainedObjectHashCallBacks;
pub use self::__NSHashTable::NSObjectHashCallBacks;
pub use self::__NSHashTable::NSOwnedObjectIdentityHashCallBacks;
pub use self::__NSHashTable::NSOwnedPointerHashCallBacks;
pub use self::__NSHashTable::NSPointerToStructHashCallBacks;
#[cfg(feature = "Foundation_NSHashTable")]
pub use self::__NSHashTable::NSResetHashTable;
#[cfg(all(feature = "Foundation_NSHashTable", feature = "Foundation_NSString"))]
pub use self::__NSHashTable::NSStringFromHashTable;
#[cfg(feature = "Foundation_NSHost")]
pub use self::__NSHost::NSHost;
#[cfg(feature = "Foundation_NSISO8601DateFormatter")]
pub use self::__NSISO8601DateFormatter::NSISO8601DateFormatter;
pub use self::__NSISO8601DateFormatter::{
    NSISO8601DateFormatOptions, NSISO8601DateFormatWithColonSeparatorInTime,
    NSISO8601DateFormatWithColonSeparatorInTimeZone, NSISO8601DateFormatWithDashSeparatorInDate,
    NSISO8601DateFormatWithDay, NSISO8601DateFormatWithFractionalSeconds,
    NSISO8601DateFormatWithFullDate, NSISO8601DateFormatWithFullTime,
    NSISO8601DateFormatWithInternetDateTime, NSISO8601DateFormatWithMonth,
    NSISO8601DateFormatWithSpaceBetweenDateAndTime, NSISO8601DateFormatWithTime,
    NSISO8601DateFormatWithTimeZone, NSISO8601DateFormatWithWeekOfYear,
    NSISO8601DateFormatWithYear,
};
#[cfg(feature = "Foundation_NSIndexPath")]
pub use self::__NSIndexPath::NSIndexPath;
#[cfg(feature = "Foundation_NSIndexSet")]
pub use self::__NSIndexSet::NSIndexSet;
#[cfg(feature = "Foundation_NSMutableIndexSet")]
pub use self::__NSIndexSet::NSMutableIndexSet;
#[cfg(feature = "Foundation_NSInflectionRule")]
pub use self::__NSInflectionRule::NSInflectionRule;
#[cfg(feature = "Foundation_NSInflectionRuleExplicit")]
pub use self::__NSInflectionRule::NSInflectionRuleExplicit;
#[cfg(feature = "Foundation_NSInvocation")]
pub use self::__NSInvocation::NSInvocation;
pub use self::__NSItemProvider::NSExtensionJavaScriptFinalizeArgumentKey;
pub use self::__NSItemProvider::NSExtensionJavaScriptPreprocessingResultsKey;
#[cfg(feature = "Foundation_NSItemProvider")]
pub use self::__NSItemProvider::NSItemProvider;
pub use self::__NSItemProvider::NSItemProviderCompletionHandler;
pub use self::__NSItemProvider::NSItemProviderErrorDomain;
pub use self::__NSItemProvider::NSItemProviderLoadHandler;
pub use self::__NSItemProvider::NSItemProviderPreferredImageSizeKey;
pub use self::__NSItemProvider::NSItemProviderReading;
pub use self::__NSItemProvider::NSItemProviderWriting;
pub use self::__NSItemProvider::{
    NSItemProviderErrorCode, NSItemProviderItemUnavailableError,
    NSItemProviderUnavailableCoercionError, NSItemProviderUnexpectedValueClassError,
    NSItemProviderUnknownError,
};
pub use self::__NSItemProvider::{NSItemProviderFileOptionOpenInPlace, NSItemProviderFileOptions};
pub use self::__NSItemProvider::{
    NSItemProviderRepresentationVisibility, NSItemProviderRepresentationVisibilityAll,
    NSItemProviderRepresentationVisibilityGroup, NSItemProviderRepresentationVisibilityOwnProcess,
    NSItemProviderRepresentationVisibilityTeam,
};
#[cfg(feature = "Foundation_NSJSONSerialization")]
pub use self::__NSJSONSerialization::NSJSONSerialization;
pub use self::__NSJSONSerialization::{
    NSJSONReadingAllowFragments, NSJSONReadingFragmentsAllowed, NSJSONReadingJSON5Allowed,
    NSJSONReadingMutableContainers, NSJSONReadingMutableLeaves, NSJSONReadingOptions,
    NSJSONReadingTopLevelDictionaryAssumed,
};
pub use self::__NSJSONSerialization::{
    NSJSONWritingFragmentsAllowed, NSJSONWritingOptions, NSJSONWritingPrettyPrinted,
    NSJSONWritingSortedKeys, NSJSONWritingWithoutEscapingSlashes,
};
pub use self::__NSKeyValueCoding::NSAverageKeyValueOperator;
pub use self::__NSKeyValueCoding::NSCountKeyValueOperator;
pub use self::__NSKeyValueCoding::NSDistinctUnionOfArraysKeyValueOperator;
pub use self::__NSKeyValueCoding::NSDistinctUnionOfObjectsKeyValueOperator;
pub use self::__NSKeyValueCoding::NSDistinctUnionOfSetsKeyValueOperator;
pub use self::__NSKeyValueCoding::NSKeyValueOperator;
pub use self::__NSKeyValueCoding::NSMaximumKeyValueOperator;
pub use self::__NSKeyValueCoding::NSMinimumKeyValueOperator;
pub use self::__NSKeyValueCoding::NSSumKeyValueOperator;
pub use self::__NSKeyValueCoding::NSUndefinedKeyException;
pub use self::__NSKeyValueCoding::NSUnionOfArraysKeyValueOperator;
pub use self::__NSKeyValueCoding::NSUnionOfObjectsKeyValueOperator;
pub use self::__NSKeyValueCoding::NSUnionOfSetsKeyValueOperator;
pub use self::__NSKeyValueObserving::NSKeyValueChangeIndexesKey;
pub use self::__NSKeyValueObserving::NSKeyValueChangeKey;
pub use self::__NSKeyValueObserving::NSKeyValueChangeKindKey;
pub use self::__NSKeyValueObserving::NSKeyValueChangeNewKey;
pub use self::__NSKeyValueObserving::NSKeyValueChangeNotificationIsPriorKey;
pub use self::__NSKeyValueObserving::NSKeyValueChangeOldKey;
pub use self::__NSKeyValueObserving::{
    NSKeyValueChange, NSKeyValueChangeInsertion, NSKeyValueChangeRemoval,
    NSKeyValueChangeReplacement, NSKeyValueChangeSetting,
};
pub use self::__NSKeyValueObserving::{
    NSKeyValueIntersectSetMutation, NSKeyValueMinusSetMutation, NSKeyValueSetMutationKind,
    NSKeyValueSetSetMutation, NSKeyValueUnionSetMutation,
};
pub use self::__NSKeyValueObserving::{
    NSKeyValueObservingOptionInitial, NSKeyValueObservingOptionNew, NSKeyValueObservingOptionOld,
    NSKeyValueObservingOptionPrior, NSKeyValueObservingOptions,
};
pub use self::__NSKeyedArchiver::NSInvalidArchiveOperationException;
pub use self::__NSKeyedArchiver::NSInvalidUnarchiveOperationException;
pub use self::__NSKeyedArchiver::NSKeyedArchiveRootObjectKey;
#[cfg(feature = "Foundation_NSKeyedArchiver")]
pub use self::__NSKeyedArchiver::NSKeyedArchiver;
pub use self::__NSKeyedArchiver::NSKeyedArchiverDelegate;
#[cfg(feature = "Foundation_NSKeyedUnarchiver")]
pub use self::__NSKeyedArchiver::NSKeyedUnarchiver;
pub use self::__NSKeyedArchiver::NSKeyedUnarchiverDelegate;
#[cfg(feature = "Foundation_NSLengthFormatter")]
pub use self::__NSLengthFormatter::NSLengthFormatter;
pub use self::__NSLengthFormatter::{
    NSLengthFormatterUnit, NSLengthFormatterUnitCentimeter, NSLengthFormatterUnitFoot,
    NSLengthFormatterUnitInch, NSLengthFormatterUnitKilometer, NSLengthFormatterUnitMeter,
    NSLengthFormatterUnitMile, NSLengthFormatterUnitMillimeter, NSLengthFormatterUnitYard,
};
pub use self::__NSLinguisticTagger::NSLinguisticTag;
pub use self::__NSLinguisticTagger::NSLinguisticTagAdjective;
pub use self::__NSLinguisticTagger::NSLinguisticTagAdverb;
pub use self::__NSLinguisticTagger::NSLinguisticTagClassifier;
pub use self::__NSLinguisticTagger::NSLinguisticTagCloseParenthesis;
pub use self::__NSLinguisticTagger::NSLinguisticTagCloseQuote;
pub use self::__NSLinguisticTagger::NSLinguisticTagConjunction;
pub use self::__NSLinguisticTagger::NSLinguisticTagDash;
pub use self::__NSLinguisticTagger::NSLinguisticTagDeterminer;
pub use self::__NSLinguisticTagger::NSLinguisticTagIdiom;
pub use self::__NSLinguisticTagger::NSLinguisticTagInterjection;
pub use self::__NSLinguisticTagger::NSLinguisticTagNoun;
pub use self::__NSLinguisticTagger::NSLinguisticTagNumber;
pub use self::__NSLinguisticTagger::NSLinguisticTagOpenParenthesis;
pub use self::__NSLinguisticTagger::NSLinguisticTagOpenQuote;
pub use self::__NSLinguisticTagger::NSLinguisticTagOrganizationName;
pub use self::__NSLinguisticTagger::NSLinguisticTagOther;
pub use self::__NSLinguisticTagger::NSLinguisticTagOtherPunctuation;
pub use self::__NSLinguisticTagger::NSLinguisticTagOtherWhitespace;
pub use self::__NSLinguisticTagger::NSLinguisticTagOtherWord;
pub use self::__NSLinguisticTagger::NSLinguisticTagParagraphBreak;
pub use self::__NSLinguisticTagger::NSLinguisticTagParticle;
pub use self::__NSLinguisticTagger::NSLinguisticTagPersonalName;
pub use self::__NSLinguisticTagger::NSLinguisticTagPlaceName;
pub use self::__NSLinguisticTagger::NSLinguisticTagPreposition;
pub use self::__NSLinguisticTagger::NSLinguisticTagPronoun;
pub use self::__NSLinguisticTagger::NSLinguisticTagPunctuation;
pub use self::__NSLinguisticTagger::NSLinguisticTagScheme;
pub use self::__NSLinguisticTagger::NSLinguisticTagSchemeLanguage;
pub use self::__NSLinguisticTagger::NSLinguisticTagSchemeLemma;
pub use self::__NSLinguisticTagger::NSLinguisticTagSchemeLexicalClass;
pub use self::__NSLinguisticTagger::NSLinguisticTagSchemeNameType;
pub use self::__NSLinguisticTagger::NSLinguisticTagSchemeNameTypeOrLexicalClass;
pub use self::__NSLinguisticTagger::NSLinguisticTagSchemeScript;
pub use self::__NSLinguisticTagger::NSLinguisticTagSchemeTokenType;
pub use self::__NSLinguisticTagger::NSLinguisticTagSentenceTerminator;
pub use self::__NSLinguisticTagger::NSLinguisticTagVerb;
pub use self::__NSLinguisticTagger::NSLinguisticTagWhitespace;
pub use self::__NSLinguisticTagger::NSLinguisticTagWord;
pub use self::__NSLinguisticTagger::NSLinguisticTagWordJoiner;
#[cfg(feature = "Foundation_NSLinguisticTagger")]
pub use self::__NSLinguisticTagger::NSLinguisticTagger;
pub use self::__NSLinguisticTagger::{
    NSLinguisticTaggerJoinNames, NSLinguisticTaggerOmitOther, NSLinguisticTaggerOmitPunctuation,
    NSLinguisticTaggerOmitWhitespace, NSLinguisticTaggerOmitWords, NSLinguisticTaggerOptions,
};
pub use self::__NSLinguisticTagger::{
    NSLinguisticTaggerUnit, NSLinguisticTaggerUnitDocument, NSLinguisticTaggerUnitParagraph,
    NSLinguisticTaggerUnitSentence, NSLinguisticTaggerUnitWord,
};
#[cfg(feature = "Foundation_NSListFormatter")]
pub use self::__NSListFormatter::NSListFormatter;
pub use self::__NSLocale::NSBuddhistCalendar;
pub use self::__NSLocale::NSChineseCalendar;
pub use self::__NSLocale::NSCurrentLocaleDidChangeNotification;
pub use self::__NSLocale::NSGregorianCalendar;
pub use self::__NSLocale::NSHebrewCalendar;
pub use self::__NSLocale::NSISO8601Calendar;
pub use self::__NSLocale::NSIndianCalendar;
pub use self::__NSLocale::NSIslamicCalendar;
pub use self::__NSLocale::NSIslamicCivilCalendar;
pub use self::__NSLocale::NSJapaneseCalendar;
#[cfg(feature = "Foundation_NSLocale")]
pub use self::__NSLocale::NSLocale;
pub use self::__NSLocale::NSLocaleAlternateQuotationBeginDelimiterKey;
pub use self::__NSLocale::NSLocaleAlternateQuotationEndDelimiterKey;
pub use self::__NSLocale::NSLocaleCalendar;
pub use self::__NSLocale::NSLocaleCollationIdentifier;
pub use self::__NSLocale::NSLocaleCollatorIdentifier;
pub use self::__NSLocale::NSLocaleCountryCode;
pub use self::__NSLocale::NSLocaleCurrencyCode;
pub use self::__NSLocale::NSLocaleCurrencySymbol;
pub use self::__NSLocale::NSLocaleDecimalSeparator;
pub use self::__NSLocale::NSLocaleExemplarCharacterSet;
pub use self::__NSLocale::NSLocaleGroupingSeparator;
pub use self::__NSLocale::NSLocaleIdentifier;
pub use self::__NSLocale::NSLocaleKey;
pub use self::__NSLocale::NSLocaleLanguageCode;
pub use self::__NSLocale::NSLocaleMeasurementSystem;
pub use self::__NSLocale::NSLocaleQuotationBeginDelimiterKey;
pub use self::__NSLocale::NSLocaleQuotationEndDelimiterKey;
pub use self::__NSLocale::NSLocaleScriptCode;
pub use self::__NSLocale::NSLocaleUsesMetricSystem;
pub use self::__NSLocale::NSLocaleVariantCode;
pub use self::__NSLocale::NSPersianCalendar;
pub use self::__NSLocale::NSRepublicOfChinaCalendar;
pub use self::__NSLocale::{
    NSLocaleLanguageDirection, NSLocaleLanguageDirectionBottomToTop,
    NSLocaleLanguageDirectionLeftToRight, NSLocaleLanguageDirectionRightToLeft,
    NSLocaleLanguageDirectionTopToBottom, NSLocaleLanguageDirectionUnknown,
};
#[cfg(feature = "Foundation_NSCondition")]
pub use self::__NSLock::NSCondition;
#[cfg(feature = "Foundation_NSConditionLock")]
pub use self::__NSLock::NSConditionLock;
#[cfg(feature = "Foundation_NSLock")]
pub use self::__NSLock::NSLock;
pub use self::__NSLock::NSLocking;
#[cfg(feature = "Foundation_NSRecursiveLock")]
pub use self::__NSLock::NSRecursiveLock;
#[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSMapTable"))]
pub use self::__NSMapTable::NSAllMapTableKeys;
#[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSMapTable"))]
pub use self::__NSMapTable::NSAllMapTableValues;
#[cfg(feature = "Foundation_NSMapTable")]
pub use self::__NSMapTable::NSCompareMapTables;
#[cfg(feature = "Foundation_NSMapTable")]
pub use self::__NSMapTable::NSCopyMapTableWithZone;
#[cfg(feature = "Foundation_NSMapTable")]
pub use self::__NSMapTable::NSCountMapTable;
#[cfg(feature = "Foundation_NSMapTable")]
pub use self::__NSMapTable::NSCreateMapTable;
#[cfg(feature = "Foundation_NSMapTable")]
pub use self::__NSMapTable::NSCreateMapTableWithZone;
pub use self::__NSMapTable::NSEndMapTableEnumeration;
#[cfg(feature = "Foundation_NSMapTable")]
pub use self::__NSMapTable::NSEnumerateMapTable;
pub use self::__NSMapTable::NSIntMapKeyCallBacks;
pub use self::__NSMapTable::NSIntMapValueCallBacks;
pub use self::__NSMapTable::NSIntegerMapKeyCallBacks;
pub use self::__NSMapTable::NSIntegerMapValueCallBacks;
pub use self::__NSMapTable::NSMapEnumerator;
#[cfg(feature = "Foundation_NSMapTable")]
pub use self::__NSMapTable::NSMapGet;
#[cfg(feature = "Foundation_NSMapTable")]
pub use self::__NSMapTable::NSMapInsert;
#[cfg(feature = "Foundation_NSMapTable")]
pub use self::__NSMapTable::NSMapInsertIfAbsent;
#[cfg(feature = "Foundation_NSMapTable")]
pub use self::__NSMapTable::NSMapInsertKnownAbsent;
#[cfg(feature = "Foundation_NSMapTable")]
pub use self::__NSMapTable::NSMapMember;
#[cfg(feature = "Foundation_NSMapTable")]
pub use self::__NSMapTable::NSMapRemove;
#[cfg(feature = "Foundation_NSMapTable")]
pub use self::__NSMapTable::NSMapTable;
pub use self::__NSMapTable::NSMapTableCopyIn;
pub use self::__NSMapTable::NSMapTableKeyCallBacks;
pub use self::__NSMapTable::NSMapTableObjectPointerPersonality;
pub use self::__NSMapTable::NSMapTableOptions;
pub use self::__NSMapTable::NSMapTableStrongMemory;
pub use self::__NSMapTable::NSMapTableValueCallBacks;
pub use self::__NSMapTable::NSMapTableWeakMemory;
pub use self::__NSMapTable::NSMapTableZeroingWeakMemory;
pub use self::__NSMapTable::NSNextMapEnumeratorPair;
pub use self::__NSMapTable::NSNonOwnedPointerMapKeyCallBacks;
pub use self::__NSMapTable::NSNonOwnedPointerMapValueCallBacks;
pub use self::__NSMapTable::NSNonOwnedPointerOrNullMapKeyCallBacks;
pub use self::__NSMapTable::NSNonRetainedObjectMapKeyCallBacks;
pub use self::__NSMapTable::NSNonRetainedObjectMapValueCallBacks;
pub use self::__NSMapTable::NSObjectMapKeyCallBacks;
pub use self::__NSMapTable::NSObjectMapValueCallBacks;
pub use self::__NSMapTable::NSOwnedPointerMapKeyCallBacks;
pub use self::__NSMapTable::NSOwnedPointerMapValueCallBacks;
#[cfg(feature = "Foundation_NSMapTable")]
pub use self::__NSMapTable::NSResetMapTable;
#[cfg(all(feature = "Foundation_NSMapTable", feature = "Foundation_NSString"))]
pub use self::__NSMapTable::NSStringFromMapTable;
#[cfg(feature = "Foundation_NSMassFormatter")]
pub use self::__NSMassFormatter::NSMassFormatter;
pub use self::__NSMassFormatter::{
    NSMassFormatterUnit, NSMassFormatterUnitGram, NSMassFormatterUnitKilogram,
    NSMassFormatterUnitOunce, NSMassFormatterUnitPound, NSMassFormatterUnitStone,
};
#[cfg(feature = "Foundation_NSMeasurement")]
pub use self::__NSMeasurement::NSMeasurement;
#[cfg(feature = "Foundation_NSMeasurementFormatter")]
pub use self::__NSMeasurementFormatter::NSMeasurementFormatter;
pub use self::__NSMeasurementFormatter::{
    NSMeasurementFormatterUnitOptions, NSMeasurementFormatterUnitOptionsNaturalScale,
    NSMeasurementFormatterUnitOptionsProvidedUnit,
    NSMeasurementFormatterUnitOptionsTemperatureWithoutUnit,
};
#[cfg(feature = "Foundation_NSMetadataItem")]
pub use self::__NSMetadata::NSMetadataItem;
#[cfg(feature = "Foundation_NSMetadataQuery")]
pub use self::__NSMetadata::NSMetadataQuery;
pub use self::__NSMetadata::NSMetadataQueryAccessibleUbiquitousExternalDocumentsScope;
#[cfg(feature = "Foundation_NSMetadataQueryAttributeValueTuple")]
pub use self::__NSMetadata::NSMetadataQueryAttributeValueTuple;
pub use self::__NSMetadata::NSMetadataQueryDelegate;
pub use self::__NSMetadata::NSMetadataQueryDidFinishGatheringNotification;
pub use self::__NSMetadata::NSMetadataQueryDidStartGatheringNotification;
pub use self::__NSMetadata::NSMetadataQueryDidUpdateNotification;
pub use self::__NSMetadata::NSMetadataQueryGatheringProgressNotification;
pub use self::__NSMetadata::NSMetadataQueryIndexedLocalComputerScope;
pub use self::__NSMetadata::NSMetadataQueryIndexedNetworkScope;
pub use self::__NSMetadata::NSMetadataQueryLocalComputerScope;
pub use self::__NSMetadata::NSMetadataQueryNetworkScope;
pub use self::__NSMetadata::NSMetadataQueryResultContentRelevanceAttribute;
#[cfg(feature = "Foundation_NSMetadataQueryResultGroup")]
pub use self::__NSMetadata::NSMetadataQueryResultGroup;
pub use self::__NSMetadata::NSMetadataQueryUbiquitousDataScope;
pub use self::__NSMetadata::NSMetadataQueryUbiquitousDocumentsScope;
pub use self::__NSMetadata::NSMetadataQueryUpdateAddedItemsKey;
pub use self::__NSMetadata::NSMetadataQueryUpdateChangedItemsKey;
pub use self::__NSMetadata::NSMetadataQueryUpdateRemovedItemsKey;
pub use self::__NSMetadata::NSMetadataQueryUserHomeScope;
pub use self::__NSMetadataAttributes::NSMetadataItemAcquisitionMakeKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAcquisitionModelKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAlbumKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAltitudeKey;
pub use self::__NSMetadataAttributes::NSMetadataItemApertureKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAppleLoopDescriptorsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAppleLoopsKeyFilterTypeKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAppleLoopsLoopModeKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAppleLoopsRootKeyKey;
pub use self::__NSMetadataAttributes::NSMetadataItemApplicationCategoriesKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAttributeChangeDateKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAudiencesKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAudioBitRateKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAudioChannelCountKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAudioEncodingApplicationKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAudioSampleRateKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAudioTrackNumberKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAuthorAddressesKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAuthorEmailAddressesKey;
pub use self::__NSMetadataAttributes::NSMetadataItemAuthorsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemBitsPerSampleKey;
pub use self::__NSMetadataAttributes::NSMetadataItemCFBundleIdentifierKey;
pub use self::__NSMetadataAttributes::NSMetadataItemCameraOwnerKey;
pub use self::__NSMetadataAttributes::NSMetadataItemCityKey;
pub use self::__NSMetadataAttributes::NSMetadataItemCodecsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemColorSpaceKey;
pub use self::__NSMetadataAttributes::NSMetadataItemCommentKey;
pub use self::__NSMetadataAttributes::NSMetadataItemComposerKey;
pub use self::__NSMetadataAttributes::NSMetadataItemContactKeywordsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemContentCreationDateKey;
pub use self::__NSMetadataAttributes::NSMetadataItemContentModificationDateKey;
pub use self::__NSMetadataAttributes::NSMetadataItemContentTypeKey;
pub use self::__NSMetadataAttributes::NSMetadataItemContentTypeTreeKey;
pub use self::__NSMetadataAttributes::NSMetadataItemContributorsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemCopyrightKey;
pub use self::__NSMetadataAttributes::NSMetadataItemCountryKey;
pub use self::__NSMetadataAttributes::NSMetadataItemCoverageKey;
pub use self::__NSMetadataAttributes::NSMetadataItemCreatorKey;
pub use self::__NSMetadataAttributes::NSMetadataItemDateAddedKey;
pub use self::__NSMetadataAttributes::NSMetadataItemDeliveryTypeKey;
pub use self::__NSMetadataAttributes::NSMetadataItemDescriptionKey;
pub use self::__NSMetadataAttributes::NSMetadataItemDirectorKey;
pub use self::__NSMetadataAttributes::NSMetadataItemDisplayNameKey;
pub use self::__NSMetadataAttributes::NSMetadataItemDownloadedDateKey;
pub use self::__NSMetadataAttributes::NSMetadataItemDueDateKey;
pub use self::__NSMetadataAttributes::NSMetadataItemDurationSecondsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemEXIFGPSVersionKey;
pub use self::__NSMetadataAttributes::NSMetadataItemEXIFVersionKey;
pub use self::__NSMetadataAttributes::NSMetadataItemEditorsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemEmailAddressesKey;
pub use self::__NSMetadataAttributes::NSMetadataItemEncodingApplicationsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemExecutableArchitecturesKey;
pub use self::__NSMetadataAttributes::NSMetadataItemExecutablePlatformKey;
pub use self::__NSMetadataAttributes::NSMetadataItemExposureModeKey;
pub use self::__NSMetadataAttributes::NSMetadataItemExposureProgramKey;
pub use self::__NSMetadataAttributes::NSMetadataItemExposureTimeSecondsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemExposureTimeStringKey;
pub use self::__NSMetadataAttributes::NSMetadataItemFNumberKey;
pub use self::__NSMetadataAttributes::NSMetadataItemFSContentChangeDateKey;
pub use self::__NSMetadataAttributes::NSMetadataItemFSCreationDateKey;
pub use self::__NSMetadataAttributes::NSMetadataItemFSNameKey;
pub use self::__NSMetadataAttributes::NSMetadataItemFSSizeKey;
pub use self::__NSMetadataAttributes::NSMetadataItemFinderCommentKey;
pub use self::__NSMetadataAttributes::NSMetadataItemFlashOnOffKey;
pub use self::__NSMetadataAttributes::NSMetadataItemFocalLength35mmKey;
pub use self::__NSMetadataAttributes::NSMetadataItemFocalLengthKey;
pub use self::__NSMetadataAttributes::NSMetadataItemFontsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemGPSAreaInformationKey;
pub use self::__NSMetadataAttributes::NSMetadataItemGPSDOPKey;
pub use self::__NSMetadataAttributes::NSMetadataItemGPSDateStampKey;
pub use self::__NSMetadataAttributes::NSMetadataItemGPSDestBearingKey;
pub use self::__NSMetadataAttributes::NSMetadataItemGPSDestDistanceKey;
pub use self::__NSMetadataAttributes::NSMetadataItemGPSDestLatitudeKey;
pub use self::__NSMetadataAttributes::NSMetadataItemGPSDestLongitudeKey;
pub use self::__NSMetadataAttributes::NSMetadataItemGPSDifferentalKey;
pub use self::__NSMetadataAttributes::NSMetadataItemGPSMapDatumKey;
pub use self::__NSMetadataAttributes::NSMetadataItemGPSMeasureModeKey;
pub use self::__NSMetadataAttributes::NSMetadataItemGPSProcessingMethodKey;
pub use self::__NSMetadataAttributes::NSMetadataItemGPSStatusKey;
pub use self::__NSMetadataAttributes::NSMetadataItemGPSTrackKey;
pub use self::__NSMetadataAttributes::NSMetadataItemGenreKey;
pub use self::__NSMetadataAttributes::NSMetadataItemHasAlphaChannelKey;
pub use self::__NSMetadataAttributes::NSMetadataItemHeadlineKey;
pub use self::__NSMetadataAttributes::NSMetadataItemISOSpeedKey;
pub use self::__NSMetadataAttributes::NSMetadataItemIdentifierKey;
pub use self::__NSMetadataAttributes::NSMetadataItemImageDirectionKey;
pub use self::__NSMetadataAttributes::NSMetadataItemInformationKey;
pub use self::__NSMetadataAttributes::NSMetadataItemInstantMessageAddressesKey;
pub use self::__NSMetadataAttributes::NSMetadataItemInstructionsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemIsApplicationManagedKey;
pub use self::__NSMetadataAttributes::NSMetadataItemIsGeneralMIDISequenceKey;
pub use self::__NSMetadataAttributes::NSMetadataItemIsLikelyJunkKey;
pub use self::__NSMetadataAttributes::NSMetadataItemIsUbiquitousKey;
pub use self::__NSMetadataAttributes::NSMetadataItemKeySignatureKey;
pub use self::__NSMetadataAttributes::NSMetadataItemKeywordsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemKindKey;
pub use self::__NSMetadataAttributes::NSMetadataItemLanguagesKey;
pub use self::__NSMetadataAttributes::NSMetadataItemLastUsedDateKey;
pub use self::__NSMetadataAttributes::NSMetadataItemLatitudeKey;
pub use self::__NSMetadataAttributes::NSMetadataItemLayerNamesKey;
pub use self::__NSMetadataAttributes::NSMetadataItemLensModelKey;
pub use self::__NSMetadataAttributes::NSMetadataItemLongitudeKey;
pub use self::__NSMetadataAttributes::NSMetadataItemLyricistKey;
pub use self::__NSMetadataAttributes::NSMetadataItemMaxApertureKey;
pub use self::__NSMetadataAttributes::NSMetadataItemMediaTypesKey;
pub use self::__NSMetadataAttributes::NSMetadataItemMeteringModeKey;
pub use self::__NSMetadataAttributes::NSMetadataItemMusicalGenreKey;
pub use self::__NSMetadataAttributes::NSMetadataItemMusicalInstrumentCategoryKey;
pub use self::__NSMetadataAttributes::NSMetadataItemMusicalInstrumentNameKey;
pub use self::__NSMetadataAttributes::NSMetadataItemNamedLocationKey;
pub use self::__NSMetadataAttributes::NSMetadataItemNumberOfPagesKey;
pub use self::__NSMetadataAttributes::NSMetadataItemOrganizationsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemOrientationKey;
pub use self::__NSMetadataAttributes::NSMetadataItemOriginalFormatKey;
pub use self::__NSMetadataAttributes::NSMetadataItemOriginalSourceKey;
pub use self::__NSMetadataAttributes::NSMetadataItemPageHeightKey;
pub use self::__NSMetadataAttributes::NSMetadataItemPageWidthKey;
pub use self::__NSMetadataAttributes::NSMetadataItemParticipantsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemPathKey;
pub use self::__NSMetadataAttributes::NSMetadataItemPerformersKey;
pub use self::__NSMetadataAttributes::NSMetadataItemPhoneNumbersKey;
pub use self::__NSMetadataAttributes::NSMetadataItemPixelCountKey;
pub use self::__NSMetadataAttributes::NSMetadataItemPixelHeightKey;
pub use self::__NSMetadataAttributes::NSMetadataItemPixelWidthKey;
pub use self::__NSMetadataAttributes::NSMetadataItemProducerKey;
pub use self::__NSMetadataAttributes::NSMetadataItemProfileNameKey;
pub use self::__NSMetadataAttributes::NSMetadataItemProjectsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemPublishersKey;
pub use self::__NSMetadataAttributes::NSMetadataItemRecipientAddressesKey;
pub use self::__NSMetadataAttributes::NSMetadataItemRecipientEmailAddressesKey;
pub use self::__NSMetadataAttributes::NSMetadataItemRecipientsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemRecordingDateKey;
pub use self::__NSMetadataAttributes::NSMetadataItemRecordingYearKey;
pub use self::__NSMetadataAttributes::NSMetadataItemRedEyeOnOffKey;
pub use self::__NSMetadataAttributes::NSMetadataItemResolutionHeightDPIKey;
pub use self::__NSMetadataAttributes::NSMetadataItemResolutionWidthDPIKey;
pub use self::__NSMetadataAttributes::NSMetadataItemRightsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemSecurityMethodKey;
pub use self::__NSMetadataAttributes::NSMetadataItemSpeedKey;
pub use self::__NSMetadataAttributes::NSMetadataItemStarRatingKey;
pub use self::__NSMetadataAttributes::NSMetadataItemStateOrProvinceKey;
pub use self::__NSMetadataAttributes::NSMetadataItemStreamableKey;
pub use self::__NSMetadataAttributes::NSMetadataItemSubjectKey;
pub use self::__NSMetadataAttributes::NSMetadataItemTempoKey;
pub use self::__NSMetadataAttributes::NSMetadataItemTextContentKey;
pub use self::__NSMetadataAttributes::NSMetadataItemThemeKey;
pub use self::__NSMetadataAttributes::NSMetadataItemTimeSignatureKey;
pub use self::__NSMetadataAttributes::NSMetadataItemTimestampKey;
pub use self::__NSMetadataAttributes::NSMetadataItemTitleKey;
pub use self::__NSMetadataAttributes::NSMetadataItemTotalBitRateKey;
pub use self::__NSMetadataAttributes::NSMetadataItemURLKey;
pub use self::__NSMetadataAttributes::NSMetadataItemVersionKey;
pub use self::__NSMetadataAttributes::NSMetadataItemVideoBitRateKey;
pub use self::__NSMetadataAttributes::NSMetadataItemWhereFromsKey;
pub use self::__NSMetadataAttributes::NSMetadataItemWhiteBalanceKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemContainerDisplayNameKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemDownloadRequestedKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemDownloadingErrorKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemDownloadingStatusCurrent;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemDownloadingStatusDownloaded;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemDownloadingStatusKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemDownloadingStatusNotDownloaded;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemHasUnresolvedConflictsKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemIsDownloadedKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemIsDownloadingKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemIsExternalDocumentKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemIsSharedKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemIsUploadedKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemIsUploadingKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemPercentDownloadedKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemPercentUploadedKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemURLInLocalContainerKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousItemUploadingErrorKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousSharedItemCurrentUserPermissionsKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousSharedItemCurrentUserRoleKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousSharedItemMostRecentEditorNameComponentsKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousSharedItemOwnerNameComponentsKey;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousSharedItemPermissionsReadOnly;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousSharedItemPermissionsReadWrite;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousSharedItemRoleOwner;
pub use self::__NSMetadataAttributes::NSMetadataUbiquitousSharedItemRoleParticipant;
#[cfg(feature = "Foundation_NSMethodSignature")]
pub use self::__NSMethodSignature::NSMethodSignature;
#[cfg(feature = "Foundation_NSMorphology")]
pub use self::__NSMorphology::NSMorphology;
#[cfg(feature = "Foundation_NSMorphologyCustomPronoun")]
pub use self::__NSMorphology::NSMorphologyCustomPronoun;
pub use self::__NSMorphology::{
    NSGrammaticalGender, NSGrammaticalGenderFeminine, NSGrammaticalGenderMasculine,
    NSGrammaticalGenderNeuter, NSGrammaticalGenderNotSet,
};
pub use self::__NSMorphology::{
    NSGrammaticalNumber, NSGrammaticalNumberNotSet, NSGrammaticalNumberPlural,
    NSGrammaticalNumberPluralFew, NSGrammaticalNumberPluralMany, NSGrammaticalNumberPluralTwo,
    NSGrammaticalNumberSingular, NSGrammaticalNumberZero,
};
pub use self::__NSMorphology::{
    NSGrammaticalPartOfSpeech, NSGrammaticalPartOfSpeechAbbreviation,
    NSGrammaticalPartOfSpeechAdjective, NSGrammaticalPartOfSpeechAdposition,
    NSGrammaticalPartOfSpeechAdverb, NSGrammaticalPartOfSpeechConjunction,
    NSGrammaticalPartOfSpeechDeterminer, NSGrammaticalPartOfSpeechInterjection,
    NSGrammaticalPartOfSpeechLetter, NSGrammaticalPartOfSpeechNotSet,
    NSGrammaticalPartOfSpeechNoun, NSGrammaticalPartOfSpeechNumeral,
    NSGrammaticalPartOfSpeechParticle, NSGrammaticalPartOfSpeechPreposition,
    NSGrammaticalPartOfSpeechPronoun, NSGrammaticalPartOfSpeechVerb,
};
#[cfg(feature = "Foundation_NSNetService")]
pub use self::__NSNetServices::NSNetService;
#[cfg(feature = "Foundation_NSNetServiceBrowser")]
pub use self::__NSNetServices::NSNetServiceBrowser;
pub use self::__NSNetServices::NSNetServiceBrowserDelegate;
pub use self::__NSNetServices::NSNetServiceDelegate;
pub use self::__NSNetServices::NSNetServicesErrorCode;
pub use self::__NSNetServices::NSNetServicesErrorDomain;
pub use self::__NSNetServices::{
    NSNetServiceListenForConnections, NSNetServiceNoAutoRename, NSNetServiceOptions,
};
pub use self::__NSNetServices::{
    NSNetServicesActivityInProgress, NSNetServicesBadArgumentError, NSNetServicesCancelledError,
    NSNetServicesCollisionError, NSNetServicesError, NSNetServicesInvalidError,
    NSNetServicesMissingRequiredConfigurationError, NSNetServicesNotFoundError,
    NSNetServicesTimeoutError, NSNetServicesUnknownError,
};
#[cfg(feature = "Foundation_NSNotification")]
pub use self::__NSNotification::NSNotification;
#[cfg(feature = "Foundation_NSNotificationCenter")]
pub use self::__NSNotification::NSNotificationCenter;
pub use self::__NSNotification::NSNotificationName;
#[cfg(feature = "Foundation_NSNotificationQueue")]
pub use self::__NSNotificationQueue::NSNotificationQueue;
pub use self::__NSNotificationQueue::{
    NSNotificationCoalescing, NSNotificationCoalescingOnName, NSNotificationCoalescingOnSender,
    NSNotificationNoCoalescing,
};
pub use self::__NSNotificationQueue::{NSPostASAP, NSPostNow, NSPostWhenIdle, NSPostingStyle};
#[cfg(feature = "Foundation_NSNull")]
pub use self::__NSNull::NSNull;
#[cfg(feature = "Foundation_NSNumberFormatter")]
pub use self::__NSNumberFormatter::NSNumberFormatter;
pub use self::__NSNumberFormatter::{
    NSNumberFormatterBehavior, NSNumberFormatterBehavior10_0, NSNumberFormatterBehavior10_4,
    NSNumberFormatterBehaviorDefault,
};
pub use self::__NSNumberFormatter::{
    NSNumberFormatterCurrencyAccountingStyle, NSNumberFormatterCurrencyISOCodeStyle,
    NSNumberFormatterCurrencyPluralStyle, NSNumberFormatterCurrencyStyle,
    NSNumberFormatterDecimalStyle, NSNumberFormatterNoStyle, NSNumberFormatterOrdinalStyle,
    NSNumberFormatterPercentStyle, NSNumberFormatterScientificStyle,
    NSNumberFormatterSpellOutStyle, NSNumberFormatterStyle,
};
pub use self::__NSNumberFormatter::{
    NSNumberFormatterPadAfterPrefix, NSNumberFormatterPadAfterSuffix,
    NSNumberFormatterPadBeforePrefix, NSNumberFormatterPadBeforeSuffix,
    NSNumberFormatterPadPosition,
};
pub use self::__NSNumberFormatter::{
    NSNumberFormatterRoundCeiling, NSNumberFormatterRoundDown, NSNumberFormatterRoundFloor,
    NSNumberFormatterRoundHalfDown, NSNumberFormatterRoundHalfEven, NSNumberFormatterRoundHalfUp,
    NSNumberFormatterRoundUp, NSNumberFormatterRoundingMode,
};
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSObjCRuntime::NSClassFromString;
pub use self::__NSObjCRuntime::NSComparator;
pub use self::__NSObjCRuntime::NSExceptionName;
pub use self::__NSObjCRuntime::NSFoundationVersionNumber;
pub use self::__NSObjCRuntime::NSGetSizeAndAlignment;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSObjCRuntime::NSProtocolFromString;
pub use self::__NSObjCRuntime::NSRunLoopMode;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSObjCRuntime::NSSelectorFromString;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSObjCRuntime::NSStringFromClass;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSObjCRuntime::NSStringFromProtocol;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSObjCRuntime::NSStringFromSelector;
pub use self::__NSObjCRuntime::{
    NSEnumerationConcurrent, NSEnumerationOptions, NSEnumerationReverse,
};
pub use self::__NSObjCRuntime::{
    NSQualityOfService, NSQualityOfServiceBackground, NSQualityOfServiceDefault,
    NSQualityOfServiceUserInitiated, NSQualityOfServiceUserInteractive, NSQualityOfServiceUtility,
};
pub use self::__NSObjCRuntime::{NSSortConcurrent, NSSortOptions, NSSortStable};
pub use self::__NSObject::NSAllocateObject;
pub use self::__NSObject::NSCoding;
pub use self::__NSObject::NSCopyObject;
pub use self::__NSObject::NSDeallocateObject;
pub use self::__NSObject::NSDecrementExtraRefCountWasZero;
pub use self::__NSObject::NSDiscardableContent;
pub use self::__NSObject::NSExtraRefCount;
pub use self::__NSObject::NSIncrementExtraRefCount;
pub use self::__NSObject::NSSecureCoding;
pub use self::__NSObject::NSShouldRetainWithZone;
#[cfg(feature = "Foundation_NSBlockOperation")]
pub use self::__NSOperation::NSBlockOperation;
#[cfg(feature = "Foundation_NSInvocationOperation")]
pub use self::__NSOperation::NSInvocationOperation;
pub use self::__NSOperation::NSInvocationOperationCancelledException;
pub use self::__NSOperation::NSInvocationOperationVoidResultException;
#[cfg(feature = "Foundation_NSOperation")]
pub use self::__NSOperation::NSOperation;
#[cfg(feature = "Foundation_NSOperationQueue")]
pub use self::__NSOperation::NSOperationQueue;
pub use self::__NSOperation::NSOperationQueueDefaultMaxConcurrentOperationCount;
pub use self::__NSOperation::{
    NSOperationQueuePriority, NSOperationQueuePriorityHigh, NSOperationQueuePriorityLow,
    NSOperationQueuePriorityNormal, NSOperationQueuePriorityVeryHigh,
    NSOperationQueuePriorityVeryLow,
};
#[cfg(feature = "Foundation_NSOrderedCollectionChange")]
pub use self::__NSOrderedCollectionChange::NSOrderedCollectionChange;
pub use self::__NSOrderedCollectionChange::{
    NSCollectionChangeInsert, NSCollectionChangeRemove, NSCollectionChangeType,
};
#[cfg(feature = "Foundation_NSOrderedCollectionDifference")]
pub use self::__NSOrderedCollectionDifference::NSOrderedCollectionDifference;
pub use self::__NSOrderedCollectionDifference::{
    NSOrderedCollectionDifferenceCalculationInferMoves,
    NSOrderedCollectionDifferenceCalculationOmitInsertedObjects,
    NSOrderedCollectionDifferenceCalculationOmitRemovedObjects,
    NSOrderedCollectionDifferenceCalculationOptions,
};
#[cfg(feature = "Foundation_NSOrthography")]
pub use self::__NSOrthography::NSOrthography;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSPathUtilities::NSFullUserName;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSPathUtilities::NSHomeDirectory;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSPathUtilities::NSHomeDirectoryForUser;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSPathUtilities::NSOpenStepRootDirectory;
#[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
pub use self::__NSPathUtilities::NSSearchPathForDirectoriesInDomains;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSPathUtilities::NSTemporaryDirectory;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSPathUtilities::NSUserName;
pub use self::__NSPathUtilities::{
    NSAdminApplicationDirectory, NSAllApplicationsDirectory, NSAllLibrariesDirectory,
    NSApplicationDirectory, NSApplicationScriptsDirectory, NSApplicationSupportDirectory,
    NSAutosavedInformationDirectory, NSCachesDirectory, NSCoreServiceDirectory,
    NSDemoApplicationDirectory, NSDesktopDirectory, NSDeveloperApplicationDirectory,
    NSDeveloperDirectory, NSDocumentDirectory, NSDocumentationDirectory, NSDownloadsDirectory,
    NSInputMethodsDirectory, NSItemReplacementDirectory, NSLibraryDirectory, NSMoviesDirectory,
    NSMusicDirectory, NSPicturesDirectory, NSPreferencePanesDirectory,
    NSPrinterDescriptionDirectory, NSSearchPathDirectory, NSSharedPublicDirectory,
    NSTrashDirectory, NSUserDirectory,
};
pub use self::__NSPathUtilities::{
    NSAllDomainsMask, NSLocalDomainMask, NSNetworkDomainMask, NSSearchPathDomainMask,
    NSSystemDomainMask, NSUserDomainMask,
};
#[cfg(feature = "Foundation_NSPersonNameComponents")]
pub use self::__NSPersonNameComponents::NSPersonNameComponents;
pub use self::__NSPersonNameComponentsFormatter::NSPersonNameComponentDelimiter;
pub use self::__NSPersonNameComponentsFormatter::NSPersonNameComponentFamilyName;
pub use self::__NSPersonNameComponentsFormatter::NSPersonNameComponentGivenName;
pub use self::__NSPersonNameComponentsFormatter::NSPersonNameComponentKey;
pub use self::__NSPersonNameComponentsFormatter::NSPersonNameComponentMiddleName;
pub use self::__NSPersonNameComponentsFormatter::NSPersonNameComponentNickname;
pub use self::__NSPersonNameComponentsFormatter::NSPersonNameComponentPrefix;
pub use self::__NSPersonNameComponentsFormatter::NSPersonNameComponentSuffix;
#[cfg(feature = "Foundation_NSPersonNameComponentsFormatter")]
pub use self::__NSPersonNameComponentsFormatter::NSPersonNameComponentsFormatter;
pub use self::__NSPersonNameComponentsFormatter::{
    NSPersonNameComponentsFormatterOptions, NSPersonNameComponentsFormatterPhonetic,
};
pub use self::__NSPersonNameComponentsFormatter::{
    NSPersonNameComponentsFormatterStyle, NSPersonNameComponentsFormatterStyleAbbreviated,
    NSPersonNameComponentsFormatterStyleDefault, NSPersonNameComponentsFormatterStyleLong,
    NSPersonNameComponentsFormatterStyleMedium, NSPersonNameComponentsFormatterStyleShort,
};
#[cfg(feature = "Foundation_NSPointerArray")]
pub use self::__NSPointerArray::NSPointerArray;
#[cfg(feature = "Foundation_NSPointerFunctions")]
pub use self::__NSPointerFunctions::NSPointerFunctions;
pub use self::__NSPointerFunctions::{
    NSPointerFunctionsCStringPersonality, NSPointerFunctionsCopyIn,
    NSPointerFunctionsIntegerPersonality, NSPointerFunctionsMachVirtualMemory,
    NSPointerFunctionsMallocMemory, NSPointerFunctionsObjectPersonality,
    NSPointerFunctionsObjectPointerPersonality, NSPointerFunctionsOpaqueMemory,
    NSPointerFunctionsOpaquePersonality, NSPointerFunctionsOptions, NSPointerFunctionsStrongMemory,
    NSPointerFunctionsStructPersonality, NSPointerFunctionsWeakMemory,
    NSPointerFunctionsZeroingWeakMemory,
};
#[cfg(feature = "Foundation_NSMachPort")]
pub use self::__NSPort::NSMachPort;
pub use self::__NSPort::NSMachPortDelegate;
#[cfg(feature = "Foundation_NSMessagePort")]
pub use self::__NSPort::NSMessagePort;
#[cfg(feature = "Foundation_NSPort")]
pub use self::__NSPort::NSPort;
pub use self::__NSPort::NSPortDelegate;
pub use self::__NSPort::NSPortDidBecomeInvalidNotification;
pub use self::__NSPort::NSSocketNativeHandle;
#[cfg(feature = "Foundation_NSSocketPort")]
pub use self::__NSPort::NSSocketPort;
pub use self::__NSPort::{
    NSMachPortDeallocateNone, NSMachPortDeallocateReceiveRight, NSMachPortDeallocateSendRight,
    NSMachPortOptions,
};
#[cfg(feature = "Foundation_NSPortCoder")]
pub use self::__NSPortCoder::NSPortCoder;
#[cfg(feature = "Foundation_NSPortMessage")]
pub use self::__NSPortMessage::NSPortMessage;
#[cfg(feature = "Foundation_NSMachBootstrapServer")]
pub use self::__NSPortNameServer::NSMachBootstrapServer;
#[cfg(feature = "Foundation_NSMessagePortNameServer")]
pub use self::__NSPortNameServer::NSMessagePortNameServer;
#[cfg(feature = "Foundation_NSPortNameServer")]
pub use self::__NSPortNameServer::NSPortNameServer;
#[cfg(feature = "Foundation_NSSocketPortNameServer")]
pub use self::__NSPortNameServer::NSSocketPortNameServer;
#[cfg(feature = "Foundation_NSPredicate")]
pub use self::__NSPredicate::NSPredicate;
pub use self::__NSProcessInfo::NSOperatingSystemVersion;
#[cfg(feature = "Foundation_NSProcessInfo")]
pub use self::__NSProcessInfo::NSProcessInfo;
pub use self::__NSProcessInfo::NSProcessInfoPowerStateDidChangeNotification;
pub use self::__NSProcessInfo::NSProcessInfoThermalStateDidChangeNotification;
pub use self::__NSProcessInfo::{
    NSActivityAnimationTrackingEnabled, NSActivityAutomaticTerminationDisabled,
    NSActivityBackground, NSActivityIdleDisplaySleepDisabled, NSActivityIdleSystemSleepDisabled,
    NSActivityLatencyCritical, NSActivityOptions, NSActivitySuddenTerminationDisabled,
    NSActivityTrackingEnabled, NSActivityUserInitiated,
    NSActivityUserInitiatedAllowingIdleSystemSleep, NSActivityUserInteractive,
};
pub use self::__NSProcessInfo::{
    NSHPUXOperatingSystem, NSMACHOperatingSystem, NSOSF1OperatingSystem, NSSolarisOperatingSystem,
    NSSunOSOperatingSystem, NSWindows95OperatingSystem, NSWindowsNTOperatingSystem,
};
pub use self::__NSProcessInfo::{
    NSProcessInfoThermalState, NSProcessInfoThermalStateCritical, NSProcessInfoThermalStateFair,
    NSProcessInfoThermalStateNominal, NSProcessInfoThermalStateSerious,
};
#[cfg(feature = "Foundation_NSProgress")]
pub use self::__NSProgress::NSProgress;
pub use self::__NSProgress::NSProgressEstimatedTimeRemainingKey;
pub use self::__NSProgress::NSProgressFileAnimationImageKey;
pub use self::__NSProgress::NSProgressFileAnimationImageOriginalRectKey;
pub use self::__NSProgress::NSProgressFileCompletedCountKey;
pub use self::__NSProgress::NSProgressFileIconKey;
pub use self::__NSProgress::NSProgressFileOperationKind;
pub use self::__NSProgress::NSProgressFileOperationKindCopying;
pub use self::__NSProgress::NSProgressFileOperationKindDecompressingAfterDownloading;
pub use self::__NSProgress::NSProgressFileOperationKindDownloading;
pub use self::__NSProgress::NSProgressFileOperationKindDuplicating;
pub use self::__NSProgress::NSProgressFileOperationKindKey;
pub use self::__NSProgress::NSProgressFileOperationKindReceiving;
pub use self::__NSProgress::NSProgressFileOperationKindUploading;
pub use self::__NSProgress::NSProgressFileTotalCountKey;
pub use self::__NSProgress::NSProgressFileURLKey;
pub use self::__NSProgress::NSProgressKind;
pub use self::__NSProgress::NSProgressKindFile;
pub use self::__NSProgress::NSProgressPublishingHandler;
pub use self::__NSProgress::NSProgressReporting;
pub use self::__NSProgress::NSProgressThroughputKey;
pub use self::__NSProgress::NSProgressUnpublishingHandler;
pub use self::__NSProgress::NSProgressUserInfoKey;
pub use self::__NSPropertyList::NSPropertyListReadOptions;
#[cfg(feature = "Foundation_NSPropertyListSerialization")]
pub use self::__NSPropertyList::NSPropertyListSerialization;
pub use self::__NSPropertyList::NSPropertyListWriteOptions;
pub use self::__NSPropertyList::{
    NSPropertyListBinaryFormat_v1_0, NSPropertyListFormat, NSPropertyListOpenStepFormat,
    NSPropertyListXMLFormat_v1_0,
};
pub use self::__NSPropertyList::{
    NSPropertyListImmutable, NSPropertyListMutabilityOptions, NSPropertyListMutableContainers,
    NSPropertyListMutableContainersAndLeaves,
};
#[cfg(feature = "Foundation_NSProtocolChecker")]
pub use self::__NSProtocolChecker::NSProtocolChecker;
pub use self::__NSRange::NSIntersectionRange;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSRange::NSRangeFromString;
pub use self::__NSRange::NSRangePointer;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSRange::NSStringFromRange;
pub use self::__NSRange::NSUnionRange;
#[cfg(feature = "Foundation_NSDataDetector")]
pub use self::__NSRegularExpression::NSDataDetector;
#[cfg(feature = "Foundation_NSRegularExpression")]
pub use self::__NSRegularExpression::NSRegularExpression;
pub use self::__NSRegularExpression::{
    NSMatchingAnchored, NSMatchingOptions, NSMatchingReportCompletion, NSMatchingReportProgress,
    NSMatchingWithTransparentBounds, NSMatchingWithoutAnchoringBounds,
};
pub use self::__NSRegularExpression::{
    NSMatchingCompleted, NSMatchingFlags, NSMatchingHitEnd, NSMatchingInternalError,
    NSMatchingProgress, NSMatchingRequiredEnd,
};
pub use self::__NSRegularExpression::{
    NSRegularExpressionAllowCommentsAndWhitespace, NSRegularExpressionAnchorsMatchLines,
    NSRegularExpressionCaseInsensitive, NSRegularExpressionDotMatchesLineSeparators,
    NSRegularExpressionIgnoreMetacharacters, NSRegularExpressionOptions,
    NSRegularExpressionUseUnicodeWordBoundaries, NSRegularExpressionUseUnixLineSeparators,
};
#[cfg(feature = "Foundation_NSRelativeDateTimeFormatter")]
pub use self::__NSRelativeDateTimeFormatter::NSRelativeDateTimeFormatter;
pub use self::__NSRelativeDateTimeFormatter::{
    NSRelativeDateTimeFormatterStyle, NSRelativeDateTimeFormatterStyleNamed,
    NSRelativeDateTimeFormatterStyleNumeric,
};
pub use self::__NSRelativeDateTimeFormatter::{
    NSRelativeDateTimeFormatterUnitsStyle, NSRelativeDateTimeFormatterUnitsStyleAbbreviated,
    NSRelativeDateTimeFormatterUnitsStyleFull, NSRelativeDateTimeFormatterUnitsStyleShort,
    NSRelativeDateTimeFormatterUnitsStyleSpellOut,
};
pub use self::__NSRunLoop::NSDefaultRunLoopMode;
#[cfg(feature = "Foundation_NSRunLoop")]
pub use self::__NSRunLoop::NSRunLoop;
pub use self::__NSRunLoop::NSRunLoopCommonModes;
#[cfg(feature = "Foundation_NSScanner")]
pub use self::__NSScanner::NSScanner;
#[cfg(feature = "Foundation_NSScriptClassDescription")]
pub use self::__NSScriptClassDescription::NSScriptClassDescription;
#[cfg(feature = "Foundation_NSScriptCoercionHandler")]
pub use self::__NSScriptCoercionHandler::NSScriptCoercionHandler;
#[cfg(feature = "Foundation_NSScriptCommand")]
pub use self::__NSScriptCommand::NSScriptCommand;
pub use self::__NSScriptCommand::{
    NSArgumentEvaluationScriptError, NSArgumentsWrongScriptError, NSCannotCreateScriptCommandError,
    NSInternalScriptError, NSKeySpecifierEvaluationScriptError, NSNoScriptError,
    NSOperationNotSupportedForKeyScriptError, NSReceiverEvaluationScriptError,
    NSReceiversCantHandleCommandScriptError, NSRequiredArgumentsMissingScriptError,
    NSUnknownKeyScriptError,
};
#[cfg(feature = "Foundation_NSScriptCommandDescription")]
pub use self::__NSScriptCommandDescription::NSScriptCommandDescription;
#[cfg(feature = "Foundation_NSScriptExecutionContext")]
pub use self::__NSScriptExecutionContext::NSScriptExecutionContext;
pub use self::__NSScriptKeyValueCoding::NSOperationNotSupportedForKeyException;
#[cfg(feature = "Foundation_NSIndexSpecifier")]
pub use self::__NSScriptObjectSpecifiers::NSIndexSpecifier;
#[cfg(feature = "Foundation_NSMiddleSpecifier")]
pub use self::__NSScriptObjectSpecifiers::NSMiddleSpecifier;
#[cfg(feature = "Foundation_NSNameSpecifier")]
pub use self::__NSScriptObjectSpecifiers::NSNameSpecifier;
#[cfg(feature = "Foundation_NSPositionalSpecifier")]
pub use self::__NSScriptObjectSpecifiers::NSPositionalSpecifier;
#[cfg(feature = "Foundation_NSPropertySpecifier")]
pub use self::__NSScriptObjectSpecifiers::NSPropertySpecifier;
#[cfg(feature = "Foundation_NSRandomSpecifier")]
pub use self::__NSScriptObjectSpecifiers::NSRandomSpecifier;
#[cfg(feature = "Foundation_NSRangeSpecifier")]
pub use self::__NSScriptObjectSpecifiers::NSRangeSpecifier;
#[cfg(feature = "Foundation_NSRelativeSpecifier")]
pub use self::__NSScriptObjectSpecifiers::NSRelativeSpecifier;
#[cfg(feature = "Foundation_NSScriptObjectSpecifier")]
pub use self::__NSScriptObjectSpecifiers::NSScriptObjectSpecifier;
#[cfg(feature = "Foundation_NSUniqueIDSpecifier")]
pub use self::__NSScriptObjectSpecifiers::NSUniqueIDSpecifier;
#[cfg(feature = "Foundation_NSWhoseSpecifier")]
pub use self::__NSScriptObjectSpecifiers::NSWhoseSpecifier;
pub use self::__NSScriptObjectSpecifiers::{
    NSContainerSpecifierError, NSInternalSpecifierError, NSInvalidIndexSpecifierError,
    NSNoSpecifierError, NSNoTopLevelContainersSpecifierError,
    NSOperationNotSupportedForKeySpecifierError, NSUnknownKeySpecifierError,
};
pub use self::__NSScriptObjectSpecifiers::{
    NSEverySubelement, NSIndexSubelement, NSMiddleSubelement, NSNoSubelement, NSRandomSubelement,
    NSWhoseSubelementIdentifier,
};
pub use self::__NSScriptObjectSpecifiers::{
    NSInsertionPosition, NSPositionAfter, NSPositionBefore, NSPositionBeginning, NSPositionEnd,
    NSPositionReplace,
};
pub use self::__NSScriptObjectSpecifiers::{NSRelativeAfter, NSRelativeBefore, NSRelativePosition};
#[cfg(feature = "Foundation_NSCloneCommand")]
pub use self::__NSScriptStandardSuiteCommands::NSCloneCommand;
#[cfg(feature = "Foundation_NSCloseCommand")]
pub use self::__NSScriptStandardSuiteCommands::NSCloseCommand;
#[cfg(feature = "Foundation_NSCountCommand")]
pub use self::__NSScriptStandardSuiteCommands::NSCountCommand;
#[cfg(feature = "Foundation_NSCreateCommand")]
pub use self::__NSScriptStandardSuiteCommands::NSCreateCommand;
#[cfg(feature = "Foundation_NSDeleteCommand")]
pub use self::__NSScriptStandardSuiteCommands::NSDeleteCommand;
#[cfg(feature = "Foundation_NSExistsCommand")]
pub use self::__NSScriptStandardSuiteCommands::NSExistsCommand;
#[cfg(feature = "Foundation_NSGetCommand")]
pub use self::__NSScriptStandardSuiteCommands::NSGetCommand;
#[cfg(feature = "Foundation_NSMoveCommand")]
pub use self::__NSScriptStandardSuiteCommands::NSMoveCommand;
#[cfg(feature = "Foundation_NSQuitCommand")]
pub use self::__NSScriptStandardSuiteCommands::NSQuitCommand;
#[cfg(feature = "Foundation_NSSetCommand")]
pub use self::__NSScriptStandardSuiteCommands::NSSetCommand;
pub use self::__NSScriptStandardSuiteCommands::{
    NSSaveOptions, NSSaveOptionsAsk, NSSaveOptionsNo, NSSaveOptionsYes,
};
#[cfg(feature = "Foundation_NSScriptSuiteRegistry")]
pub use self::__NSScriptSuiteRegistry::NSScriptSuiteRegistry;
#[cfg(feature = "Foundation_NSLogicalTest")]
pub use self::__NSScriptWhoseTests::NSLogicalTest;
#[cfg(feature = "Foundation_NSScriptWhoseTest")]
pub use self::__NSScriptWhoseTests::NSScriptWhoseTest;
#[cfg(feature = "Foundation_NSSpecifierTest")]
pub use self::__NSScriptWhoseTests::NSSpecifierTest;
pub use self::__NSScriptWhoseTests::{
    NSBeginsWithComparison, NSContainsComparison, NSEndsWithComparison, NSEqualToComparison,
    NSGreaterThanComparison, NSGreaterThanOrEqualToComparison, NSLessThanComparison,
    NSLessThanOrEqualToComparison, NSTestComparisonOperation,
};
#[cfg(feature = "Foundation_NSSortDescriptor")]
pub use self::__NSSortDescriptor::NSSortDescriptor;
pub use self::__NSSpellServer::NSGrammarCorrections;
pub use self::__NSSpellServer::NSGrammarRange;
pub use self::__NSSpellServer::NSGrammarUserDescription;
#[cfg(feature = "Foundation_NSSpellServer")]
pub use self::__NSSpellServer::NSSpellServer;
pub use self::__NSSpellServer::NSSpellServerDelegate;
#[cfg(feature = "Foundation_NSInputStream")]
pub use self::__NSStream::NSInputStream;
#[cfg(feature = "Foundation_NSOutputStream")]
pub use self::__NSStream::NSOutputStream;
#[cfg(feature = "Foundation_NSStream")]
pub use self::__NSStream::NSStream;
pub use self::__NSStream::NSStreamDataWrittenToMemoryStreamKey;
pub use self::__NSStream::NSStreamDelegate;
pub use self::__NSStream::NSStreamFileCurrentOffsetKey;
pub use self::__NSStream::NSStreamNetworkServiceType;
pub use self::__NSStream::NSStreamNetworkServiceTypeBackground;
pub use self::__NSStream::NSStreamNetworkServiceTypeCallSignaling;
pub use self::__NSStream::NSStreamNetworkServiceTypeValue;
pub use self::__NSStream::NSStreamNetworkServiceTypeVideo;
pub use self::__NSStream::NSStreamNetworkServiceTypeVoIP;
pub use self::__NSStream::NSStreamNetworkServiceTypeVoice;
pub use self::__NSStream::NSStreamPropertyKey;
pub use self::__NSStream::NSStreamSOCKSErrorDomain;
pub use self::__NSStream::NSStreamSOCKSProxyConfiguration;
pub use self::__NSStream::NSStreamSOCKSProxyConfigurationKey;
pub use self::__NSStream::NSStreamSOCKSProxyHostKey;
pub use self::__NSStream::NSStreamSOCKSProxyPasswordKey;
pub use self::__NSStream::NSStreamSOCKSProxyPortKey;
pub use self::__NSStream::NSStreamSOCKSProxyUserKey;
pub use self::__NSStream::NSStreamSOCKSProxyVersion;
pub use self::__NSStream::NSStreamSOCKSProxyVersion4;
pub use self::__NSStream::NSStreamSOCKSProxyVersion5;
pub use self::__NSStream::NSStreamSOCKSProxyVersionKey;
pub use self::__NSStream::NSStreamSocketSSLErrorDomain;
pub use self::__NSStream::NSStreamSocketSecurityLevel;
pub use self::__NSStream::NSStreamSocketSecurityLevelKey;
pub use self::__NSStream::NSStreamSocketSecurityLevelNegotiatedSSL;
pub use self::__NSStream::NSStreamSocketSecurityLevelNone;
pub use self::__NSStream::NSStreamSocketSecurityLevelSSLv2;
pub use self::__NSStream::NSStreamSocketSecurityLevelSSLv3;
pub use self::__NSStream::NSStreamSocketSecurityLevelTLSv1;
pub use self::__NSStream::{
    NSStreamEvent, NSStreamEventEndEncountered, NSStreamEventErrorOccurred,
    NSStreamEventHasBytesAvailable, NSStreamEventHasSpaceAvailable, NSStreamEventNone,
    NSStreamEventOpenCompleted,
};
pub use self::__NSStream::{
    NSStreamStatus, NSStreamStatusAtEnd, NSStreamStatusClosed, NSStreamStatusError,
    NSStreamStatusNotOpen, NSStreamStatusOpen, NSStreamStatusOpening, NSStreamStatusReading,
    NSStreamStatusWriting,
};
pub use self::__NSString::unichar;
pub use self::__NSString::NSCharacterConversionException;
#[cfg(feature = "Foundation_NSConstantString")]
pub use self::__NSString::NSConstantString;
#[cfg(feature = "Foundation_NSMutableString")]
pub use self::__NSString::NSMutableString;
pub use self::__NSString::NSParseErrorException;
#[cfg(feature = "Foundation_NSSimpleCString")]
pub use self::__NSString::NSSimpleCString;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSString::NSString;
pub use self::__NSString::NSStringEncodingDetectionAllowLossyKey;
pub use self::__NSString::NSStringEncodingDetectionDisallowedEncodingsKey;
pub use self::__NSString::NSStringEncodingDetectionFromWindowsKey;
pub use self::__NSString::NSStringEncodingDetectionLikelyLanguageKey;
pub use self::__NSString::NSStringEncodingDetectionLossySubstitutionKey;
pub use self::__NSString::NSStringEncodingDetectionOptionsKey;
pub use self::__NSString::NSStringEncodingDetectionSuggestedEncodingsKey;
pub use self::__NSString::NSStringEncodingDetectionUseOnlySuggestedEncodingsKey;
pub use self::__NSString::NSStringTransform;
pub use self::__NSString::NSStringTransformFullwidthToHalfwidth;
pub use self::__NSString::NSStringTransformHiraganaToKatakana;
pub use self::__NSString::NSStringTransformLatinToArabic;
pub use self::__NSString::NSStringTransformLatinToCyrillic;
pub use self::__NSString::NSStringTransformLatinToGreek;
pub use self::__NSString::NSStringTransformLatinToHangul;
pub use self::__NSString::NSStringTransformLatinToHebrew;
pub use self::__NSString::NSStringTransformLatinToHiragana;
pub use self::__NSString::NSStringTransformLatinToKatakana;
pub use self::__NSString::NSStringTransformLatinToThai;
pub use self::__NSString::NSStringTransformMandarinToLatin;
pub use self::__NSString::NSStringTransformStripCombiningMarks;
pub use self::__NSString::NSStringTransformStripDiacritics;
pub use self::__NSString::NSStringTransformToLatin;
pub use self::__NSString::NSStringTransformToUnicodeName;
pub use self::__NSString::NSStringTransformToXMLHex;
pub use self::__NSString::{
    NSASCIIStringEncoding, NSISO2022JPStringEncoding, NSISOLatin1StringEncoding,
    NSISOLatin2StringEncoding, NSJapaneseEUCStringEncoding, NSMacOSRomanStringEncoding,
    NSNEXTSTEPStringEncoding, NSNonLossyASCIIStringEncoding, NSShiftJISStringEncoding,
    NSStringEncoding, NSSymbolStringEncoding, NSUTF16BigEndianStringEncoding,
    NSUTF16LittleEndianStringEncoding, NSUTF16StringEncoding, NSUTF32BigEndianStringEncoding,
    NSUTF32LittleEndianStringEncoding, NSUTF32StringEncoding, NSUTF8StringEncoding,
    NSUnicodeStringEncoding, NSWindowsCP1250StringEncoding, NSWindowsCP1251StringEncoding,
    NSWindowsCP1252StringEncoding, NSWindowsCP1253StringEncoding, NSWindowsCP1254StringEncoding,
};
pub use self::__NSString::{
    NSAnchoredSearch, NSBackwardsSearch, NSCaseInsensitiveSearch, NSDiacriticInsensitiveSearch,
    NSForcedOrderingSearch, NSLiteralSearch, NSNumericSearch, NSRegularExpressionSearch,
    NSStringCompareOptions, NSWidthInsensitiveSearch,
};
pub use self::__NSString::{
    NSStringEncodingConversionAllowLossy, NSStringEncodingConversionExternalRepresentation,
    NSStringEncodingConversionOptions,
};
pub use self::__NSString::{
    NSStringEnumerationByCaretPositions, NSStringEnumerationByComposedCharacterSequences,
    NSStringEnumerationByDeletionClusters, NSStringEnumerationByLines,
    NSStringEnumerationByParagraphs, NSStringEnumerationBySentences, NSStringEnumerationByWords,
    NSStringEnumerationLocalized, NSStringEnumerationOptions, NSStringEnumerationReverse,
    NSStringEnumerationSubstringNotRequired,
};
#[cfg(feature = "Foundation_NSTask")]
pub use self::__NSTask::NSTask;
pub use self::__NSTask::NSTaskDidTerminateNotification;
pub use self::__NSTask::{
    NSTaskTerminationReason, NSTaskTerminationReasonExit, NSTaskTerminationReasonUncaughtSignal,
};
pub use self::__NSTextCheckingResult::NSTextCheckingAirlineKey;
pub use self::__NSTextCheckingResult::NSTextCheckingCityKey;
pub use self::__NSTextCheckingResult::NSTextCheckingCountryKey;
pub use self::__NSTextCheckingResult::NSTextCheckingFlightKey;
pub use self::__NSTextCheckingResult::NSTextCheckingJobTitleKey;
pub use self::__NSTextCheckingResult::NSTextCheckingKey;
pub use self::__NSTextCheckingResult::NSTextCheckingNameKey;
pub use self::__NSTextCheckingResult::NSTextCheckingOrganizationKey;
pub use self::__NSTextCheckingResult::NSTextCheckingPhoneKey;
#[cfg(feature = "Foundation_NSTextCheckingResult")]
pub use self::__NSTextCheckingResult::NSTextCheckingResult;
pub use self::__NSTextCheckingResult::NSTextCheckingStateKey;
pub use self::__NSTextCheckingResult::NSTextCheckingStreetKey;
pub use self::__NSTextCheckingResult::NSTextCheckingZIPKey;
pub use self::__NSTextCheckingResult::{
    NSTextCheckingAllCustomTypes, NSTextCheckingAllSystemTypes, NSTextCheckingAllTypes,
    NSTextCheckingTypes,
};
pub use self::__NSTextCheckingResult::{
    NSTextCheckingType, NSTextCheckingTypeAddress, NSTextCheckingTypeCorrection,
    NSTextCheckingTypeDash, NSTextCheckingTypeDate, NSTextCheckingTypeGrammar,
    NSTextCheckingTypeLink, NSTextCheckingTypeOrthography, NSTextCheckingTypePhoneNumber,
    NSTextCheckingTypeQuote, NSTextCheckingTypeRegularExpression, NSTextCheckingTypeReplacement,
    NSTextCheckingTypeSpelling, NSTextCheckingTypeTransitInformation,
};
pub use self::__NSThread::NSDidBecomeSingleThreadedNotification;
#[cfg(feature = "Foundation_NSThread")]
pub use self::__NSThread::NSThread;
pub use self::__NSThread::NSThreadWillExitNotification;
pub use self::__NSThread::NSWillBecomeMultiThreadedNotification;
pub use self::__NSTimeZone::NSSystemTimeZoneDidChangeNotification;
#[cfg(feature = "Foundation_NSTimeZone")]
pub use self::__NSTimeZone::NSTimeZone;
pub use self::__NSTimeZone::{
    NSTimeZoneNameStyle, NSTimeZoneNameStyleDaylightSaving, NSTimeZoneNameStyleGeneric,
    NSTimeZoneNameStyleShortDaylightSaving, NSTimeZoneNameStyleShortGeneric,
    NSTimeZoneNameStyleShortStandard, NSTimeZoneNameStyleStandard,
};
#[cfg(feature = "Foundation_NSTimer")]
pub use self::__NSTimer::NSTimer;
#[cfg(feature = "Foundation_NSURLAuthenticationChallenge")]
pub use self::__NSURLAuthenticationChallenge::NSURLAuthenticationChallenge;
pub use self::__NSURLAuthenticationChallenge::NSURLAuthenticationChallengeSender;
#[cfg(feature = "Foundation_NSCachedURLResponse")]
pub use self::__NSURLCache::NSCachedURLResponse;
#[cfg(feature = "Foundation_NSURLCache")]
pub use self::__NSURLCache::NSURLCache;
pub use self::__NSURLCache::{
    NSURLCacheStorageAllowed, NSURLCacheStorageAllowedInMemoryOnly, NSURLCacheStorageNotAllowed,
    NSURLCacheStoragePolicy,
};
#[cfg(feature = "Foundation_NSURLConnection")]
pub use self::__NSURLConnection::NSURLConnection;
pub use self::__NSURLConnection::NSURLConnectionDataDelegate;
pub use self::__NSURLConnection::NSURLConnectionDelegate;
pub use self::__NSURLConnection::NSURLConnectionDownloadDelegate;
#[cfg(feature = "Foundation_NSURLCredential")]
pub use self::__NSURLCredential::NSURLCredential;
pub use self::__NSURLCredential::{
    NSURLCredentialPersistence, NSURLCredentialPersistenceForSession,
    NSURLCredentialPersistenceNone, NSURLCredentialPersistencePermanent,
    NSURLCredentialPersistenceSynchronizable,
};
#[cfg(feature = "Foundation_NSURLCredentialStorage")]
pub use self::__NSURLCredentialStorage::NSURLCredentialStorage;
pub use self::__NSURLCredentialStorage::NSURLCredentialStorageChangedNotification;
pub use self::__NSURLCredentialStorage::NSURLCredentialStorageRemoveSynchronizableCredentials;
#[cfg(feature = "Foundation_NSURLDownload")]
pub use self::__NSURLDownload::NSURLDownload;
pub use self::__NSURLDownload::NSURLDownloadDelegate;
pub use self::__NSURLError::NSErrorFailingURLStringKey;
pub use self::__NSURLError::NSURLErrorBackgroundTaskCancelledReasonKey;
pub use self::__NSURLError::NSURLErrorDomain;
pub use self::__NSURLError::NSURLErrorFailingURLErrorKey;
pub use self::__NSURLError::NSURLErrorFailingURLPeerTrustErrorKey;
pub use self::__NSURLError::NSURLErrorFailingURLStringErrorKey;
pub use self::__NSURLError::NSURLErrorNetworkUnavailableReasonKey;
pub use self::__NSURLError::{
    NSURLErrorAppTransportSecurityRequiresSecureConnection,
    NSURLErrorBackgroundSessionInUseByAnotherProcess,
    NSURLErrorBackgroundSessionRequiresSharedContainer, NSURLErrorBackgroundSessionWasDisconnected,
    NSURLErrorBadServerResponse, NSURLErrorBadURL, NSURLErrorCallIsActive, NSURLErrorCancelled,
    NSURLErrorCannotCloseFile, NSURLErrorCannotConnectToHost, NSURLErrorCannotCreateFile,
    NSURLErrorCannotDecodeContentData, NSURLErrorCannotDecodeRawData, NSURLErrorCannotFindHost,
    NSURLErrorCannotLoadFromNetwork, NSURLErrorCannotMoveFile, NSURLErrorCannotOpenFile,
    NSURLErrorCannotParseResponse, NSURLErrorCannotRemoveFile, NSURLErrorCannotWriteToFile,
    NSURLErrorClientCertificateRejected, NSURLErrorClientCertificateRequired,
    NSURLErrorDNSLookupFailed, NSURLErrorDataLengthExceedsMaximum, NSURLErrorDataNotAllowed,
    NSURLErrorDownloadDecodingFailedMidStream, NSURLErrorDownloadDecodingFailedToComplete,
    NSURLErrorFileDoesNotExist, NSURLErrorFileIsDirectory, NSURLErrorFileOutsideSafeArea,
    NSURLErrorHTTPTooManyRedirects, NSURLErrorInternationalRoamingOff,
    NSURLErrorNetworkConnectionLost, NSURLErrorNoPermissionsToReadFile,
    NSURLErrorNotConnectedToInternet, NSURLErrorRedirectToNonExistentLocation,
    NSURLErrorRequestBodyStreamExhausted, NSURLErrorResourceUnavailable,
    NSURLErrorSecureConnectionFailed, NSURLErrorServerCertificateHasBadDate,
    NSURLErrorServerCertificateHasUnknownRoot, NSURLErrorServerCertificateNotYetValid,
    NSURLErrorServerCertificateUntrusted, NSURLErrorTimedOut, NSURLErrorUnknown,
    NSURLErrorUnsupportedURL, NSURLErrorUserAuthenticationRequired,
    NSURLErrorUserCancelledAuthentication, NSURLErrorZeroByteResource,
};
pub use self::__NSURLError::{
    NSURLErrorCancelledReasonBackgroundUpdatesDisabled,
    NSURLErrorCancelledReasonInsufficientSystemResources,
    NSURLErrorCancelledReasonUserForceQuitApplication,
};
pub use self::__NSURLError::{
    NSURLErrorNetworkUnavailableReason, NSURLErrorNetworkUnavailableReasonCellular,
    NSURLErrorNetworkUnavailableReasonConstrained, NSURLErrorNetworkUnavailableReasonExpensive,
};
pub use self::__NSURLHandle::NSFTPPropertyActiveTransferModeKey;
pub use self::__NSURLHandle::NSFTPPropertyFTPProxy;
pub use self::__NSURLHandle::NSFTPPropertyFileOffsetKey;
pub use self::__NSURLHandle::NSFTPPropertyUserLoginKey;
pub use self::__NSURLHandle::NSFTPPropertyUserPasswordKey;
pub use self::__NSURLHandle::NSHTTPPropertyErrorPageDataKey;
pub use self::__NSURLHandle::NSHTTPPropertyHTTPProxy;
pub use self::__NSURLHandle::NSHTTPPropertyRedirectionHeadersKey;
pub use self::__NSURLHandle::NSHTTPPropertyServerHTTPVersionKey;
pub use self::__NSURLHandle::NSHTTPPropertyStatusCodeKey;
pub use self::__NSURLHandle::NSHTTPPropertyStatusReasonKey;
#[cfg(feature = "Foundation_NSURLHandle")]
pub use self::__NSURLHandle::NSURLHandle;
pub use self::__NSURLHandle::NSURLHandleClient;
pub use self::__NSURLHandle::{
    NSURLHandleLoadFailed, NSURLHandleLoadInProgress, NSURLHandleLoadSucceeded,
    NSURLHandleNotLoaded, NSURLHandleStatus,
};
pub use self::__NSURLProtectionSpace::NSURLAuthenticationMethodClientCertificate;
pub use self::__NSURLProtectionSpace::NSURLAuthenticationMethodDefault;
pub use self::__NSURLProtectionSpace::NSURLAuthenticationMethodHTMLForm;
pub use self::__NSURLProtectionSpace::NSURLAuthenticationMethodHTTPBasic;
pub use self::__NSURLProtectionSpace::NSURLAuthenticationMethodHTTPDigest;
pub use self::__NSURLProtectionSpace::NSURLAuthenticationMethodNTLM;
pub use self::__NSURLProtectionSpace::NSURLAuthenticationMethodNegotiate;
pub use self::__NSURLProtectionSpace::NSURLAuthenticationMethodServerTrust;
#[cfg(feature = "Foundation_NSURLProtectionSpace")]
pub use self::__NSURLProtectionSpace::NSURLProtectionSpace;
pub use self::__NSURLProtectionSpace::NSURLProtectionSpaceFTP;
pub use self::__NSURLProtectionSpace::NSURLProtectionSpaceFTPProxy;
pub use self::__NSURLProtectionSpace::NSURLProtectionSpaceHTTP;
pub use self::__NSURLProtectionSpace::NSURLProtectionSpaceHTTPProxy;
pub use self::__NSURLProtectionSpace::NSURLProtectionSpaceHTTPS;
pub use self::__NSURLProtectionSpace::NSURLProtectionSpaceHTTPSProxy;
pub use self::__NSURLProtectionSpace::NSURLProtectionSpaceSOCKSProxy;
#[cfg(feature = "Foundation_NSURLProtocol")]
pub use self::__NSURLProtocol::NSURLProtocol;
pub use self::__NSURLProtocol::NSURLProtocolClient;
#[cfg(feature = "Foundation_NSMutableURLRequest")]
pub use self::__NSURLRequest::NSMutableURLRequest;
#[cfg(feature = "Foundation_NSURLRequest")]
pub use self::__NSURLRequest::NSURLRequest;
pub use self::__NSURLRequest::{
    NSURLNetworkServiceTypeAVStreaming, NSURLNetworkServiceTypeBackground,
    NSURLNetworkServiceTypeCallSignaling, NSURLNetworkServiceTypeDefault,
    NSURLNetworkServiceTypeResponsiveAV, NSURLNetworkServiceTypeResponsiveData,
    NSURLNetworkServiceTypeVideo, NSURLNetworkServiceTypeVoIP, NSURLNetworkServiceTypeVoice,
    NSURLRequestNetworkServiceType,
};
pub use self::__NSURLRequest::{
    NSURLRequestAttribution, NSURLRequestAttributionDeveloper, NSURLRequestAttributionUser,
};
pub use self::__NSURLRequest::{
    NSURLRequestCachePolicy, NSURLRequestReloadIgnoringCacheData,
    NSURLRequestReloadIgnoringLocalAndRemoteCacheData, NSURLRequestReloadIgnoringLocalCacheData,
    NSURLRequestReloadRevalidatingCacheData, NSURLRequestReturnCacheDataDontLoad,
    NSURLRequestReturnCacheDataElseLoad, NSURLRequestUseProtocolCachePolicy,
};
#[cfg(feature = "Foundation_NSHTTPURLResponse")]
pub use self::__NSURLResponse::NSHTTPURLResponse;
#[cfg(feature = "Foundation_NSURLResponse")]
pub use self::__NSURLResponse::NSURLResponse;
#[cfg(feature = "Foundation_NSURLSession")]
pub use self::__NSURLSession::NSURLSession;
#[cfg(feature = "Foundation_NSURLSessionConfiguration")]
pub use self::__NSURLSession::NSURLSessionConfiguration;
pub use self::__NSURLSession::NSURLSessionDataDelegate;
#[cfg(feature = "Foundation_NSURLSessionDataTask")]
pub use self::__NSURLSession::NSURLSessionDataTask;
pub use self::__NSURLSession::NSURLSessionDelegate;
pub use self::__NSURLSession::NSURLSessionDownloadDelegate;
#[cfg(feature = "Foundation_NSURLSessionDownloadTask")]
pub use self::__NSURLSession::NSURLSessionDownloadTask;
pub use self::__NSURLSession::NSURLSessionDownloadTaskResumeData;
pub use self::__NSURLSession::NSURLSessionStreamDelegate;
#[cfg(feature = "Foundation_NSURLSessionStreamTask")]
pub use self::__NSURLSession::NSURLSessionStreamTask;
#[cfg(feature = "Foundation_NSURLSessionTask")]
pub use self::__NSURLSession::NSURLSessionTask;
pub use self::__NSURLSession::NSURLSessionTaskDelegate;
#[cfg(feature = "Foundation_NSURLSessionTaskMetrics")]
pub use self::__NSURLSession::NSURLSessionTaskMetrics;
pub use self::__NSURLSession::NSURLSessionTaskPriorityDefault;
pub use self::__NSURLSession::NSURLSessionTaskPriorityHigh;
pub use self::__NSURLSession::NSURLSessionTaskPriorityLow;
#[cfg(feature = "Foundation_NSURLSessionTaskTransactionMetrics")]
pub use self::__NSURLSession::NSURLSessionTaskTransactionMetrics;
pub use self::__NSURLSession::NSURLSessionTransferSizeUnknown;
#[cfg(feature = "Foundation_NSURLSessionUploadTask")]
pub use self::__NSURLSession::NSURLSessionUploadTask;
pub use self::__NSURLSession::NSURLSessionWebSocketDelegate;
#[cfg(feature = "Foundation_NSURLSessionWebSocketMessage")]
pub use self::__NSURLSession::NSURLSessionWebSocketMessage;
#[cfg(feature = "Foundation_NSURLSessionWebSocketTask")]
pub use self::__NSURLSession::NSURLSessionWebSocketTask;
pub use self::__NSURLSession::{
    NSURLSessionAuthChallengeCancelAuthenticationChallenge, NSURLSessionAuthChallengeDisposition,
    NSURLSessionAuthChallengePerformDefaultHandling,
    NSURLSessionAuthChallengeRejectProtectionSpace, NSURLSessionAuthChallengeUseCredential,
};
pub use self::__NSURLSession::{
    NSURLSessionDelayedRequestCancel, NSURLSessionDelayedRequestContinueLoading,
    NSURLSessionDelayedRequestDisposition, NSURLSessionDelayedRequestUseNewRequest,
};
pub use self::__NSURLSession::{
    NSURLSessionMultipathServiceType, NSURLSessionMultipathServiceTypeAggregate,
    NSURLSessionMultipathServiceTypeHandover, NSURLSessionMultipathServiceTypeInteractive,
    NSURLSessionMultipathServiceTypeNone,
};
pub use self::__NSURLSession::{
    NSURLSessionResponseAllow, NSURLSessionResponseBecomeDownload,
    NSURLSessionResponseBecomeStream, NSURLSessionResponseCancel, NSURLSessionResponseDisposition,
};
pub use self::__NSURLSession::{
    NSURLSessionTaskMetricsDomainResolutionProtocol,
    NSURLSessionTaskMetricsDomainResolutionProtocolHTTPS,
    NSURLSessionTaskMetricsDomainResolutionProtocolTCP,
    NSURLSessionTaskMetricsDomainResolutionProtocolTLS,
    NSURLSessionTaskMetricsDomainResolutionProtocolUDP,
    NSURLSessionTaskMetricsDomainResolutionProtocolUnknown,
};
pub use self::__NSURLSession::{
    NSURLSessionTaskMetricsResourceFetchType, NSURLSessionTaskMetricsResourceFetchTypeLocalCache,
    NSURLSessionTaskMetricsResourceFetchTypeNetworkLoad,
    NSURLSessionTaskMetricsResourceFetchTypeServerPush,
    NSURLSessionTaskMetricsResourceFetchTypeUnknown,
};
pub use self::__NSURLSession::{
    NSURLSessionTaskState, NSURLSessionTaskStateCanceling, NSURLSessionTaskStateCompleted,
    NSURLSessionTaskStateRunning, NSURLSessionTaskStateSuspended,
};
pub use self::__NSURLSession::{
    NSURLSessionWebSocketCloseCode, NSURLSessionWebSocketCloseCodeAbnormalClosure,
    NSURLSessionWebSocketCloseCodeGoingAway, NSURLSessionWebSocketCloseCodeInternalServerError,
    NSURLSessionWebSocketCloseCodeInvalid, NSURLSessionWebSocketCloseCodeInvalidFramePayloadData,
    NSURLSessionWebSocketCloseCodeMandatoryExtensionMissing,
    NSURLSessionWebSocketCloseCodeMessageTooBig, NSURLSessionWebSocketCloseCodeNoStatusReceived,
    NSURLSessionWebSocketCloseCodeNormalClosure, NSURLSessionWebSocketCloseCodePolicyViolation,
    NSURLSessionWebSocketCloseCodeProtocolError, NSURLSessionWebSocketCloseCodeTLSHandshakeFailure,
    NSURLSessionWebSocketCloseCodeUnsupportedData,
};
pub use self::__NSURLSession::{
    NSURLSessionWebSocketMessageType, NSURLSessionWebSocketMessageTypeData,
    NSURLSessionWebSocketMessageTypeString,
};
#[cfg(feature = "Foundation_NSUbiquitousKeyValueStore")]
pub use self::__NSUbiquitousKeyValueStore::NSUbiquitousKeyValueStore;
pub use self::__NSUbiquitousKeyValueStore::NSUbiquitousKeyValueStoreChangeReasonKey;
pub use self::__NSUbiquitousKeyValueStore::NSUbiquitousKeyValueStoreChangedKeysKey;
pub use self::__NSUbiquitousKeyValueStore::NSUbiquitousKeyValueStoreDidChangeExternallyNotification;
pub use self::__NSUbiquitousKeyValueStore::{
    NSUbiquitousKeyValueStoreAccountChange, NSUbiquitousKeyValueStoreInitialSyncChange,
    NSUbiquitousKeyValueStoreQuotaViolationChange, NSUbiquitousKeyValueStoreServerChange,
};
pub use self::__NSUndoManager::NSUndoCloseGroupingRunLoopOrdering;
#[cfg(feature = "Foundation_NSUndoManager")]
pub use self::__NSUndoManager::NSUndoManager;
pub use self::__NSUndoManager::NSUndoManagerCheckpointNotification;
pub use self::__NSUndoManager::NSUndoManagerDidCloseUndoGroupNotification;
pub use self::__NSUndoManager::NSUndoManagerDidOpenUndoGroupNotification;
pub use self::__NSUndoManager::NSUndoManagerDidRedoChangeNotification;
pub use self::__NSUndoManager::NSUndoManagerDidUndoChangeNotification;
pub use self::__NSUndoManager::NSUndoManagerGroupIsDiscardableKey;
pub use self::__NSUndoManager::NSUndoManagerWillCloseUndoGroupNotification;
pub use self::__NSUndoManager::NSUndoManagerWillRedoChangeNotification;
pub use self::__NSUndoManager::NSUndoManagerWillUndoChangeNotification;
#[cfg(feature = "Foundation_NSDimension")]
pub use self::__NSUnit::NSDimension;
#[cfg(feature = "Foundation_NSUnit")]
pub use self::__NSUnit::NSUnit;
#[cfg(feature = "Foundation_NSUnitAcceleration")]
pub use self::__NSUnit::NSUnitAcceleration;
#[cfg(feature = "Foundation_NSUnitAngle")]
pub use self::__NSUnit::NSUnitAngle;
#[cfg(feature = "Foundation_NSUnitArea")]
pub use self::__NSUnit::NSUnitArea;
#[cfg(feature = "Foundation_NSUnitConcentrationMass")]
pub use self::__NSUnit::NSUnitConcentrationMass;
#[cfg(feature = "Foundation_NSUnitConverter")]
pub use self::__NSUnit::NSUnitConverter;
#[cfg(feature = "Foundation_NSUnitConverterLinear")]
pub use self::__NSUnit::NSUnitConverterLinear;
#[cfg(feature = "Foundation_NSUnitDispersion")]
pub use self::__NSUnit::NSUnitDispersion;
#[cfg(feature = "Foundation_NSUnitDuration")]
pub use self::__NSUnit::NSUnitDuration;
#[cfg(feature = "Foundation_NSUnitElectricCharge")]
pub use self::__NSUnit::NSUnitElectricCharge;
#[cfg(feature = "Foundation_NSUnitElectricCurrent")]
pub use self::__NSUnit::NSUnitElectricCurrent;
#[cfg(feature = "Foundation_NSUnitElectricPotentialDifference")]
pub use self::__NSUnit::NSUnitElectricPotentialDifference;
#[cfg(feature = "Foundation_NSUnitElectricResistance")]
pub use self::__NSUnit::NSUnitElectricResistance;
#[cfg(feature = "Foundation_NSUnitEnergy")]
pub use self::__NSUnit::NSUnitEnergy;
#[cfg(feature = "Foundation_NSUnitFrequency")]
pub use self::__NSUnit::NSUnitFrequency;
#[cfg(feature = "Foundation_NSUnitFuelEfficiency")]
pub use self::__NSUnit::NSUnitFuelEfficiency;
#[cfg(feature = "Foundation_NSUnitIlluminance")]
pub use self::__NSUnit::NSUnitIlluminance;
#[cfg(feature = "Foundation_NSUnitInformationStorage")]
pub use self::__NSUnit::NSUnitInformationStorage;
#[cfg(feature = "Foundation_NSUnitLength")]
pub use self::__NSUnit::NSUnitLength;
#[cfg(feature = "Foundation_NSUnitMass")]
pub use self::__NSUnit::NSUnitMass;
#[cfg(feature = "Foundation_NSUnitPower")]
pub use self::__NSUnit::NSUnitPower;
#[cfg(feature = "Foundation_NSUnitPressure")]
pub use self::__NSUnit::NSUnitPressure;
#[cfg(feature = "Foundation_NSUnitSpeed")]
pub use self::__NSUnit::NSUnitSpeed;
#[cfg(feature = "Foundation_NSUnitTemperature")]
pub use self::__NSUnit::NSUnitTemperature;
#[cfg(feature = "Foundation_NSUnitVolume")]
pub use self::__NSUnit::NSUnitVolume;
#[cfg(feature = "Foundation_NSUserActivity")]
pub use self::__NSUserActivity::NSUserActivity;
pub use self::__NSUserActivity::NSUserActivityDelegate;
pub use self::__NSUserActivity::NSUserActivityPersistentIdentifier;
pub use self::__NSUserActivity::NSUserActivityTypeBrowsingWeb;
pub use self::__NSUserDefaults::NSAMPMDesignation;
pub use self::__NSUserDefaults::NSArgumentDomain;
pub use self::__NSUserDefaults::NSCurrencySymbol;
pub use self::__NSUserDefaults::NSDateFormatString;
pub use self::__NSUserDefaults::NSDateTimeOrdering;
pub use self::__NSUserDefaults::NSDecimalDigits;
pub use self::__NSUserDefaults::NSDecimalSeparator;
pub use self::__NSUserDefaults::NSEarlierTimeDesignations;
pub use self::__NSUserDefaults::NSGlobalDomain;
pub use self::__NSUserDefaults::NSHourNameDesignations;
pub use self::__NSUserDefaults::NSInternationalCurrencyString;
pub use self::__NSUserDefaults::NSLaterTimeDesignations;
pub use self::__NSUserDefaults::NSMonthNameArray;
pub use self::__NSUserDefaults::NSNegativeCurrencyFormatString;
pub use self::__NSUserDefaults::NSNextDayDesignations;
pub use self::__NSUserDefaults::NSNextNextDayDesignations;
pub use self::__NSUserDefaults::NSPositiveCurrencyFormatString;
pub use self::__NSUserDefaults::NSPriorDayDesignations;
pub use self::__NSUserDefaults::NSRegistrationDomain;
pub use self::__NSUserDefaults::NSShortDateFormatString;
pub use self::__NSUserDefaults::NSShortMonthNameArray;
pub use self::__NSUserDefaults::NSShortTimeDateFormatString;
pub use self::__NSUserDefaults::NSShortWeekDayNameArray;
pub use self::__NSUserDefaults::NSThisDayDesignations;
pub use self::__NSUserDefaults::NSThousandsSeparator;
pub use self::__NSUserDefaults::NSTimeDateFormatString;
pub use self::__NSUserDefaults::NSTimeFormatString;
pub use self::__NSUserDefaults::NSUbiquitousUserDefaultsCompletedInitialSyncNotification;
pub use self::__NSUserDefaults::NSUbiquitousUserDefaultsDidChangeAccountsNotification;
pub use self::__NSUserDefaults::NSUbiquitousUserDefaultsNoCloudAccountNotification;
#[cfg(feature = "Foundation_NSUserDefaults")]
pub use self::__NSUserDefaults::NSUserDefaults;
pub use self::__NSUserDefaults::NSUserDefaultsDidChangeNotification;
pub use self::__NSUserDefaults::NSUserDefaultsSizeLimitExceededNotification;
pub use self::__NSUserDefaults::NSWeekDayNameArray;
pub use self::__NSUserDefaults::NSYearMonthWeekDesignations;
#[cfg(feature = "Foundation_NSUserNotification")]
pub use self::__NSUserNotification::NSUserNotification;
#[cfg(feature = "Foundation_NSUserNotificationAction")]
pub use self::__NSUserNotification::NSUserNotificationAction;
#[cfg(feature = "Foundation_NSUserNotificationCenter")]
pub use self::__NSUserNotification::NSUserNotificationCenter;
pub use self::__NSUserNotification::NSUserNotificationCenterDelegate;
pub use self::__NSUserNotification::NSUserNotificationDefaultSoundName;
pub use self::__NSUserNotification::{
    NSUserNotificationActivationType, NSUserNotificationActivationTypeActionButtonClicked,
    NSUserNotificationActivationTypeAdditionalActionClicked,
    NSUserNotificationActivationTypeContentsClicked, NSUserNotificationActivationTypeNone,
    NSUserNotificationActivationTypeReplied,
};
#[cfg(feature = "Foundation_NSUserAppleScriptTask")]
pub use self::__NSUserScriptTask::NSUserAppleScriptTask;
pub use self::__NSUserScriptTask::NSUserAppleScriptTaskCompletionHandler;
#[cfg(feature = "Foundation_NSUserAutomatorTask")]
pub use self::__NSUserScriptTask::NSUserAutomatorTask;
pub use self::__NSUserScriptTask::NSUserAutomatorTaskCompletionHandler;
#[cfg(feature = "Foundation_NSUserScriptTask")]
pub use self::__NSUserScriptTask::NSUserScriptTask;
pub use self::__NSUserScriptTask::NSUserScriptTaskCompletionHandler;
#[cfg(feature = "Foundation_NSUserUnixTask")]
pub use self::__NSUserScriptTask::NSUserUnixTask;
pub use self::__NSUserScriptTask::NSUserUnixTaskCompletionHandler;
#[cfg(feature = "Foundation_NSNumber")]
pub use self::__NSValue::NSNumber;
#[cfg(feature = "Foundation_NSValue")]
pub use self::__NSValue::NSValue;
pub use self::__NSValueTransformer::NSIsNilTransformerName;
pub use self::__NSValueTransformer::NSIsNotNilTransformerName;
pub use self::__NSValueTransformer::NSKeyedUnarchiveFromDataTransformerName;
pub use self::__NSValueTransformer::NSNegateBooleanTransformerName;
#[cfg(feature = "Foundation_NSSecureUnarchiveFromDataTransformer")]
pub use self::__NSValueTransformer::NSSecureUnarchiveFromDataTransformer;
pub use self::__NSValueTransformer::NSSecureUnarchiveFromDataTransformerName;
pub use self::__NSValueTransformer::NSUnarchiveFromDataTransformerName;
#[cfg(feature = "Foundation_NSValueTransformer")]
pub use self::__NSValueTransformer::NSValueTransformer;
pub use self::__NSValueTransformer::NSValueTransformerName;
#[cfg(feature = "Foundation_NSXMLDTDNode")]
pub use self::__NSXMLDTDNode::NSXMLDTDNode;
pub use self::__NSXMLDTDNode::{
    NSXMLAttributeCDATAKind, NSXMLAttributeEntitiesKind, NSXMLAttributeEntityKind,
    NSXMLAttributeEnumerationKind, NSXMLAttributeIDKind, NSXMLAttributeIDRefKind,
    NSXMLAttributeIDRefsKind, NSXMLAttributeNMTokenKind, NSXMLAttributeNMTokensKind,
    NSXMLAttributeNotationKind, NSXMLDTDNodeKind, NSXMLElementDeclarationAnyKind,
    NSXMLElementDeclarationElementKind, NSXMLElementDeclarationEmptyKind,
    NSXMLElementDeclarationMixedKind, NSXMLElementDeclarationUndefinedKind, NSXMLEntityGeneralKind,
    NSXMLEntityParameterKind, NSXMLEntityParsedKind, NSXMLEntityPredefined,
    NSXMLEntityUnparsedKind,
};
#[cfg(feature = "Foundation_NSXMLDocument")]
pub use self::__NSXMLDocument::NSXMLDocument;
pub use self::__NSXMLDocument::{
    NSXMLDocumentContentKind, NSXMLDocumentHTMLKind, NSXMLDocumentTextKind, NSXMLDocumentXHTMLKind,
    NSXMLDocumentXMLKind,
};
#[cfg(feature = "Foundation_NSXMLElement")]
pub use self::__NSXMLElement::NSXMLElement;
#[cfg(feature = "Foundation_NSXMLNode")]
pub use self::__NSXMLNode::NSXMLNode;
pub use self::__NSXMLNode::{
    NSXMLAttributeDeclarationKind, NSXMLAttributeKind, NSXMLCommentKind, NSXMLDTDKind,
    NSXMLDocumentKind, NSXMLElementDeclarationKind, NSXMLElementKind, NSXMLEntityDeclarationKind,
    NSXMLInvalidKind, NSXMLNamespaceKind, NSXMLNodeKind, NSXMLNotationDeclarationKind,
    NSXMLProcessingInstructionKind, NSXMLTextKind,
};
pub use self::__NSXMLNodeOptions::{
    NSXMLDocumentIncludeContentTypeDeclaration, NSXMLDocumentTidyHTML, NSXMLDocumentTidyXML,
    NSXMLDocumentValidate, NSXMLDocumentXInclude, NSXMLNodeCompactEmptyElement,
    NSXMLNodeExpandEmptyElement, NSXMLNodeIsCDATA, NSXMLNodeLoadExternalEntitiesAlways,
    NSXMLNodeLoadExternalEntitiesNever, NSXMLNodeLoadExternalEntitiesSameOriginOnly,
    NSXMLNodeNeverEscapeContents, NSXMLNodeOptions, NSXMLNodeOptionsNone, NSXMLNodePreserveAll,
    NSXMLNodePreserveAttributeOrder, NSXMLNodePreserveCDATA, NSXMLNodePreserveCharacterReferences,
    NSXMLNodePreserveDTD, NSXMLNodePreserveEmptyElements, NSXMLNodePreserveEntities,
    NSXMLNodePreserveNamespaceOrder, NSXMLNodePreservePrefixes, NSXMLNodePreserveQuotes,
    NSXMLNodePreserveWhitespace, NSXMLNodePrettyPrint, NSXMLNodePromoteSignificantWhitespace,
    NSXMLNodeUseDoubleQuotes, NSXMLNodeUseSingleQuotes,
};
#[cfg(feature = "Foundation_NSXMLParser")]
pub use self::__NSXMLParser::NSXMLParser;
pub use self::__NSXMLParser::NSXMLParserDelegate;
pub use self::__NSXMLParser::NSXMLParserErrorDomain;
pub use self::__NSXMLParser::{
    NSXMLParserAttributeHasNoValueError, NSXMLParserAttributeListNotFinishedError,
    NSXMLParserAttributeListNotStartedError, NSXMLParserAttributeNotFinishedError,
    NSXMLParserAttributeNotStartedError, NSXMLParserAttributeRedefinedError,
    NSXMLParserCDATANotFinishedError, NSXMLParserCharacterRefAtEOFError,
    NSXMLParserCharacterRefInDTDError, NSXMLParserCharacterRefInEpilogError,
    NSXMLParserCharacterRefInPrologError, NSXMLParserCommentContainsDoubleHyphenError,
    NSXMLParserCommentNotFinishedError, NSXMLParserConditionalSectionNotFinishedError,
    NSXMLParserConditionalSectionNotStartedError, NSXMLParserDOCTYPEDeclNotFinishedError,
    NSXMLParserDelegateAbortedParseError, NSXMLParserDocumentStartError,
    NSXMLParserElementContentDeclNotFinishedError, NSXMLParserElementContentDeclNotStartedError,
    NSXMLParserEmptyDocumentError, NSXMLParserEncodingNotSupportedError,
    NSXMLParserEntityBoundaryError, NSXMLParserEntityIsExternalError,
    NSXMLParserEntityIsParameterError, NSXMLParserEntityNotFinishedError,
    NSXMLParserEntityNotStartedError, NSXMLParserEntityRefAtEOFError,
    NSXMLParserEntityRefInDTDError, NSXMLParserEntityRefInEpilogError,
    NSXMLParserEntityRefInPrologError, NSXMLParserEntityRefLoopError,
    NSXMLParserEntityReferenceMissingSemiError, NSXMLParserEntityReferenceWithoutNameError,
    NSXMLParserEntityValueRequiredError, NSXMLParserEqualExpectedError, NSXMLParserError,
    NSXMLParserExternalStandaloneEntityError, NSXMLParserExternalSubsetNotFinishedError,
    NSXMLParserExtraContentError, NSXMLParserGTRequiredError, NSXMLParserInternalError,
    NSXMLParserInvalidCharacterError, NSXMLParserInvalidCharacterInEntityError,
    NSXMLParserInvalidCharacterRefError, NSXMLParserInvalidConditionalSectionError,
    NSXMLParserInvalidDecimalCharacterRefError, NSXMLParserInvalidEncodingError,
    NSXMLParserInvalidEncodingNameError, NSXMLParserInvalidHexCharacterRefError,
    NSXMLParserInvalidURIError, NSXMLParserLTRequiredError, NSXMLParserLTSlashRequiredError,
    NSXMLParserLessThanSymbolInAttributeError, NSXMLParserLiteralNotFinishedError,
    NSXMLParserLiteralNotStartedError, NSXMLParserMisplacedCDATAEndStringError,
    NSXMLParserMisplacedXMLDeclarationError, NSXMLParserMixedContentDeclNotFinishedError,
    NSXMLParserMixedContentDeclNotStartedError, NSXMLParserNAMERequiredError,
    NSXMLParserNMTOKENRequiredError, NSXMLParserNamespaceDeclarationError, NSXMLParserNoDTDError,
    NSXMLParserNotWellBalancedError, NSXMLParserNotationNotFinishedError,
    NSXMLParserNotationNotStartedError, NSXMLParserOutOfMemoryError,
    NSXMLParserPCDATARequiredError, NSXMLParserParsedEntityRefAtEOFError,
    NSXMLParserParsedEntityRefInEpilogError, NSXMLParserParsedEntityRefInInternalError,
    NSXMLParserParsedEntityRefInInternalSubsetError, NSXMLParserParsedEntityRefInPrologError,
    NSXMLParserParsedEntityRefMissingSemiError, NSXMLParserParsedEntityRefNoNameError,
    NSXMLParserPrematureDocumentEndError, NSXMLParserProcessingInstructionNotFinishedError,
    NSXMLParserProcessingInstructionNotStartedError, NSXMLParserPublicIdentifierRequiredError,
    NSXMLParserSeparatorRequiredError, NSXMLParserSpaceRequiredError,
    NSXMLParserStandaloneValueError, NSXMLParserStringNotClosedError,
    NSXMLParserStringNotStartedError, NSXMLParserTagNameMismatchError, NSXMLParserURIFragmentError,
    NSXMLParserURIRequiredError, NSXMLParserUndeclaredEntityError, NSXMLParserUnfinishedTagError,
    NSXMLParserUnknownEncodingError, NSXMLParserUnparsedEntityError,
    NSXMLParserXMLDeclNotFinishedError, NSXMLParserXMLDeclNotStartedError,
};
pub use self::__NSXMLParser::{
    NSXMLParserExternalEntityResolvingPolicy, NSXMLParserResolveExternalEntitiesAlways,
    NSXMLParserResolveExternalEntitiesNever, NSXMLParserResolveExternalEntitiesNoNetwork,
    NSXMLParserResolveExternalEntitiesSameOriginOnly,
};
#[cfg(feature = "Foundation_NSXPCCoder")]
pub use self::__NSXPCConnection::NSXPCCoder;
#[cfg(feature = "Foundation_NSXPCConnection")]
pub use self::__NSXPCConnection::NSXPCConnection;
#[cfg(feature = "Foundation_NSXPCInterface")]
pub use self::__NSXPCConnection::NSXPCInterface;
#[cfg(feature = "Foundation_NSXPCListener")]
pub use self::__NSXPCConnection::NSXPCListener;
pub use self::__NSXPCConnection::NSXPCListenerDelegate;
#[cfg(feature = "Foundation_NSXPCListenerEndpoint")]
pub use self::__NSXPCConnection::NSXPCListenerEndpoint;
pub use self::__NSXPCConnection::NSXPCProxyCreating;
pub use self::__NSXPCConnection::{NSXPCConnectionOptions, NSXPCConnectionPrivileged};
pub use self::__NSZone::NSAllocateCollectable;
pub use self::__NSZone::NSAllocateMemoryPages;
pub use self::__NSZone::NSCopyMemoryPages;
pub use self::__NSZone::NSCreateZone;
pub use self::__NSZone::NSDeallocateMemoryPages;
pub use self::__NSZone::NSDefaultMallocZone;
pub use self::__NSZone::NSLogPageSize;
pub use self::__NSZone::NSPageSize;
pub use self::__NSZone::NSRealMemoryAvailable;
pub use self::__NSZone::NSReallocateCollectable;
pub use self::__NSZone::NSRecycleZone;
pub use self::__NSZone::NSRoundDownToMultipleOfPageSize;
pub use self::__NSZone::NSRoundUpToMultipleOfPageSize;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSZone::NSSetZoneName;
pub use self::__NSZone::NSZoneCalloc;
pub use self::__NSZone::NSZoneFree;
pub use self::__NSZone::NSZoneFromPointer;
pub use self::__NSZone::NSZoneMalloc;
#[cfg(feature = "Foundation_NSString")]
pub use self::__NSZone::NSZoneName;
pub use self::__NSZone::NSZoneRealloc;
pub use self::__NSZone::{NSCollectorDisabledOption, NSScannedOption};
#[cfg(feature = "Foundation_NSFileSecurity")]
pub use self::__NSURL::NSFileSecurity;
pub use self::__NSURL::NSThumbnail1024x1024SizeKey;
pub use self::__NSURL::NSURLAddedToDirectoryDateKey;
pub use self::__NSURL::NSURLApplicationIsScriptableKey;
pub use self::__NSURL::NSURLAttributeModificationDateKey;
pub use self::__NSURL::NSURLBookmarkFileCreationOptions;
pub use self::__NSURL::NSURLCanonicalPathKey;
#[cfg(feature = "Foundation_NSURLComponents")]
pub use self::__NSURL::NSURLComponents;
pub use self::__NSURL::NSURLContentAccessDateKey;
pub use self::__NSURL::NSURLContentModificationDateKey;
pub use self::__NSURL::NSURLContentTypeKey;
pub use self::__NSURL::NSURLCreationDateKey;
pub use self::__NSURL::NSURLCustomIconKey;
pub use self::__NSURL::NSURLDocumentIdentifierKey;
pub use self::__NSURL::NSURLEffectiveIconKey;
pub use self::__NSURL::NSURLFileAllocatedSizeKey;
pub use self::__NSURL::NSURLFileContentIdentifierKey;
pub use self::__NSURL::NSURLFileProtectionComplete;
pub use self::__NSURL::NSURLFileProtectionCompleteUnlessOpen;
pub use self::__NSURL::NSURLFileProtectionCompleteUntilFirstUserAuthentication;
pub use self::__NSURL::NSURLFileProtectionKey;
pub use self::__NSURL::NSURLFileProtectionNone;
pub use self::__NSURL::NSURLFileProtectionType;
pub use self::__NSURL::NSURLFileResourceIdentifierKey;
pub use self::__NSURL::NSURLFileResourceType;
pub use self::__NSURL::NSURLFileResourceTypeBlockSpecial;
pub use self::__NSURL::NSURLFileResourceTypeCharacterSpecial;
pub use self::__NSURL::NSURLFileResourceTypeDirectory;
pub use self::__NSURL::NSURLFileResourceTypeKey;
pub use self::__NSURL::NSURLFileResourceTypeNamedPipe;
pub use self::__NSURL::NSURLFileResourceTypeRegular;
pub use self::__NSURL::NSURLFileResourceTypeSocket;
pub use self::__NSURL::NSURLFileResourceTypeSymbolicLink;
pub use self::__NSURL::NSURLFileResourceTypeUnknown;
pub use self::__NSURL::NSURLFileScheme;
pub use self::__NSURL::NSURLFileSecurityKey;
pub use self::__NSURL::NSURLFileSizeKey;
pub use self::__NSURL::NSURLGenerationIdentifierKey;
pub use self::__NSURL::NSURLHasHiddenExtensionKey;
pub use self::__NSURL::NSURLIsAliasFileKey;
pub use self::__NSURL::NSURLIsApplicationKey;
pub use self::__NSURL::NSURLIsDirectoryKey;
pub use self::__NSURL::NSURLIsExcludedFromBackupKey;
pub use self::__NSURL::NSURLIsExecutableKey;
pub use self::__NSURL::NSURLIsHiddenKey;
pub use self::__NSURL::NSURLIsMountTriggerKey;
pub use self::__NSURL::NSURLIsPackageKey;
pub use self::__NSURL::NSURLIsPurgeableKey;
pub use self::__NSURL::NSURLIsReadableKey;
pub use self::__NSURL::NSURLIsRegularFileKey;
pub use self::__NSURL::NSURLIsSparseKey;
pub use self::__NSURL::NSURLIsSymbolicLinkKey;
pub use self::__NSURL::NSURLIsSystemImmutableKey;
pub use self::__NSURL::NSURLIsUbiquitousItemKey;
pub use self::__NSURL::NSURLIsUserImmutableKey;
pub use self::__NSURL::NSURLIsVolumeKey;
pub use self::__NSURL::NSURLIsWritableKey;
pub use self::__NSURL::NSURLKeysOfUnsetValuesKey;
pub use self::__NSURL::NSURLLabelColorKey;
pub use self::__NSURL::NSURLLabelNumberKey;
pub use self::__NSURL::NSURLLinkCountKey;
pub use self::__NSURL::NSURLLocalizedLabelKey;
pub use self::__NSURL::NSURLLocalizedNameKey;
pub use self::__NSURL::NSURLLocalizedTypeDescriptionKey;
pub use self::__NSURL::NSURLMayHaveExtendedAttributesKey;
pub use self::__NSURL::NSURLMayShareFileContentKey;
pub use self::__NSURL::NSURLNameKey;
pub use self::__NSURL::NSURLParentDirectoryURLKey;
pub use self::__NSURL::NSURLPathKey;
pub use self::__NSURL::NSURLPreferredIOBlockSizeKey;
pub use self::__NSURL::NSURLQuarantinePropertiesKey;
#[cfg(feature = "Foundation_NSURLQueryItem")]
pub use self::__NSURL::NSURLQueryItem;
pub use self::__NSURL::NSURLResourceKey;
pub use self::__NSURL::NSURLTagNamesKey;
pub use self::__NSURL::NSURLThumbnailDictionaryItem;
pub use self::__NSURL::NSURLThumbnailDictionaryKey;
pub use self::__NSURL::NSURLThumbnailKey;
pub use self::__NSURL::NSURLTotalFileAllocatedSizeKey;
pub use self::__NSURL::NSURLTotalFileSizeKey;
pub use self::__NSURL::NSURLTypeIdentifierKey;
pub use self::__NSURL::NSURLUbiquitousItemContainerDisplayNameKey;
pub use self::__NSURL::NSURLUbiquitousItemDownloadRequestedKey;
pub use self::__NSURL::NSURLUbiquitousItemDownloadingErrorKey;
pub use self::__NSURL::NSURLUbiquitousItemDownloadingStatus;
pub use self::__NSURL::NSURLUbiquitousItemDownloadingStatusCurrent;
pub use self::__NSURL::NSURLUbiquitousItemDownloadingStatusDownloaded;
pub use self::__NSURL::NSURLUbiquitousItemDownloadingStatusKey;
pub use self::__NSURL::NSURLUbiquitousItemDownloadingStatusNotDownloaded;
pub use self::__NSURL::NSURLUbiquitousItemHasUnresolvedConflictsKey;
pub use self::__NSURL::NSURLUbiquitousItemIsDownloadedKey;
pub use self::__NSURL::NSURLUbiquitousItemIsDownloadingKey;
pub use self::__NSURL::NSURLUbiquitousItemIsExcludedFromSyncKey;
pub use self::__NSURL::NSURLUbiquitousItemIsSharedKey;
pub use self::__NSURL::NSURLUbiquitousItemIsUploadedKey;
pub use self::__NSURL::NSURLUbiquitousItemIsUploadingKey;
pub use self::__NSURL::NSURLUbiquitousItemPercentDownloadedKey;
pub use self::__NSURL::NSURLUbiquitousItemPercentUploadedKey;
pub use self::__NSURL::NSURLUbiquitousItemUploadingErrorKey;
pub use self::__NSURL::NSURLUbiquitousSharedItemCurrentUserPermissionsKey;
pub use self::__NSURL::NSURLUbiquitousSharedItemCurrentUserRoleKey;
pub use self::__NSURL::NSURLUbiquitousSharedItemMostRecentEditorNameComponentsKey;
pub use self::__NSURL::NSURLUbiquitousSharedItemOwnerNameComponentsKey;
pub use self::__NSURL::NSURLUbiquitousSharedItemPermissions;
pub use self::__NSURL::NSURLUbiquitousSharedItemPermissionsReadOnly;
pub use self::__NSURL::NSURLUbiquitousSharedItemPermissionsReadWrite;
pub use self::__NSURL::NSURLUbiquitousSharedItemRole;
pub use self::__NSURL::NSURLUbiquitousSharedItemRoleOwner;
pub use self::__NSURL::NSURLUbiquitousSharedItemRoleParticipant;
pub use self::__NSURL::NSURLVolumeAvailableCapacityForImportantUsageKey;
pub use self::__NSURL::NSURLVolumeAvailableCapacityForOpportunisticUsageKey;
pub use self::__NSURL::NSURLVolumeAvailableCapacityKey;
pub use self::__NSURL::NSURLVolumeCreationDateKey;
pub use self::__NSURL::NSURLVolumeIdentifierKey;
pub use self::__NSURL::NSURLVolumeIsAutomountedKey;
pub use self::__NSURL::NSURLVolumeIsBrowsableKey;
pub use self::__NSURL::NSURLVolumeIsEjectableKey;
pub use self::__NSURL::NSURLVolumeIsEncryptedKey;
pub use self::__NSURL::NSURLVolumeIsInternalKey;
pub use self::__NSURL::NSURLVolumeIsJournalingKey;
pub use self::__NSURL::NSURLVolumeIsLocalKey;
pub use self::__NSURL::NSURLVolumeIsReadOnlyKey;
pub use self::__NSURL::NSURLVolumeIsRemovableKey;
pub use self::__NSURL::NSURLVolumeIsRootFileSystemKey;
pub use self::__NSURL::NSURLVolumeLocalizedFormatDescriptionKey;
pub use self::__NSURL::NSURLVolumeLocalizedNameKey;
pub use self::__NSURL::NSURLVolumeMaximumFileSizeKey;
pub use self::__NSURL::NSURLVolumeNameKey;
pub use self::__NSURL::NSURLVolumeResourceCountKey;
pub use self::__NSURL::NSURLVolumeSupportsAccessPermissionsKey;
pub use self::__NSURL::NSURLVolumeSupportsAdvisoryFileLockingKey;
pub use self::__NSURL::NSURLVolumeSupportsCasePreservedNamesKey;
pub use self::__NSURL::NSURLVolumeSupportsCaseSensitiveNamesKey;
pub use self::__NSURL::NSURLVolumeSupportsCompressionKey;
pub use self::__NSURL::NSURLVolumeSupportsExclusiveRenamingKey;
pub use self::__NSURL::NSURLVolumeSupportsExtendedSecurityKey;
pub use self::__NSURL::NSURLVolumeSupportsFileCloningKey;
pub use self::__NSURL::NSURLVolumeSupportsFileProtectionKey;
pub use self::__NSURL::NSURLVolumeSupportsHardLinksKey;
pub use self::__NSURL::NSURLVolumeSupportsImmutableFilesKey;
pub use self::__NSURL::NSURLVolumeSupportsJournalingKey;
pub use self::__NSURL::NSURLVolumeSupportsPersistentIDsKey;
pub use self::__NSURL::NSURLVolumeSupportsRenamingKey;
pub use self::__NSURL::NSURLVolumeSupportsRootDirectoryDatesKey;
pub use self::__NSURL::NSURLVolumeSupportsSparseFilesKey;
pub use self::__NSURL::NSURLVolumeSupportsSwapRenamingKey;
pub use self::__NSURL::NSURLVolumeSupportsSymbolicLinksKey;
pub use self::__NSURL::NSURLVolumeSupportsVolumeSizesKey;
pub use self::__NSURL::NSURLVolumeSupportsZeroRunsKey;
pub use self::__NSURL::NSURLVolumeTotalCapacityKey;
pub use self::__NSURL::NSURLVolumeURLForRemountingKey;
pub use self::__NSURL::NSURLVolumeURLKey;
pub use self::__NSURL::NSURLVolumeUUIDStringKey;
#[cfg(feature = "Foundation_NSURL")]
pub use self::__NSURL::NSURL;
pub use self::__NSURL::{
    NSURLBookmarkCreationMinimalBookmark, NSURLBookmarkCreationOptions,
    NSURLBookmarkCreationPreferFileIDResolution,
    NSURLBookmarkCreationSecurityScopeAllowOnlyReadAccess,
    NSURLBookmarkCreationSuitableForBookmarkFile, NSURLBookmarkCreationWithSecurityScope,
    NSURLBookmarkCreationWithoutImplicitSecurityScope,
};
pub use self::__NSURL::{
    NSURLBookmarkResolutionOptions, NSURLBookmarkResolutionWithSecurityScope,
    NSURLBookmarkResolutionWithoutImplicitStartAccessing, NSURLBookmarkResolutionWithoutMounting,
    NSURLBookmarkResolutionWithoutUI,
};
#[cfg(feature = "Foundation_NSUUID")]
pub use self::__NSUUID::NSUUID;
#[cfg(feature = "Foundation_NSXMLDTD")]
pub use self::__NSXMLDTD::NSXMLDTD;
