//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CloudKit::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "CloudKit_CKFetchShareMetadataOperation")]
    pub struct CKFetchShareMetadataOperation;

    #[cfg(feature = "CloudKit_CKFetchShareMetadataOperation")]
    unsafe impl ClassType for CKFetchShareMetadataOperation {
        #[inherits(NSOperation, NSObject)]
        type Super = CKOperation;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "CloudKit_CKFetchShareMetadataOperation")]
unsafe impl NSObjectProtocol for CKFetchShareMetadataOperation {}

extern_methods!(
    #[cfg(feature = "CloudKit_CKFetchShareMetadataOperation")]
    unsafe impl CKFetchShareMetadataOperation {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSURL"))]
        #[method_id(@__retain_semantics Init initWithShareURLs:)]
        pub unsafe fn initWithShareURLs(
            this: Option<Allocated<Self>>,
            share_ur_ls: &NSArray<NSURL>,
        ) -> Id<Self>;

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSURL"))]
        #[method_id(@__retain_semantics Other shareURLs)]
        pub unsafe fn shareURLs(&self) -> Option<Id<NSArray<NSURL>>>;

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSURL"))]
        #[method(setShareURLs:)]
        pub unsafe fn setShareURLs(&self, share_ur_ls: Option<&NSArray<NSURL>>);

        #[method(shouldFetchRootRecord)]
        pub unsafe fn shouldFetchRootRecord(&self) -> bool;

        #[method(setShouldFetchRootRecord:)]
        pub unsafe fn setShouldFetchRootRecord(&self, should_fetch_root_record: bool);

        #[cfg(feature = "Foundation_NSArray")]
        #[method_id(@__retain_semantics Other rootRecordDesiredKeys)]
        pub unsafe fn rootRecordDesiredKeys(&self) -> Option<Id<NSArray<CKRecordFieldKey>>>;

        #[cfg(feature = "Foundation_NSArray")]
        #[method(setRootRecordDesiredKeys:)]
        pub unsafe fn setRootRecordDesiredKeys(
            &self,
            root_record_desired_keys: Option<&NSArray<CKRecordFieldKey>>,
        );

        #[cfg(all(
            feature = "CloudKit_CKShareMetadata",
            feature = "Foundation_NSError",
            feature = "Foundation_NSURL"
        ))]
        #[method(perShareMetadataBlock)]
        pub unsafe fn perShareMetadataBlock(
            &self,
        ) -> *mut Block<(NonNull<NSURL>, *mut CKShareMetadata, *mut NSError), ()>;

        #[cfg(all(
            feature = "CloudKit_CKShareMetadata",
            feature = "Foundation_NSError",
            feature = "Foundation_NSURL"
        ))]
        #[method(setPerShareMetadataBlock:)]
        pub unsafe fn setPerShareMetadataBlock(
            &self,
            per_share_metadata_block: Option<
                &Block<(NonNull<NSURL>, *mut CKShareMetadata, *mut NSError), ()>,
            >,
        );

        #[cfg(feature = "Foundation_NSError")]
        #[method(fetchShareMetadataCompletionBlock)]
        pub unsafe fn fetchShareMetadataCompletionBlock(&self) -> *mut Block<(*mut NSError,), ()>;

        #[cfg(feature = "Foundation_NSError")]
        #[method(setFetchShareMetadataCompletionBlock:)]
        pub unsafe fn setFetchShareMetadataCompletionBlock(
            &self,
            fetch_share_metadata_completion_block: Option<&Block<(*mut NSError,), ()>>,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "CloudKit_CKFetchShareMetadataOperation")]
    unsafe impl CKFetchShareMetadataOperation {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
