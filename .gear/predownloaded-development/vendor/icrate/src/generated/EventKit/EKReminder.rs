//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreLocation::*;
use crate::EventKit::*;
use crate::Foundation::*;
use crate::MapKit::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "EventKit_EKReminder")]
    pub struct EKReminder;

    #[cfg(feature = "EventKit_EKReminder")]
    unsafe impl ClassType for EKReminder {
        #[inherits(EKObject, NSObject)]
        type Super = EKCalendarItem;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "EventKit_EKReminder")]
unsafe impl NSObjectProtocol for EKReminder {}

extern_methods!(
    #[cfg(feature = "EventKit_EKReminder")]
    unsafe impl EKReminder {
        #[cfg(feature = "EventKit_EKEventStore")]
        #[method_id(@__retain_semantics Other reminderWithEventStore:)]
        pub unsafe fn reminderWithEventStore(event_store: &EKEventStore) -> Id<EKReminder>;

        #[cfg(feature = "Foundation_NSDateComponents")]
        #[method_id(@__retain_semantics Other startDateComponents)]
        pub unsafe fn startDateComponents(&self) -> Option<Id<NSDateComponents>>;

        #[cfg(feature = "Foundation_NSDateComponents")]
        #[method(setStartDateComponents:)]
        pub unsafe fn setStartDateComponents(
            &self,
            start_date_components: Option<&NSDateComponents>,
        );

        #[cfg(feature = "Foundation_NSDateComponents")]
        #[method_id(@__retain_semantics Other dueDateComponents)]
        pub unsafe fn dueDateComponents(&self) -> Option<Id<NSDateComponents>>;

        #[cfg(feature = "Foundation_NSDateComponents")]
        #[method(setDueDateComponents:)]
        pub unsafe fn setDueDateComponents(&self, due_date_components: Option<&NSDateComponents>);

        #[method(isCompleted)]
        pub unsafe fn isCompleted(&self) -> bool;

        #[method(setCompleted:)]
        pub unsafe fn setCompleted(&self, completed: bool);

        #[cfg(feature = "Foundation_NSDate")]
        #[method_id(@__retain_semantics Other completionDate)]
        pub unsafe fn completionDate(&self) -> Option<Id<NSDate>>;

        #[cfg(feature = "Foundation_NSDate")]
        #[method(setCompletionDate:)]
        pub unsafe fn setCompletionDate(&self, completion_date: Option<&NSDate>);

        #[method(priority)]
        pub unsafe fn priority(&self) -> NSUInteger;

        #[method(setPriority:)]
        pub unsafe fn setPriority(&self, priority: NSUInteger);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "EventKit_EKReminder")]
    unsafe impl EKReminder {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
