//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::ExternalAccessory::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "ExternalAccessory_EASession")]
    pub struct EASession;

    #[cfg(feature = "ExternalAccessory_EASession")]
    unsafe impl ClassType for EASession {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "ExternalAccessory_EASession")]
unsafe impl NSObjectProtocol for EASession {}

extern_methods!(
    #[cfg(feature = "ExternalAccessory_EASession")]
    unsafe impl EASession {
        #[cfg(all(
            feature = "ExternalAccessory_EAAccessory",
            feature = "Foundation_NSString"
        ))]
        #[method_id(@__retain_semantics Init initWithAccessory:forProtocol:)]
        pub unsafe fn initWithAccessory_forProtocol(
            this: Option<Allocated<Self>>,
            accessory: &EAAccessory,
            protocol_string: &NSString,
        ) -> Option<Id<Self>>;

        #[cfg(feature = "ExternalAccessory_EAAccessory")]
        #[method_id(@__retain_semantics Other accessory)]
        pub unsafe fn accessory(&self) -> Option<Id<EAAccessory>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other protocolString)]
        pub unsafe fn protocolString(&self) -> Option<Id<NSString>>;

        #[cfg(feature = "Foundation_NSInputStream")]
        #[method_id(@__retain_semantics Other inputStream)]
        pub unsafe fn inputStream(&self) -> Option<Id<NSInputStream>>;

        #[cfg(feature = "Foundation_NSOutputStream")]
        #[method_id(@__retain_semantics Other outputStream)]
        pub unsafe fn outputStream(&self) -> Option<Id<NSOutputStream>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "ExternalAccessory_EASession")]
    unsafe impl EASession {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
