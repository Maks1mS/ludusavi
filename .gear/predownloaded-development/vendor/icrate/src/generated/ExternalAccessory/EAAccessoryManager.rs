//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::ExternalAccessory::*;
use crate::Foundation::*;

ns_enum!(
    #[underlying(NSInteger)]
    pub enum EABluetoothAccessoryPickerErrorCode {
        EABluetoothAccessoryPickerAlreadyConnected = 0,
        EABluetoothAccessoryPickerResultNotFound = 1,
        EABluetoothAccessoryPickerResultCancelled = 2,
        EABluetoothAccessoryPickerResultFailed = 3,
    }
);

extern_static!(EABluetoothAccessoryPickerErrorDomain: &'static NSString);

pub type EABluetoothAccessoryPickerCompletion = *mut Block<(*mut NSError,), ()>;

extern_static!(EAAccessoryDidConnectNotification: &'static NSString);

extern_static!(EAAccessoryDidDisconnectNotification: &'static NSString);

extern_static!(EAAccessoryKey: &'static NSString);

extern_static!(EAAccessorySelectedKey: &'static NSString);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "ExternalAccessory_EAAccessoryManager")]
    pub struct EAAccessoryManager;

    #[cfg(feature = "ExternalAccessory_EAAccessoryManager")]
    unsafe impl ClassType for EAAccessoryManager {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "ExternalAccessory_EAAccessoryManager")]
unsafe impl NSObjectProtocol for EAAccessoryManager {}

extern_methods!(
    #[cfg(feature = "ExternalAccessory_EAAccessoryManager")]
    unsafe impl EAAccessoryManager {
        #[method_id(@__retain_semantics Other sharedAccessoryManager)]
        pub unsafe fn sharedAccessoryManager() -> Id<EAAccessoryManager>;

        #[cfg(feature = "Foundation_NSPredicate")]
        #[method(showBluetoothAccessoryPickerWithNameFilter:completion:)]
        pub unsafe fn showBluetoothAccessoryPickerWithNameFilter_completion(
            &self,
            predicate: Option<&NSPredicate>,
            completion: EABluetoothAccessoryPickerCompletion,
        );

        #[method(registerForLocalNotifications)]
        pub unsafe fn registerForLocalNotifications(&self);

        #[method(unregisterForLocalNotifications)]
        pub unsafe fn unregisterForLocalNotifications(&self);

        #[cfg(all(
            feature = "ExternalAccessory_EAAccessory",
            feature = "Foundation_NSArray"
        ))]
        #[method_id(@__retain_semantics Other connectedAccessories)]
        pub unsafe fn connectedAccessories(&self) -> Id<NSArray<EAAccessory>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "ExternalAccessory_EAAccessoryManager")]
    unsafe impl EAAccessoryManager {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
