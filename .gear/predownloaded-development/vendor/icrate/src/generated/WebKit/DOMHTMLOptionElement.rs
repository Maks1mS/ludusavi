//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "WebKit_DOMHTMLOptionElement")]
    #[deprecated]
    pub struct DOMHTMLOptionElement;

    #[cfg(feature = "WebKit_DOMHTMLOptionElement")]
    unsafe impl ClassType for DOMHTMLOptionElement {
        #[inherits(DOMElement, DOMNode, DOMObject, WebScriptObject, NSObject)]
        type Super = DOMHTMLElement;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "WebKit_DOMHTMLOptionElement")]
unsafe impl DOMEventTarget for DOMHTMLOptionElement {}

#[cfg(feature = "WebKit_DOMHTMLOptionElement")]
unsafe impl NSCopying for DOMHTMLOptionElement {}

#[cfg(feature = "WebKit_DOMHTMLOptionElement")]
unsafe impl NSObjectProtocol for DOMHTMLOptionElement {}

extern_methods!(
    #[cfg(feature = "WebKit_DOMHTMLOptionElement")]
    unsafe impl DOMHTMLOptionElement {
        #[method(disabled)]
        pub unsafe fn disabled(&self) -> bool;

        #[method(setDisabled:)]
        pub unsafe fn setDisabled(&self, disabled: bool);

        #[cfg(feature = "WebKit_DOMHTMLFormElement")]
        #[method_id(@__retain_semantics Other form)]
        pub unsafe fn form(&self) -> Option<Id<DOMHTMLFormElement>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other label)]
        pub unsafe fn label(&self) -> Id<NSString>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setLabel:)]
        pub unsafe fn setLabel(&self, label: Option<&NSString>);

        #[method(defaultSelected)]
        pub unsafe fn defaultSelected(&self) -> bool;

        #[method(setDefaultSelected:)]
        pub unsafe fn setDefaultSelected(&self, default_selected: bool);

        #[method(selected)]
        pub unsafe fn selected(&self) -> bool;

        #[method(setSelected:)]
        pub unsafe fn setSelected(&self, selected: bool);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other value)]
        pub unsafe fn value(&self) -> Id<NSString>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setValue:)]
        pub unsafe fn setValue(&self, value: Option<&NSString>);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other text)]
        pub unsafe fn text(&self) -> Id<NSString>;

        #[method(index)]
        pub unsafe fn index(&self) -> c_int;
    }
);

extern_methods!(
    /// Methods declared on superclass `DOMObject`
    #[cfg(feature = "WebKit_DOMHTMLOptionElement")]
    unsafe impl DOMHTMLOptionElement {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "WebKit_DOMHTMLOptionElement")]
    unsafe impl DOMHTMLOptionElement {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
