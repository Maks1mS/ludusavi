//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::WebKit::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "WebKit_DOMHTMLParamElement")]
    #[deprecated]
    pub struct DOMHTMLParamElement;

    #[cfg(feature = "WebKit_DOMHTMLParamElement")]
    unsafe impl ClassType for DOMHTMLParamElement {
        #[inherits(DOMElement, DOMNode, DOMObject, WebScriptObject, NSObject)]
        type Super = DOMHTMLElement;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "WebKit_DOMHTMLParamElement")]
unsafe impl DOMEventTarget for DOMHTMLParamElement {}

#[cfg(feature = "WebKit_DOMHTMLParamElement")]
unsafe impl NSCopying for DOMHTMLParamElement {}

#[cfg(feature = "WebKit_DOMHTMLParamElement")]
unsafe impl NSObjectProtocol for DOMHTMLParamElement {}

extern_methods!(
    #[cfg(feature = "WebKit_DOMHTMLParamElement")]
    unsafe impl DOMHTMLParamElement {
        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other name)]
        pub unsafe fn name(&self) -> Id<NSString>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setName:)]
        pub unsafe fn setName(&self, name: Option<&NSString>);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other type)]
        pub unsafe fn r#type(&self) -> Id<NSString>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setType:)]
        pub unsafe fn setType(&self, r#type: Option<&NSString>);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other value)]
        pub unsafe fn value(&self) -> Id<NSString>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setValue:)]
        pub unsafe fn setValue(&self, value: Option<&NSString>);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other valueType)]
        pub unsafe fn valueType(&self) -> Id<NSString>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setValueType:)]
        pub unsafe fn setValueType(&self, value_type: Option<&NSString>);
    }
);

extern_methods!(
    /// Methods declared on superclass `DOMObject`
    #[cfg(feature = "WebKit_DOMHTMLParamElement")]
    unsafe impl DOMHTMLParamElement {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "WebKit_DOMHTMLParamElement")]
    unsafe impl DOMHTMLParamElement {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
