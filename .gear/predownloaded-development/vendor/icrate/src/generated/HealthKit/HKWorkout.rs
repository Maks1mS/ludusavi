//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::HealthKit::*;
use crate::UniformTypeIdentifiers::*;

ns_enum!(
    #[underlying(NSUInteger)]
    pub enum HKWorkoutActivityType {
        HKWorkoutActivityTypeAmericanFootball = 1,
        HKWorkoutActivityTypeArchery = 2,
        HKWorkoutActivityTypeAustralianFootball = 3,
        HKWorkoutActivityTypeBadminton = 4,
        HKWorkoutActivityTypeBaseball = 5,
        HKWorkoutActivityTypeBasketball = 6,
        HKWorkoutActivityTypeBowling = 7,
        HKWorkoutActivityTypeBoxing = 8,
        HKWorkoutActivityTypeClimbing = 9,
        HKWorkoutActivityTypeCricket = 10,
        HKWorkoutActivityTypeCrossTraining = 11,
        HKWorkoutActivityTypeCurling = 12,
        HKWorkoutActivityTypeCycling = 13,
        #[deprecated = "Use HKWorkoutActivityTypeSocialDance or HKWorkoutActivityTypeCardioDance"]
        HKWorkoutActivityTypeDance = 14,
        #[deprecated = "Use HKWorkoutActivityTypeSocialDance, HKWorkoutActivityTypeCardioDance, HKWorkoutActivityTypeBarre or HKWorkoutActivityTypePilates"]
        HKWorkoutActivityTypeDanceInspiredTraining = 15,
        HKWorkoutActivityTypeElliptical = 16,
        HKWorkoutActivityTypeEquestrianSports = 17,
        HKWorkoutActivityTypeFencing = 18,
        HKWorkoutActivityTypeFishing = 19,
        HKWorkoutActivityTypeFunctionalStrengthTraining = 20,
        HKWorkoutActivityTypeGolf = 21,
        HKWorkoutActivityTypeGymnastics = 22,
        HKWorkoutActivityTypeHandball = 23,
        HKWorkoutActivityTypeHiking = 24,
        HKWorkoutActivityTypeHockey = 25,
        HKWorkoutActivityTypeHunting = 26,
        HKWorkoutActivityTypeLacrosse = 27,
        HKWorkoutActivityTypeMartialArts = 28,
        HKWorkoutActivityTypeMindAndBody = 29,
        #[deprecated = "Use HKWorkoutActivityTypeMixedCardio or HKWorkoutActivityTypeHighIntensityIntervalTraining"]
        HKWorkoutActivityTypeMixedMetabolicCardioTraining = 30,
        HKWorkoutActivityTypePaddleSports = 31,
        HKWorkoutActivityTypePlay = 32,
        HKWorkoutActivityTypePreparationAndRecovery = 33,
        HKWorkoutActivityTypeRacquetball = 34,
        HKWorkoutActivityTypeRowing = 35,
        HKWorkoutActivityTypeRugby = 36,
        HKWorkoutActivityTypeRunning = 37,
        HKWorkoutActivityTypeSailing = 38,
        HKWorkoutActivityTypeSkatingSports = 39,
        HKWorkoutActivityTypeSnowSports = 40,
        HKWorkoutActivityTypeSoccer = 41,
        HKWorkoutActivityTypeSoftball = 42,
        HKWorkoutActivityTypeSquash = 43,
        HKWorkoutActivityTypeStairClimbing = 44,
        HKWorkoutActivityTypeSurfingSports = 45,
        HKWorkoutActivityTypeSwimming = 46,
        HKWorkoutActivityTypeTableTennis = 47,
        HKWorkoutActivityTypeTennis = 48,
        HKWorkoutActivityTypeTrackAndField = 49,
        HKWorkoutActivityTypeTraditionalStrengthTraining = 50,
        HKWorkoutActivityTypeVolleyball = 51,
        HKWorkoutActivityTypeWalking = 52,
        HKWorkoutActivityTypeWaterFitness = 53,
        HKWorkoutActivityTypeWaterPolo = 54,
        HKWorkoutActivityTypeWaterSports = 55,
        HKWorkoutActivityTypeWrestling = 56,
        HKWorkoutActivityTypeYoga = 57,
        HKWorkoutActivityTypeBarre = 58,
        HKWorkoutActivityTypeCoreTraining = 59,
        HKWorkoutActivityTypeCrossCountrySkiing = 60,
        HKWorkoutActivityTypeDownhillSkiing = 61,
        HKWorkoutActivityTypeFlexibility = 62,
        HKWorkoutActivityTypeHighIntensityIntervalTraining = 63,
        HKWorkoutActivityTypeJumpRope = 64,
        HKWorkoutActivityTypeKickboxing = 65,
        HKWorkoutActivityTypePilates = 66,
        HKWorkoutActivityTypeSnowboarding = 67,
        HKWorkoutActivityTypeStairs = 68,
        HKWorkoutActivityTypeStepTraining = 69,
        HKWorkoutActivityTypeWheelchairWalkPace = 70,
        HKWorkoutActivityTypeWheelchairRunPace = 71,
        HKWorkoutActivityTypeTaiChi = 72,
        HKWorkoutActivityTypeMixedCardio = 73,
        HKWorkoutActivityTypeHandCycling = 74,
        HKWorkoutActivityTypeDiscSports = 75,
        HKWorkoutActivityTypeFitnessGaming = 76,
        HKWorkoutActivityTypeCardioDance = 77,
        HKWorkoutActivityTypeSocialDance = 78,
        HKWorkoutActivityTypePickleball = 79,
        HKWorkoutActivityTypeCooldown = 80,
        HKWorkoutActivityTypeSwimBikeRun = 82,
        HKWorkoutActivityTypeTransition = 83,
        HKWorkoutActivityTypeOther = 3000,
    }
);

ns_enum!(
    #[underlying(NSInteger)]
    pub enum HKWorkoutEventType {
        HKWorkoutEventTypePause = 1,
        HKWorkoutEventTypeResume = 2,
        HKWorkoutEventTypeLap = 3,
        HKWorkoutEventTypeMarker = 4,
        HKWorkoutEventTypeMotionPaused = 5,
        HKWorkoutEventTypeMotionResumed = 6,
        HKWorkoutEventTypeSegment = 7,
        HKWorkoutEventTypePauseOrResumeRequest = 8,
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKWorkoutEvent")]
    pub struct HKWorkoutEvent;

    #[cfg(feature = "HealthKit_HKWorkoutEvent")]
    unsafe impl ClassType for HKWorkoutEvent {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "HealthKit_HKWorkoutEvent")]
unsafe impl NSCoding for HKWorkoutEvent {}

#[cfg(feature = "HealthKit_HKWorkoutEvent")]
unsafe impl NSCopying for HKWorkoutEvent {}

#[cfg(feature = "HealthKit_HKWorkoutEvent")]
unsafe impl NSObjectProtocol for HKWorkoutEvent {}

#[cfg(feature = "HealthKit_HKWorkoutEvent")]
unsafe impl NSSecureCoding for HKWorkoutEvent {}

extern_methods!(
    #[cfg(feature = "HealthKit_HKWorkoutEvent")]
    unsafe impl HKWorkoutEvent {
        #[method(type)]
        pub unsafe fn r#type(&self) -> HKWorkoutEventType;

        #[cfg(feature = "Foundation_NSDate")]
        #[deprecated]
        #[method_id(@__retain_semantics Other date)]
        pub unsafe fn date(&self) -> Id<NSDate>;

        #[cfg(feature = "Foundation_NSDateInterval")]
        #[method_id(@__retain_semantics Other dateInterval)]
        pub unsafe fn dateInterval(&self) -> Id<NSDateInterval>;

        #[cfg(all(feature = "Foundation_NSDictionary", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other metadata)]
        pub unsafe fn metadata(&self) -> Option<Id<NSDictionary<NSString, AnyObject>>>;

        #[cfg(feature = "Foundation_NSDate")]
        #[deprecated]
        #[method_id(@__retain_semantics Other workoutEventWithType:date:)]
        pub unsafe fn workoutEventWithType_date(
            r#type: HKWorkoutEventType,
            date: &NSDate,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "Foundation_NSDate",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString"
        ))]
        #[deprecated]
        #[method_id(@__retain_semantics Other workoutEventWithType:date:metadata:)]
        pub unsafe fn workoutEventWithType_date_metadata(
            r#type: HKWorkoutEventType,
            date: &NSDate,
            metadata: &NSDictionary<NSString, AnyObject>,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "Foundation_NSDateInterval",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString"
        ))]
        #[method_id(@__retain_semantics Other workoutEventWithType:dateInterval:metadata:)]
        pub unsafe fn workoutEventWithType_dateInterval_metadata(
            r#type: HKWorkoutEventType,
            date_interval: &NSDateInterval,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "HealthKit_HKWorkoutEvent")]
    unsafe impl HKWorkoutEvent {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HealthKit_HKWorkout")]
    pub struct HKWorkout;

    #[cfg(feature = "HealthKit_HKWorkout")]
    unsafe impl ClassType for HKWorkout {
        #[inherits(HKObject, NSObject)]
        type Super = HKSample;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "HealthKit_HKWorkout")]
unsafe impl NSCoding for HKWorkout {}

#[cfg(feature = "HealthKit_HKWorkout")]
unsafe impl NSObjectProtocol for HKWorkout {}

#[cfg(feature = "HealthKit_HKWorkout")]
unsafe impl NSSecureCoding for HKWorkout {}

extern_methods!(
    #[cfg(feature = "HealthKit_HKWorkout")]
    unsafe impl HKWorkout {
        #[method(workoutActivityType)]
        pub unsafe fn workoutActivityType(&self) -> HKWorkoutActivityType;

        #[cfg(all(feature = "Foundation_NSArray", feature = "HealthKit_HKWorkoutEvent"))]
        #[method_id(@__retain_semantics Other workoutEvents)]
        pub unsafe fn workoutEvents(&self) -> Option<Id<NSArray<HKWorkoutEvent>>>;

        #[cfg(all(
            feature = "Foundation_NSArray",
            feature = "HealthKit_HKWorkoutActivity"
        ))]
        #[method_id(@__retain_semantics Other workoutActivities)]
        pub unsafe fn workoutActivities(&self) -> Id<NSArray<HKWorkoutActivity>>;

        #[method(duration)]
        pub unsafe fn duration(&self) -> NSTimeInterval;

        #[cfg(feature = "HealthKit_HKQuantity")]
        #[deprecated = "Use statisticsForType: passing the HKQuantityType for HKQuantityTypeIdentifierActiveEnergyBurned"]
        #[method_id(@__retain_semantics Other totalEnergyBurned)]
        pub unsafe fn totalEnergyBurned(&self) -> Option<Id<HKQuantity>>;

        #[cfg(feature = "HealthKit_HKQuantity")]
        #[deprecated = "Use statisticsForType: passing the HKQuantityType for the desired distance type"]
        #[method_id(@__retain_semantics Other totalDistance)]
        pub unsafe fn totalDistance(&self) -> Option<Id<HKQuantity>>;

        #[cfg(feature = "HealthKit_HKQuantity")]
        #[deprecated = "Use statisticsForType: passing the HKQuantityType for HKQuantityTypeIdentifierSwimmingStrokeCount"]
        #[method_id(@__retain_semantics Other totalSwimmingStrokeCount)]
        pub unsafe fn totalSwimmingStrokeCount(&self) -> Option<Id<HKQuantity>>;

        #[cfg(feature = "HealthKit_HKQuantity")]
        #[deprecated = "Use statisticsForType: passing the HKQuantityType for HKQuantityTypeIdentifierFlightClimbed"]
        #[method_id(@__retain_semantics Other totalFlightsClimbed)]
        pub unsafe fn totalFlightsClimbed(&self) -> Option<Id<HKQuantity>>;

        #[cfg(all(
            feature = "Foundation_NSDictionary",
            feature = "HealthKit_HKQuantityType",
            feature = "HealthKit_HKStatistics"
        ))]
        #[method_id(@__retain_semantics Other allStatistics)]
        pub unsafe fn allStatistics(&self) -> Id<NSDictionary<HKQuantityType, HKStatistics>>;

        #[cfg(all(
            feature = "HealthKit_HKQuantityType",
            feature = "HealthKit_HKStatistics"
        ))]
        #[method_id(@__retain_semantics Other statisticsForType:)]
        pub unsafe fn statisticsForType(
            &self,
            quantity_type: &HKQuantityType,
        ) -> Option<Id<HKStatistics>>;

        #[cfg(feature = "Foundation_NSDate")]
        #[method_id(@__retain_semantics Other workoutWithActivityType:startDate:endDate:)]
        pub unsafe fn workoutWithActivityType_startDate_endDate(
            workout_activity_type: HKWorkoutActivityType,
            start_date: &NSDate,
            end_date: &NSDate,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "Foundation_NSArray",
            feature = "Foundation_NSDate",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString",
            feature = "HealthKit_HKQuantity",
            feature = "HealthKit_HKWorkoutEvent"
        ))]
        #[method_id(@__retain_semantics Other workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:metadata:)]
        pub unsafe fn workoutWithActivityType_startDate_endDate_workoutEvents_totalEnergyBurned_totalDistance_metadata(
            workout_activity_type: HKWorkoutActivityType,
            start_date: &NSDate,
            end_date: &NSDate,
            workout_events: Option<&NSArray<HKWorkoutEvent>>,
            total_energy_burned: Option<&HKQuantity>,
            total_distance: Option<&HKQuantity>,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "Foundation_NSArray",
            feature = "Foundation_NSDate",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString",
            feature = "HealthKit_HKDevice",
            feature = "HealthKit_HKQuantity",
            feature = "HealthKit_HKWorkoutEvent"
        ))]
        #[method_id(@__retain_semantics Other workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:device:metadata:)]
        pub unsafe fn workoutWithActivityType_startDate_endDate_workoutEvents_totalEnergyBurned_totalDistance_device_metadata(
            workout_activity_type: HKWorkoutActivityType,
            start_date: &NSDate,
            end_date: &NSDate,
            workout_events: Option<&NSArray<HKWorkoutEvent>>,
            total_energy_burned: Option<&HKQuantity>,
            total_distance: Option<&HKQuantity>,
            device: Option<&HKDevice>,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "Foundation_NSDate",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString",
            feature = "HealthKit_HKQuantity"
        ))]
        #[method_id(@__retain_semantics Other workoutWithActivityType:startDate:endDate:duration:totalEnergyBurned:totalDistance:metadata:)]
        pub unsafe fn workoutWithActivityType_startDate_endDate_duration_totalEnergyBurned_totalDistance_metadata(
            workout_activity_type: HKWorkoutActivityType,
            start_date: &NSDate,
            end_date: &NSDate,
            duration: NSTimeInterval,
            total_energy_burned: Option<&HKQuantity>,
            total_distance: Option<&HKQuantity>,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "Foundation_NSDate",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString",
            feature = "HealthKit_HKDevice",
            feature = "HealthKit_HKQuantity"
        ))]
        #[method_id(@__retain_semantics Other workoutWithActivityType:startDate:endDate:duration:totalEnergyBurned:totalDistance:device:metadata:)]
        pub unsafe fn workoutWithActivityType_startDate_endDate_duration_totalEnergyBurned_totalDistance_device_metadata(
            workout_activity_type: HKWorkoutActivityType,
            start_date: &NSDate,
            end_date: &NSDate,
            duration: NSTimeInterval,
            total_energy_burned: Option<&HKQuantity>,
            total_distance: Option<&HKQuantity>,
            device: Option<&HKDevice>,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "Foundation_NSArray",
            feature = "Foundation_NSDate",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString",
            feature = "HealthKit_HKDevice",
            feature = "HealthKit_HKQuantity",
            feature = "HealthKit_HKWorkoutEvent"
        ))]
        #[method_id(@__retain_semantics Other workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:totalSwimmingStrokeCount:device:metadata:)]
        pub unsafe fn workoutWithActivityType_startDate_endDate_workoutEvents_totalEnergyBurned_totalDistance_totalSwimmingStrokeCount_device_metadata(
            workout_activity_type: HKWorkoutActivityType,
            start_date: &NSDate,
            end_date: &NSDate,
            workout_events: Option<&NSArray<HKWorkoutEvent>>,
            total_energy_burned: Option<&HKQuantity>,
            total_distance: Option<&HKQuantity>,
            total_swimming_stroke_count: Option<&HKQuantity>,
            device: Option<&HKDevice>,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "Foundation_NSArray",
            feature = "Foundation_NSDate",
            feature = "Foundation_NSDictionary",
            feature = "Foundation_NSString",
            feature = "HealthKit_HKDevice",
            feature = "HealthKit_HKQuantity",
            feature = "HealthKit_HKWorkoutEvent"
        ))]
        #[method_id(@__retain_semantics Other workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:totalFlightsClimbed:device:metadata:)]
        pub unsafe fn workoutWithActivityType_startDate_endDate_workoutEvents_totalEnergyBurned_totalDistance_totalFlightsClimbed_device_metadata(
            workout_activity_type: HKWorkoutActivityType,
            start_date: &NSDate,
            end_date: &NSDate,
            workout_events: Option<&NSArray<HKWorkoutEvent>>,
            total_energy_burned: Option<&HKQuantity>,
            total_distance: Option<&HKQuantity>,
            total_flights_climbed: Option<&HKQuantity>,
            device: Option<&HKDevice>,
            metadata: Option<&NSDictionary<NSString, AnyObject>>,
        ) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `HKObject`
    #[cfg(feature = "HealthKit_HKWorkout")]
    unsafe impl HKWorkout {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "HealthKit_HKWorkout")]
    unsafe impl HKWorkout {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);

extern_static!(HKPredicateKeyPathWorkoutDuration: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutTotalDistance: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutTotalEnergyBurned: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutType: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutTotalSwimmingStrokeCount: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutTotalFlightsClimbed: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutSumQuantity: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutMinimumQuantity: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutMaximumQuantity: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutAverageQuantity: &'static NSString);

extern_static!(HKPredicateKeyPathWorkoutActivity: &'static NSString);

extern_static!(HKWorkoutSortIdentifierDuration: &'static NSString);

extern_static!(HKWorkoutSortIdentifierTotalDistance: &'static NSString);

extern_static!(HKWorkoutSortIdentifierTotalEnergyBurned: &'static NSString);

extern_static!(HKWorkoutSortIdentifierTotalSwimmingStrokeCount: &'static NSString);

extern_static!(HKWorkoutSortIdentifierTotalFlightsClimbed: &'static NSString);
