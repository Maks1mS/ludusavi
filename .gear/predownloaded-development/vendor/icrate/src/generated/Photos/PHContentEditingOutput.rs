//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreLocation::*;
use crate::Foundation::*;
use crate::PhotoKit::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "PhotoKit_PHContentEditingOutput")]
    pub struct PHContentEditingOutput;

    #[cfg(feature = "PhotoKit_PHContentEditingOutput")]
    unsafe impl ClassType for PHContentEditingOutput {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "PhotoKit_PHContentEditingOutput")]
unsafe impl NSObjectProtocol for PHContentEditingOutput {}

extern_methods!(
    #[cfg(feature = "PhotoKit_PHContentEditingOutput")]
    unsafe impl PHContentEditingOutput {
        #[cfg(feature = "PhotoKit_PHContentEditingInput")]
        #[method_id(@__retain_semantics Init initWithContentEditingInput:)]
        pub unsafe fn initWithContentEditingInput(
            this: Option<Allocated<Self>>,
            content_editing_input: &PHContentEditingInput,
        ) -> Id<Self>;

        #[cfg(feature = "PhotoKit_PHAdjustmentData")]
        #[method_id(@__retain_semantics Other adjustmentData)]
        pub unsafe fn adjustmentData(&self) -> Option<Id<PHAdjustmentData>>;

        #[cfg(feature = "PhotoKit_PHAdjustmentData")]
        #[method(setAdjustmentData:)]
        pub unsafe fn setAdjustmentData(&self, adjustment_data: Option<&PHAdjustmentData>);

        #[cfg(feature = "Foundation_NSURL")]
        #[method_id(@__retain_semantics Other renderedContentURL)]
        pub unsafe fn renderedContentURL(&self) -> Id<NSURL>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "PhotoKit_PHContentEditingOutput")]
    unsafe impl PHContentEditingOutput {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
